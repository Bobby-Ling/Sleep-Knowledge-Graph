[metadata]
file_name = "中国发作性睡病诊断与治疗指南（2022版）.md"
processed_at = "2024-12-12 01:32:44"
total_pairs = 35

[[message_pairs]]
timestamp = "2024-12-12 01:31:42"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/004-发病机制.md
[文本块]
发病机制  

研究结果表明，多基因易患性、自身免疫因素、感染等影响睡眠与觉醒相关神经环路的功能，导致HL。

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:45"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/001-中国发作性睡病诊断与治疗指南2022版.md
[文本块]
中国发作性睡病诊断与治疗指南(2022版)  
发布单位: 中华医学会神经病学分会睡眠障碍学组  
通信作者: 王玉平, 首都医科大学宣武医院神经内科, 北京100053, Email: wangyuping01@sina.cn  

摘要:  
发作性睡病是一种神经内科的罕见病。《中国发作性睡病诊断与治疗指南(2022版)》结合国内外相关研究进展、新药的应用，及时更新我国现有指南。  
指南增加了:  
(1) 流行病学和发病机制的最新研究结果和精准的特征性症状描述;  
(2) 推荐实用的量表，增加操作整夜多导睡眠和多次睡眠潜伏期试验的细节和设计诊断流程图;  
(3) 针对不同症状，药物治疗按推荐及证据等级高低逐一说明。  

新版指南在内容上更丰富，且科学性和实用性更强，具临床指导价值。  

关键词:  
发作性睡病; 日间过度思睡; 猝倒症; 人睡前幻觉; 治疗

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.description = coalesce(n.description, '一种神经内科的罕见病'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Symptom {name: '日间过度思睡'})
SET 
    n.description = coalesce(n.description, '患者在白天异常嗜睡'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '猝倒症'})
SET 
    n.description = coalesce(n.description, '患者在情绪激动时突然失去意识'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '偶发');

MERGE (n:Symptom {name: '人睡前幻觉'})
SET 
    n.description = coalesce(n.description, '患者在入睡前出现虚幻的体验'),
    n.severity = coalesce(n.severity, '轻微'),
    n.frequency = coalesce(n.frequency, '偶发');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '日间过度思睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '猝倒症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '人睡前幻觉'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '轻微');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:46"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/002-Chinese-guidelines-for-diagnosis-and-treatment-of-.md
[文本块]
# Chinese guidelines for diagnosis and treatment of narcolepsy (2022)

- Author: Wang Yuping 
  - Affiliation: Department of Neurology, Xuanwu Hospital, Capital Medical University, Beijing 100053, China 
  - Email: wangyuping01@sina.cn

## Abstract
- Narcolepsy: A rare neurology disease.
- The 2022 guidelines updated the existing guidelines in China.
- Content broadened to include:
  - Epidemiology 
  - Pathogenesis 
  - Characteristic symptoms 
  - Practical scales 
  - Nocturnal polysomnogram details 
  - Multiple sleep latency test operations 
  - Diagnostic flow charts
- Drugs explained by symptoms, level of recommendation, and evidence.

## Key Words
- Narcolepsy
- Excessive daytime sleepiness (EDS)
- Cataplexy
- Hypnagogic hallucinations
- Therapy

## Concept of Narcolepsy
- Originally introduced by French doctor Gélineau in 1880.
- Main clinical features: 
  - Excessive daytime sleepiness (EDS)
  - Cataplexy 
  - Nocturnal sleep disturbance
- Occurs in childhood, diagnosis can be delayed 8-22 years.
- Severe clinical symptoms impact learning, living, and social functioning.
- Leads to challenges in education, employment, income reduction, and loss of promotion opportunities.
- Timely and standardized diagnosis and treatment are crucial for improving patients' conditions and aiding their return to society.
- 2022 guidelines resulted from an initiative by the Chinese Society of Sleep Disorders, based on evidence-based medical principles, referencing national and international guidelines and research findings.
- Updated from the 2015 \"Chinese guidelines for diagnosis and treatment of narcolepsy.\"

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.description = coalesce(n.description, '一种罕见的神经疾病'),
    n.category = coalesce(n.category, '神经系统疾病');

MERGE (n:Symptom {name: '白天嗜睡'})
SET 
    n.description = coalesce(n.description, '患者在日常生活中表现出异常的嗜睡'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '猝倒'})
SET 
    n.description = coalesce(n.description, '患者在情绪激动时发生肌力突然减弱的现象'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '偶尔');

MERGE (n:Symptom {name: '入睡幻觉'})
SET 
    n.description = coalesce(n.description, '在入睡时出现幻觉的现象'),
    n.severity = coalesce(n.severity, '轻微'),
    n.frequency = coalesce(n.frequency, '偶尔');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '白天嗜睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '猝倒'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '入睡幻觉'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '轻微');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:48"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/003-流行病学.md
[文本块]
# 流行病学  

发作性睡病是全球公认的罕见病，不同国家报道其患病率有较大差异。已公开的流行病学资料显示，全球各地区患病率从0.00023%到0.05%。在亚洲地区，韩国患病率为0.015%，中国台湾地区的患病率为0.0129%。中国大陆目前尚缺乏系统性、大规模的流行病学研究。  

发作性睡病发病可能与H1N1流感病毒感染及流感疫苗使用有关。中国2010年发作性睡病新发病例数明显升高，可能与2009年冬季H1N1流感流行有关。北欧一些国家报道，2010年发作性睡病发病率增加6~9倍，可能与2009年冬季H1N1流感病毒感染及甲型流感疫苗使用有关。欧洲高加索人的平均发病年龄为23岁，而中国人的高峰发病年龄小于10岁。男女均可患病，欧洲发作性睡病网络中高加索人的发作性睡病患者男女性别差异不大，但国内的一项回顾性研究结果显示中国伴猝倒的发作性睡病患者男女比率为2:1。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.code = coalesce(n.code, 'G47.4'),
    n.description = coalesce(n.description, '发作性睡病是全球公认的罕见病'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '轻度');

MERGE (n:Disease {name: 'H1N1流感'})
SET 
    n.code = coalesce(n.code, 'J09'),
    n.description = coalesce(n.description, 'H1N1流感是一种病毒性呼吸道感染'),
    n.category = coalesce(n.category, '病毒感染'),
    n.severity = coalesce(n.severity, '中度');

MERGE (n:Disease {name: '甲型流感'})
SET 
    n.code = coalesce(n.code, 'J10'),
    n.description = coalesce(n.description, '甲型流感是一种由甲型流感病毒引起的疾病'),
    n.category = coalesce(n.category, '病毒感染'),
    n.severity = coalesce(n.severity, '中度');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = 'H1N1流感'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '高'),
    r.evidence_level = coalesce(r.evidence_level, '低');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '甲型流感'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '中'),
    r.evidence_level = coalesce(r.evidence_level, '低');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:49"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/005-一遗传机制.md
[文本块]
# 一、遗传机制  

人类白细胞抗原(HLA)等位基因与发作性睡病1型高度相关。具体关系如下：  
- HLA等位基因: DQB1*06:02, DQB1*03:01  
- 非HLA基因: 肿瘤坏死因子α2, 嘌呤能受体P2Y11基因  

以上基因均与发作性睡病存在相关性。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.code = coalesce(n.code, 'G47.4'),
    n.description = coalesce(n.description, '一种以过度的日间嗜睡为特征的神经疾病'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中度');

MERGE (n:RiskFactor {name: 'HLA等位基因'})
SET 
    n.description = coalesce(n.description, '与发作性睡病1型高度相关的基因'),
    n.impact_level = coalesce(n.impact_level, '高');

MERGE (n:RiskFactor {name: '肿瘤坏死因子α2'})
SET 
    n.description = coalesce(n.description, '与发作性睡病相关的非HLA基因'),
    n.impact_level = coalesce(n.impact_level, '中');

MERGE (n:RiskFactor {name: '嘌呤能受体P2Y11基因'})
SET 
    n.description = coalesce(n.description, '与发作性睡病相关的非HLA基因'),
    n.impact_level = coalesce(n.impact_level, '中');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = 'HLA等位基因'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '高'),
    r.evidence_level = coalesce(r.evidence_level, '强');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '肿瘤坏死因子α2'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '中'),
    r.evidence_level = coalesce(r.evidence_level, '中');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '嘌呤能受体P2Y11基因'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '中'),
    r.evidence_level = coalesce(r.evidence_level, '中');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:51"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/006-二自身免疫机制.md
[文本块]
自身免疫机制

- 外侧下丘脑分泌素 (hypocretin, Hcrt)
  - 抗Hcrt自身抗体
    - 位于Hcrt神经元上
- 发作性睡病患者
  - TRIB2 (tribbles homolog 2)
    - 特异性抗体水平升高
    - 与Hcrt神经元损伤的因果关系存在不同意见
- 细胞
  - Hcrt的CD4+和CD8+细胞
    - 在发作性睡病患者中表达升高
- H1N1流感病毒
  - 免疫应答
    - 递呈给CD4+ T细胞
      - 引发针对自身抗原的免疫反应

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'});

MERGE (n:Symptom {name: '抗Hcrt自身抗体'})
SET 
    n.description = coalesce(n.description, '位于Hcrt神经元上');

MERGE (n:Symptom {name: 'TRIB2特异性抗体水平升高'})
SET 
    n.description = coalesce(n.description, '与Hcrt神经元损伤的因果关系存在不同意见');

MERGE (n:Symptom {name: 'Hcrt的CD4+和CD8+细胞'})
SET 
    n.description = coalesce(n.description, '在发作性睡病患者中表达升高');

MERGE (n:Symptom {name: 'H1N1流感病毒免疫应答'})
SET 
    n.description = coalesce(n.description, '递呈给CD4+ T细胞，引发针对自身抗原的免疫反应');

// 关系更新
MATCH (from) WHERE from.name = '抗Hcrt自身抗体'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = 'TRIB2特异性抗体水平升高'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = 'Hcrt的CD4+和CD8+细胞'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = 'H1N1流感病毒免疫应答'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '中'),
    r.severity = coalesce(r.severity, '中等');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:56"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/007-三感染机制.md
[文本块]
感染机制包括感染源（细菌或病毒）和疫苗接种后诱导产生的T细胞相关性自身免疫反应，导致发作性睡病症状。常见感染源有化脓性链球菌、甲型流感病毒、甲型流感疫苗Pandemrix（葛兰素史克公司，英国）。

神经环路变化方面，发作性睡病1型患者脑脊液的下丘脑分泌素-1（hypocretin-1, Hcrt-1）水平下降，尸检证实发作性睡病1型患者约90%的Hcrt神经元选择性丢失。这导致腹外侧导水管周围灰质、被盖背外侧核/脑桥腹外侧区被盖核的胆碱能神经元、蓝斑的去甲肾上腺素能和中缝背核的5-羟色胺能神经元无法抑制快速眼球运动睡眠的发生，且通过蓝斑下核影响脊髓运动神经元，导致骨骼肌失张力和猝倒发作。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.code = coalesce(n.code, 'G47.4'),
    n.description = coalesce(n.description, '发作性睡病是一种慢性中枢神经系统疾病，以过分嗜睡和睡眠发作为主要特征'),
    n.category = coalesce(n.category, '神经系统疾病'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Symptom {name: '下丘脑分泌素-1水平下降'})
SET 
    n.description = coalesce(n.description, '患者脑脊液中的下丘脑分泌素-1水平下降'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Symptom {name: '骨骼肌失张力'})
SET 
    n.description = coalesce(n.description, '发作性睡病患者在睡眠发作时出现骨骼肌失张力'),
    n.severity = coalesce(n.severity, '重度'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Symptom {name: '猝倒发作'})
SET 
    n.description = coalesce(n.description, '患者在强烈情绪刺激下突发的猝倒'),
    n.severity = coalesce(n.severity, '重度'),
    n.frequency = coalesce(n.frequency, '时常发生');

MERGE (n:Examination {name: '脑脊液检查'})
SET 
    n.description = coalesce(n.description, '通过分析脑脊液中的成分来诊断神经系统疾病'),
    n.method = coalesce(n.method, '脑脊液采样'),
    n.requirement = coalesce(n.requirement, '需进行神经系统评估');

MERGE (n:Treatment {name: '刺激事件避免'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '避免强烈情感刺激以减少猝倒发作'),
    n.dosage = coalesce(n.dosage, '无'),
    n.duration = coalesce(n.duration, '长期'),
    n.contraindication = coalesce(n.contraindication, '无');

MERGE (n:Complication {name: '日间嗜睡'})
SET 
    n.description = coalesce(n.description, '患者白天易感到困倦'),
    n.severity = coalesce(n.severity, '中等');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '下丘脑分泌素-1水平下降'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '骨骼肌失张力'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '重度');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '猝倒发作'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '时常发生'),
    r.severity = coalesce(r.severity, '重度');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '脑脊液检查'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '刺激事件避免'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '长期管理');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '日间嗜睡'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.9),
    r.timeframe = coalesce(r.timeframe, '长期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:59"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/010-一核心症状.md
[文本块]
# 一、核心症状（续）
4. 睡眠瘫痪: 发生在刚入睡或从睡眠向觉醒转换过程中，可能是发作时患者直接进入REM睡眠所致，通常发生率为25%至50%。发作时患者虽然意识清醒，但无法自主活动或讲话，常伴呼吸困难和各种形式的幻觉，主要为恐怖性体验，持续时间为数十秒到数分钟，在外界刺激（身体受到触碰）下可迅速恢复正常。

5. 夜间睡眠紊乱: 包括夜间睡眠不安，表现为反复夜间睡眠中断、觉醒次数增多和时间延长，导致睡眠片段化，发生率为30%至95%。可伴随睡眠中周期性腿动、不自主运动、REM期或非快速眼球运动（NREM）期异态睡眠及阻塞性睡眠呼吸暂停（OSA）等。其中，REM期睡眠行为障碍（RBD）在发作性睡病人群中发生率为36%至61%。发作性睡病患者的RBD与非发作性睡病患者的RBD在临床表现方面不尽相同，前者起病时间更早，但暴力性动作及夜间发作次数较非发作性睡病患者少，目前尚无证据显示合并发作性睡病的RBD表现是神经系统退行性。此外，OSA在发作性睡病人群中也比较常见，其发生率超过24.8%，显著高于普通人群，易漏诊或误诊。约14.7%的发作性睡病1型患者存在不宁腿综合征，其预测因素包括老年、血清铁蛋白水平低（<75 µg/L）和（或）转铁蛋白饱和度低（<45%）。

"""
response = """
// 节点更新
MERGE (n:Symptom {name: '睡眠瘫痪'})
SET 
    n.description = coalesce(n.description, '发生在刚入睡或从睡眠向觉醒转换过程中，可能是发作时患者直接进入REM睡眠所致，通常发生率为25%至50%。发作时患者虽然意识清醒，但无法自主活动或讲话，常伴呼吸困难和各种形式的幻觉，主要为恐怖性体验，持续时间为数十秒到数分钟，在外界刺激（身体受到触碰）下可迅速恢复正常'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '25%-50%');

MERGE (n:Symptom {name: '夜间睡眠紊乱'})
SET 
    n.description = coalesce(n.description, '包括夜间睡眠不安，表现为反复夜间睡眠中断、觉醒次数增多和时间延长，导致睡眠片段化，发生率为30%至95%。可伴随睡眠中周期性腿动、不自主运动、REM期或非快速眼球运动（NREM）期异态睡眠及阻塞性睡眠呼吸暂停（OSA）等。'),
    n.severity = coalesce(n.severity, '高'),
    n.frequency = coalesce(n.frequency, '30%-95%');

MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.description = coalesce(n.description, '一种睡眠障碍，包含多种症状，如睡眠瘫痪和夜间睡眠紊乱'),
    n.category = coalesce(n.category, '睡眠疾病'),
    n.severity = coalesce(n.severity, '中等');

// 关系更新
MATCH (from) WHERE from.name = '睡眠瘫痪'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, 's1.frequency'),
    r.severity = coalesce(r.severity, 's1.severity');

MATCH (from) WHERE from.name = '夜间睡眠紊乱'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, 's2.frequency'),
    r.severity = coalesce(r.severity, 's2.severity');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:59"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/013-二神经精神量表.md
[文本块]
神经精神量表  
- 评价认知相关量表  
  - 简易精神状态检查量表 (MMSE)  
  - 蒙特利尔认知评估量表 (MoCA)  
- 评价精神状况的量表  
  - 阳性阴性症状量表 (Positive and Negative Syndrome Scale)  
- 焦虑抑郁量表  
- 认知和精神状况评估量表  
  - 注意力缺陷或多动和冲动量表 (Attention Deficit Hyperactivity Disorder)  
- 自闭症谱系筛查问卷 (Autism Spectrum Disorder Screening Questionnaire)  
- 通过 MMSE 和 MoCA 评估患者认知水平  

"""
response = """
// 节点更新
MERGE (n:Scale {name: '简易精神状态检查量表'})
SET 
    n.description = coalesce(n.description, '用于评估认知功能'),
    n.score_range = coalesce(n.score_range, '0-30'),
    n.interpretation = coalesce(n.interpretation, '分数越高，认知能力越好');

MERGE (n:Scale {name: '蒙特利尔认知评估量表'})
SET 
    n.description = coalesce(n.description, '评估认知能力的一种量表'),
    n.score_range = coalesce(n.score_range, '0-30'),
    n.interpretation = coalesce(n.interpretation, '分数越高，认知能力越好');

MERGE (n:Scale {name: '阳性阴性症状量表'})
SET 
    n.description = coalesce(n.description, '用于评估精神状况的量表'),
    n.score_range = coalesce(n.score_range, '0-112'),
    n.interpretation = coalesce(n.interpretation, '分数越高，症状越严重');

MERGE (n:Scale {name: '焦虑抑郁量表'})
SET 
    n.description = coalesce(n.description, '评估个体焦虑和抑郁程度的量表'),
    n.score_range = coalesce(n.score_range, '0-63'),
    n.interpretation = coalesce(n.interpretation, '分数越高，焦虑和抑郁程度越严重');

MERGE (n:Scale {name: '注意力缺陷或多动和冲动量表'})
SET 
    n.description = coalesce(n.description, '用于评估注意力缺陷和多动症状的量表'),
    n.score_range = coalesce(n.score_range, '0-39'),
    n.interpretation = coalesce(n.interpretation, '分数越高，症状越明显');

MERGE (n:Scale {name: '自闭症谱系筛查问卷'})
SET 
    n.description = coalesce(n.description, '用于筛查自闭症谱系障碍的问卷'),
    n.score_range = coalesce(n.score_range, '0-22'),
    n.interpretation = coalesce(n.interpretation, '分数越高，可能性越大');

// 关系更新
MATCH (from) WHERE from.name = '简易精神状态检查量表'
MATCH (to) WHERE to.name = '自闭症谱系筛查问卷'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.9),
    r.recommendation_level = coalesce(r.recommendation_level, '高');

MATCH (from) WHERE from.name = '蒙特利尔认知评估量表'
MATCH (to) WHERE to.name = '自闭症谱系筛查问卷'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.85),
    r.recommendation_level = coalesce(r.recommendation_level, '高');

MATCH (from) WHERE from.name = '阳性阴性症状量表'
MATCH (to) WHERE to.name = '焦虑抑郁量表'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.8),
    r.recommendation_level = coalesce(r.recommendation_level, '中');

MATCH (from) WHERE from.name = '注意力缺陷或多动和冲动量表'
MATCH (to) WHERE to.name = '焦虑抑郁量表'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.75),
    r.recommendation_level = coalesce(r.recommendation_level, '中');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:00"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/011-二其他症状.md
[文本块]
# 二、其他症状

1. 肥胖:  
   - 发生在发作性睡病1型患者中更为常见。  
   - 体重指数(body mass index)通常≥30，可能在发病后1年内出现体重急剧增加。  
   - 可能与思睡导致的体力活动减少、基础代谢率减低、Hcrt能神经介导的能量代谢障碍、食欲异常、自主神经系统活动变化有关。

2. 性早熟:  
   - 意大利报道约17%的儿童期发病的发作性睡病患者伴有性早熟，国内报道该比例为7.4%。  
   - 机制可能与Hcrt能神经障碍相关的神经-内分泌-代谢紊乱有关。

3. 精神障碍:  
   - 25%的发作性睡病患者有惊恐发作或社交恐惧等症状。  
   - 18%至57%的发作性睡病患者伴有抑郁、兴趣低下、快感缺乏。  
   - 有病例报道显示，发作性睡病可与精神分裂症并存，但相对少见。

4. 认知功能损害:  
   - Hcrt-1与脑内多种神经递质及前额叶功能相关。  
   - 认知功能损害表现为工作记忆、执行功能和持续注意力缺陷。  
   - 损害程度与发作性睡病的严重程度、是否合并猝倒发作、病程及诊断时机、治疗等因素相关。

5. 偏头痛:  
   - 发作性睡病1型患者中偏头痛发生率显著增高，为20%至45%，女性略多于男性。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.short_name = coalesce(n.short_name, 'Narcolepsy');

MERGE (n:Symptom {name: '肥胖'})
SET 
    n.description = coalesce(n.description, '发生在发作性睡病1型患者中更为常见。体重指数通常≥30，可能在发病后1年内出现体重急剧增加。'),
    n.severity = coalesce(n.severity, '未知'),
    n.frequency = coalesce(n.frequency, '发生较常');

MERGE (n:Symptom {name: '性早熟'})
SET 
    n.description = coalesce(n.description, '意大利报道约17%的儿童期发病的发作性睡病患者伴有性早熟，国内报道该比例为7.4%。'),
    n.severity = coalesce(n.severity, '未知'),
    n.frequency = coalesce(n.frequency, '发生较少');

MERGE (n:Symptom {name: '精神障碍'})
SET 
    n.description = coalesce(n.description, '25%的发作性睡病患者有惊恐发作或社交恐惧等症状，18%至57%的发作性睡病患者伴有抑郁、兴趣低下、快感缺乏。'),
    n.severity = coalesce(n.severity, '中'),
    n.frequency = coalesce(n.frequency, '发生较常');

MERGE (n:Symptom {name: '认知功能损害'})
SET 
    n.description = coalesce(n.description, 'Hcrt-1与脑内多种神经递质及前额叶功能相关。表现为工作记忆、执行功能和持续注意力缺陷。'),
    n.severity = coalesce(n.severity, '中'),
    n.frequency = coalesce(n.frequency, '发生较常');

MERGE (n:Symptom {name: '偏头痛'})
SET 
    n.description = coalesce(n.description, '发作性睡病1型患者中偏头痛发生率显著增高，为20%至45%，女性略多于男性。'),
    n.severity = coalesce(n.severity, '中'),
    n.frequency = coalesce(n.frequency, '发生较常');

// 关系更新
MATCH (from) WHERE from.name = '肥胖'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '性早熟'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '低');

MATCH (from) WHERE from.name = '精神障碍'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.6),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '偏头痛'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.65),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:03"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/017-五脑影像学检查.md
[文本块]
五、脑影像学检查  
- 患者类型：发作性睡病1型、发作性睡病2型  
- 检查项目：脑核磁共振、CT检查  
- 检查目的：排除相关的脑部肿瘤、脱髓鞘病、变性病、脑损伤导致的继发性发作性睡病  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病1型'});

MERGE (n:Disease {name: '发作性睡病2型'});

MERGE (n:Examination {name: '脑核磁共振'})
SET 
    n.description = coalesce(n.description, '一种成像技术，用于观察脑部结构'),
    n.method = coalesce(n.method, '磁共振成像'),
    n.requirement = coalesce(n.requirement, '在专业医疗机构进行');

MERGE (n:Examination {name: 'CT检查'})
SET 
    n.description = coalesce(n.description, '使用X射线生成脑部图像'),
    n.method = coalesce(n.method, '计算机断层扫描'),
    n.requirement = coalesce(n.requirement, '在专业医疗机构进行');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = '脑核磁共振'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = 'CT检查'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '发作性睡病2型'
MATCH (to) WHERE to.name = '脑核磁共振'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '发作性睡病2型'
MATCH (to) WHERE to.name = 'CT检查'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:03"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/018-六免疫相关检测.md
[文本块]
六、免疫相关检测  

目前尚未发现发作性睡病特异性抗食欲素神经元及受体抗体。但对于发病初期患者或疾病进展的患者，应进行自身免疫脑炎相关抗体检测。TRIB2被发现在发作性睡病1型患者的血清中含量增高，且可能是食欲素神经元损害的结果，目前还缺乏循证医学研究证据。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.short_name = coalesce(n.short_name, 'EDS');

MERGE (n:Disease {name: '自身免疫脑炎'})
SET 
    n.short_name = coalesce(n.short_name, 'AE');

MERGE (n:Disease {name: '发作性睡病1型'})
SET 
    n.short_name = coalesce(n.short_name, 'EDS Type 1');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '自身免疫脑炎'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '早期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:03"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/015-三脑脊液Hcrt-1检测.md
[文本块]
脑脊液 Hcrt-1检测  

- Hcrt-1含量  
  - 特征: 发作性睡病1型的确诊指标  
  - 浓度标准: $\\!\\!\\leqslant\\!110\\;\\mathrm{pg/ml}$ 或小于正常者平均值的 1/3  
  - 特异度和敏感度: 约 $90\\%$  

推荐测定脑脊液 Hcrt-1 的指征:  
1. 患者具有EDS症状, MSLT检查1次或多次结果为阴性  
2. 新发病例, MSLT结果阴性, 伴有典型猝倒发作  
3. 因个人原因或研究条件限制无法完成MSLT检查者  
4. 患者使用中枢神经系统药物, 可能影响MSLT结果  
5. 伴随睡眠呼吸紊乱或其他类型睡眠障碍, MSLT阳性且无法明确诊断者

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病1型'})
SET 
    n.description = coalesce(n.description, '一种以发作性嗜睡为临床特征的睡眠障碍'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Examination {name: '脑脊液 Hcrt-1检测'})
SET 
    n.description = coalesce(n.description, '检测脑脊液中Hcrt-1的含量'),
    n.method = coalesce(n.method, '脑脊液检测'),
    n.requirement = coalesce(n.requirement, '在医院进行');

MERGE (n:Symptom {name: 'EDS症状'})
SET 
    n.description = coalesce(n.description, '过度白天嗜睡的症状'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '频繁');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = '脑脊液 Hcrt-1检测'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = 'EDS症状'
MATCH (to) WHERE to.name = '发作性睡病1型'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '发生频率高'),
    r.severity = coalesce(r.severity, '严重');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:04"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/022-治疗.md
[文本块]
# 治疗

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:06"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/012-量表评估与实验室检查.md
[文本块]
# 量表评估与实验室检查  

## 一、量表评估  

评估发作性睡病的核心症状及严重程度,用于筛查、诊断和疗效评估。  

### (一)睡眠相关量表  
1. **EDS**: Epworth 思睡量表 (Epworth Sleepiness Scale, ESS)  
   - 用途: 评估日间思睡程度  
   
   **斯坦福思睡量表** (Stanford Sleepiness Scale, SSS)  
   - 用途: 测试受试者当下的主观倦意  

   **Ullanlinna发作性睡病量表** (The Ullanlinna Narcolepsy Scale)  
   - 用途: 评估发作性睡病思睡和猝倒症状  

   **瑞士发作性睡病量表** (The Swiss Narcolepsy Scale, SNS)  
   - 用途: 常用于筛查  

2. **猝倒**: 情绪触发猝倒问卷 (Cataplexy Emotional Questionnaire)  
   - 用途: 评估猝倒发作的简明问卷  

3. **其他睡眠障碍相关量表**:  
   - **国际不宁腿综合征** (International Restless Legs Syndrome)  
     - 严重程度自评量表: 包括10个问题的主观量表, 用于衡量不宁腿综合征症状的严重程度  
   
   - **快速眼球运动睡眠行为障碍筛查问卷-香港版** (Rapid-eye-movement Sleep Behavior Disorder Questionnaire Hongkong)  
     - 用途: 评价发作性睡病可能伴发的RBD  

"""
response = """
// 节点更新
MERGE (n:Scale {name: 'Epworth思睡量表'})
SET 
    n.description = coalesce(n.description, '评估日间思睡程度');

MERGE (n:Scale {name: '斯坦福思睡量表'})
SET 
    n.description = coalesce(n.description, '测试受试者当下的主观倦意');

MERGE (n:Scale {name: 'Ullanlinna发作性睡病量表'})
SET 
    n.description = coalesce(n.description, '评估发作性睡病思睡和猝倒症状');

MERGE (n:Scale {name: '瑞士发作性睡病量表'})
SET 
    n.description = coalesce(n.description, '常用于筛查');

MERGE (n:Scale {name: '情绪触发猝倒问卷'})
SET 
    n.description = coalesce(n.description, '评估猝倒发作的简明问卷');

MERGE (n:Scale {name: '国际不宁腿综合征'})
SET 
    n.description = coalesce(n.description, '严重程度自评量表');

MERGE (n:Scale {name: '快速眼球运动睡眠行为障碍筛查问卷-香港版'})
SET 
    n.description = coalesce(n.description, '评价发作性睡病可能伴发的RBD');

MERGE (n:Disease {name: '发作性睡病'});

MERGE (n:Disease {name: '不宁腿综合征'});

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = 'Epworth思睡量表'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.9),
    r.recommendation_level = coalesce(r.recommendation_level, '推荐');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '斯坦福思睡量表'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.9),
    r.recommendation_level = coalesce(r.recommendation_level, '推荐');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = 'Ullanlinna发作性睡病量表'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.9),
    r.recommendation_level = coalesce(r.recommendation_level, '推荐');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '瑞士发作性睡病量表'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.9),
    r.recommendation_level = coalesce(r.recommendation_level, '推荐');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '情绪触发猝倒问卷'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.8),
    r.recommendation_level = coalesce(r.recommendation_level, '推荐');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '国际不宁腿综合征'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.9),
    r.recommendation_level = coalesce(r.recommendation_level, '推荐');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '快速眼球运动睡眠行为障碍筛查问卷-香港版'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.8),
    r.recommendation_level = coalesce(r.recommendation_level, '推荐');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:06"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/023-1.md
[文本块]
发作性睡病的总体治疗目标包括：  

1. 通过心理行为疗法和药物治疗，减少过度日间睡眠（EDS），控制猝倒，改善夜间睡眠。  
2. 帮助患者尽可能恢复日常生活和社会功能。  
3. 尽可能减轻共病的症状。  
4. 减少和避免药物干预带来的不良反应。  

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:07"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/009-一核心症状.md
[文本块]
# 一、核心症状  

1. EDS: 是发作性睡病的主要临床表现，绝大多数患者有EDS症状。具体表现为：白天难以遏制的困倦或睡眠反复发作，患者在单调、无刺激的环境中更容易入睡，日间小睡可暂时缓解睡意，并可保持一段时间清醒。一些患者可能在行走、吃饭、说话等活动时突然睡眠发作，呈现出一些无意识的行为或不刻板的动作。无论患者夜间睡眠时间长短，EDS每日均会发生，并伴有持续注意力和精神运动警觉性的下降。  

2. 猝倒: 猝倒是发作性睡病1型最具特征性的临床表现，发生率约75%，通常在EDS出现后1年内发生，也可表现为首发症状，先出现猝倒发作的患者并不罕见，容易被误诊或漏诊。目前公认的观点是，猝倒发作与清醒期REM睡眠片段插入相关，患者在清醒期突然进入REM睡眠导致骨骼肌失去张力，表现为清醒期突然发生肌张力下降伴警觉性下降，但意识相对保留。猝倒发作通常由大笑、高兴等积极的情绪诱发，负面情绪如愤怒、悲伤等也可诱发，少数患者进食、运动也可诱发猝倒发作。猝倒发作可表现为局部骨骼肌无力，如眼睑下垂、吐舌、言语不能、面部肌肉松弛，亦可影响到颈肩部、上肢和下肢，引起头下垂、肩下垂、上肢下垂、膝盖弯曲、身体前倾，甚至累及全身，出现瘫倒在地等症状表现；呼吸肌通常不受累，但呼吸频率与幅度有所下降。猝倒发作时间通常短暂(<2 min)，可以迅速完全恢复。猝倒发作频率从数月1次到每天数次不等。有时强烈的情感刺激，或者抗猝倒药物突然撤药均可能引发猝倒频繁发作，严重时可持续数小时，称为猝倒持续状态(status catapleticus)。  

由于猝倒发作时的症状复杂多样，临床上容易误诊。不典型的猝倒发作包括一系列持续性肌无力症状和局部运动增多的症状：如持续的垂头、溜肩、持久的眼睑缩小和吐舌，步态不稳、强迫下蹲体位等；局部运动增多的症状可能与对抗猝倒发作时所致的肌张力下降有关，较常见于儿童发病初期和猝倒持续状态的患者，临床可表现为：反复的拾眉、面部抽动、舌体搅拌、头部摇摆、颈部后仰、四肢抽动，甚至躯干和肢体的一系列抽动样动作等。最近一项研究根据视频行为-脑电-肌电特征，将猝倒发作分为诱发、对抗、无张力和恢复4个阶段。因此，猝倒发作是一个连续的动态过程，不仅表现有肌张力下降，也经常混合局部爆发性、短暂的肌张力增高、抽动样动作，临床应注意识别。  

3. 人睡前幻觉: 在发作性睡病患者中发生率为33%至80%。人睡前幻觉是发生于觉醒-睡眠转换期的一种梦境样体验，一般发生在人睡前，也有少数患者发生在睡眠向觉醒转换期。这种幻觉多伴有恐怖或不愉快的体验，通常为视觉或体感幻觉（如“灵魂出窍”感），也可表现为听觉、平衡觉或多种感觉复合形式的幻觉。其发生机制可能与从清醒期直接进入REM期睡眠相关，内在经历的梦境如同幻觉一样。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.description = coalesce(n.description, '一种以白天嗜睡和猝倒为主要症状的睡眠障碍'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Symptom {name: '白天嗜睡'})
SET 
    n.description = coalesce(n.description, '白天难以遏制的困倦或睡眠反复发作'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '每日');

MERGE (n:Symptom {name: '猝倒'})
SET 
    n.description = coalesce(n.description, '清醒期突然发生肌张力下降伴警觉性下降的症状'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '数月1次到每天数次');

MERGE (n:Symptom {name: '幻觉'})
SET 
    n.description = coalesce(n.description, '在觉醒-睡眠转换期发生的梦境样体验'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '发生率33%至80%');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '白天嗜睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '每日'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '猝倒'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '低频'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '幻觉'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.65),
    r.frequency = coalesce(r.frequency, '中等频率'),
    r.severity = coalesce(r.severity, '中等');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:07"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/014-二神经电生理检查.md
[文本块]
# 二、神经电生理检查

全面的神经电生理检查包括夜间多导睡眠监测(nPSG)及次日进行日间多次睡眠潜伏期试验(MSLT)。  
- 诊断发作性睡病1型时，nPSG及MSLT为可选检查项目。  
- 诊断发作性睡病2型时，nPSG和MSLT为必选检查项目。  

nPSG还有助于：  
- 评估夜间睡眠状况  
- 发现夜间睡眠伴随的发作性事件，如REM睡眠期肌张力失弛缓现象(RWA)  
- 鉴别其他睡眠障碍如睡眠呼吸障碍和周期性肢体运动(PLM)事件等  

### 1. nPSG 
- 推荐在监测前2周，通过体动记录仪或睡眠日记记录睡眠-觉醒时间表。  
- 前夜nPSG要求患者卧床时间至少7小时。  
- 检查不应在一夜气道正压通气(PAP)压力滴定后进行。  

发作性睡病nPSG特点：  
- 人睡潜伏期缩短  
- N_r期睡眠增加  
- N_3期睡眠减少  
- 可能出现入睡期REM睡眠(SOREMP)，人睡后醒转次数增加，睡眠效率下降，微觉醒指数增加，PLM增加，REM睡眠期眼动指数升高，RWA阳性及梦境演绎行为。  

### 2. MSLT 
- MSLT是发作性睡病的重要诊断依据，量化日间思睡程度。  
- 应在nPSG监测次日进行，确保前夜睡眠时间大于6小时。  
- MSLT由连续5次每次间隔2小时的小睡测试组成。  
- 第一次小睡测试应在nPSG结束后1.5至3小时内进行。  
- SOREMP可见于发作性睡病、睡眠剥夺、睡眠呼吸障碍、抑郁状态等。  

MSLT阴性并不能完全排除诊断，必要时需要重复nPSG和MSLT检查。  
- 重复进行MSLT检查的指征：  
  - 首次检查受药物、外部环境、检查条件或其他因素的影响而得到阴性结果  
  - 临床怀疑发作性睡病，但之前的MSLT结果为阴性时  

### 3. 清醒维持试验(MWT)  
- 用于评估受试者在日间安静环境中保持清醒的能力。  
- 该检查不是发作性睡病的诊断性试验。  
- 当发作性睡病、OSA、轮班工作等情况可能影响患者的日间觉醒能力时，建议通过MWT评估。  

试验中：  
- 每次测试的持续时间、人睡判断标准、患者所采取的体位在不同研究团队间存在差异。  
- 尚无统一标准，研究者可根据研究目的制定操作流程。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病1型'});

MERGE (n:Disease {name: '发作性睡病2型'});

MERGE (n:Examination {name: '夜间多导睡眠监测'})
SET 
    n.description = coalesce(n.description, '诊断发作性睡病的检查'),
    n.method = coalesce(n.method, '多导睡眠监测'),
    n.requirement = coalesce(n.requirement, '患者卧床时间至少7小时');

MERGE (n:Examination {name: '日间多次睡眠潜伏期试验'})
SET 
    n.description = coalesce(n.description, '诊断发作性睡病的重要诊断依据'),
    n.method = coalesce(n.method, '小睡测试'),
    n.requirement = coalesce(n.requirement, '确保前夜睡眠时间大于6小时');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病2型'
MATCH (to) WHERE to.name = '夜间多导睡眠监测'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '发作性睡病2型'
MATCH (to) WHERE to.name = '日间多次睡眠潜伏期试验'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = '夜间多导睡眠监测'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '可选'),
    r.mandatory = coalesce(r.mandatory, 'false');

MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = '日间多次睡眠潜伏期试验'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '可选'),
    r.mandatory = coalesce(r.mandatory, 'false');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:09"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/027-三药物治疗.md
[文本块]
药物治疗  
发作性睡病  
病因治疗  
对症治疗  
免疫治疗  
创新治疗手段  

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:09"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/008-临床表现.md
[文本块]
# 临床表现  

发作性睡病的主要临床表现包括：  
- 发作性嗜睡（EDS）  
- 猝倒  
- 入睡前幻觉（hypnagogic hallucinations）  
- 睡眠瘫痪（sleep paralysis）  
- 夜间睡眠紊乱  

以上四种症状合称为发作性睡病四联症。其中，猝倒、入睡前幻觉和睡眠瘫痪可能与REM睡眠相关。此外，发作性睡病还可伴随以下症状：  
- 肥胖  
- 性早熟  
- 精神障碍  
- 认知功能损害  
- 偏头痛  

发作性睡病是一类终身性疾病，部分患者的猝倒发作会随着年龄增长而减轻甚至消失，但发作性嗜睡（EDS）会持续存在，且病情可能出现波动。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.description = coalesce(n.description, '发作性睡病是一类终身性疾病'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Symptom {name: '发作性嗜睡'})
SET 
    n.description = coalesce(n.description, '在清醒状态下反复出现的极度嗜睡'),
    n.severity = coalesce(n.severity, '重度'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '猝倒'})
SET 
    n.description = coalesce(n.description, '突发性失去肌肉张力'),
    n.severity = coalesce(n.severity, '重度'),
    n.frequency = coalesce(n.frequency, '偶发');

MERGE (n:Symptom {name: '入睡前幻觉'})
SET 
    n.description = coalesce(n.description, '入睡前出现的幻觉'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '偶发');

MERGE (n:Symptom {name: '睡眠瘫痪'})
SET 
    n.description = coalesce(n.description, '入睡或醒来时无法移动的状态'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '偶发');

MERGE (n:Symptom {name: '夜间睡眠紊乱'})
SET 
    n.description = coalesce(n.description, '睡眠中断逾越正常模式'),
    n.severity = coalesce(n.severity, '轻度'),
    n.frequency = coalesce(n.frequency, '偶发');

MERGE (n:Symptom {name: '肥胖'})
SET 
    n.description = coalesce(n.description, '体重超出正常范围'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Symptom {name: '性早熟'})
SET 
    n.description = coalesce(n.description, '性特征过早发育'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '偶发');

MERGE (n:Symptom {name: '精神障碍'})
SET 
    n.description = coalesce(n.description, '影响思维和情感的状况'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '偶发');

MERGE (n:Symptom {name: '认知功能损害'})
SET 
    n.description = coalesce(n.description, '思维和理解能力的减退'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '偶发');

MERGE (n:Symptom {name: '偏头痛'})
SET 
    n.description = coalesce(n.description, '反复性头痛伴随恶心和对光声敏感'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '偶发');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '发作性嗜睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '猝倒'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '重度');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '入睡前幻觉'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '睡眠瘫痪'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '夜间睡眠紊乱'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.6),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '轻度');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '肥胖'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.5),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '性早熟'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.5),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '精神障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.5),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.5),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '偏头痛'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.5),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '中等');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:10"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/016-四基因检测.md
[文本块]
# 四、基因检测  

大量研究已经证实,HLA等位基因与发作性睡病高度相关,尤其是发作性睡病1型。  
**HLA-DQB1\\*06:02**等位基因是发作性睡病最重要的遗传风险因素。  
- 在发作性睡病2型患者中,其阳性率为 $40\\%{\\sim}50\\%$ 。  
- 在发作性睡病1型患者中,其阳性率高达 $86\\%$ \\~$98\\%$ 。  
- 存在 **DQB1^{*}06{:}02** 增加患病风险20倍[55-57]。  
因此,对于发作性睡病1型患者检测该基因是很重要的。  
- 如果无猝倒症状且 **DQB1^{*}06{:}02** 阴性,基本可排除发作性睡病1型。  
**DQB1^{*}0301** 也可增加发作性睡病1型的发病风险。  
国内一项全基因组关联研究(genome-wide association studies,GWAS)发现,  
**DQB1^{*}0301**等位基因与发作性睡病早年发病有关[58]。  
**HLA-DQB1**  
- $*06$ : 03、  
- $*06$ : 01、  
- $^{*05}$ :01、  
- $*06$ :09和  
- **DQB1^{*}02** 等位基因则表现为保护作用[59]。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病1型'})
SET 
    n.short_name = coalesce(n.short_name, 'Narcolepsy Type 1');

MERGE (n:Disease {name: '发作性睡病2型'})
SET 
    n.short_name = coalesce(n.short_name, 'Narcolepsy Type 2');

MERGE (n:RiskFactor {name: 'HLA-DQB1*06:02'})
SET 
    n.description = coalesce(n.description, '发作性睡病最重要的遗传风险因素'),
    n.impact_level = coalesce(n.impact_level, '高');

MERGE (n:RiskFactor {name: 'HLA-DQB1*0301'})
SET 
    n.description = coalesce(n.description, '可增加发作性睡病1型的发病风险'),
    n.impact_level = coalesce(n.impact_level, '中');

MERGE (n:RiskFactor {name: 'HLA-DQB1*06:03'})
SET 
    n.description = coalesce(n.description, '表现为保护作用'),
    n.impact_level = coalesce(n.impact_level, '低');

MERGE (n:RiskFactor {name: 'HLA-DQB1*06:01'})
SET 
    n.description = coalesce(n.description, '表现为保护作用'),
    n.impact_level = coalesce(n.impact_level, '低');

MERGE (n:RiskFactor {name: 'HLA-DQB1*05:01'})
SET 
    n.description = coalesce(n.description, '表现为保护作用'),
    n.impact_level = coalesce(n.impact_level, '低');

MERGE (n:RiskFactor {name: 'HLA-DQB1*06:09'})
SET 
    n.description = coalesce(n.description, '表现为保护作用'),
    n.impact_level = coalesce(n.impact_level, '低');

MERGE (n:RiskFactor {name: 'HLA-DQB1*02'})
SET 
    n.description = coalesce(n.description, '表现为保护作用'),
    n.impact_level = coalesce(n.impact_level, '低');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = 'HLA-DQB1*06:02'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '高'),
    r.evidence_level = coalesce(r.evidence_level, '强');

MATCH (from) WHERE from.name = '发作性睡病2型'
MATCH (to) WHERE to.name = 'HLA-DQB1*0301'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '中'),
    r.evidence_level = coalesce(r.evidence_level, '中等');

MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = 'HLA-DQB1*06:03'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '低'),
    r.evidence_level = coalesce(r.evidence_level, '中等');

MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = 'HLA-DQB1*06:01'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '低'),
    r.evidence_level = coalesce(r.evidence_level, '中等');

MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = 'HLA-DQB1*05:01'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '低'),
    r.evidence_level = coalesce(r.evidence_level, '中等');

MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = 'HLA-DQB1*06:09'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '低'),
    r.evidence_level = coalesce(r.evidence_level, '中等');

MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = 'HLA-DQB1*02'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '低'),
    r.evidence_level = coalesce(r.evidence_level, '中等');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:11"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/024-二非药物治疗.md
[文本块]
非药物治疗  
- 控制发作性睡病症状的基础  
- 针对特殊患者（如怀孕和儿童早期）是必要的方法  
- 增强患者信心  
- 提高治疗依从性  
- 改善发作性睡病症状  
- 减少共病发生  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'});

MERGE (n:Symptom {name: '发作性睡病症状'});

MERGE (n:Treatment {name: '非药物治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '控制发作性睡病症状的基础');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '发作性睡病症状'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 1.0),
    r.frequency = coalesce(r.frequency, '持续'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '非药物治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '基础治疗');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:11"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/025-一日间规律小睡.md
[文本块]
# 日间规律小睡  

日间规律小睡可持续改善觉醒水平，并有助于减少兴奋性药物和抗抑郁剂的使用剂量。建议任何年龄未服药和服用兴奋性药物的患者均进行日间规律小睡，以改善主观和客观的过度思睡症状。  

每日安排特定时间小睡2~3次，每次15~20分钟，对缓解EDS和提高警觉性有显著效果。对学龄期患者，应重视午休的重要性。  

对多数患者，短时间的小睡（不超过30分钟）对缓解症状即有明显帮助，但幼儿发作性睡病患者需要相对较长时间的小睡才能获益。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '过度思睡症'})
SET 
    n.description = coalesce(n.description, '日间规律小睡可持续改善觉醒水平，并有助于减少兴奋性药物和抗抑郁剂的使用剂量'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Treatment {name: '日间规律小睡'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '每日安排特定时间小睡2~3次，每次15~20分钟，对缓解EDS和提高警觉性有显著效果'),
    n.duration = coalesce(n.duration, '每日'),
    n.contraindication = coalesce(n.contraindication, '无');

// 关系更新
MATCH (from) WHERE from.name = '过度思睡症'
MATCH (to) WHERE to.name = '日间规律小睡'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:14"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/021-二猝倒的鉴别.md
[文本块]
# 猝倒的鉴别

## 1. 癫痫
- 特征:
  - 日间无不可抗拒的思睡发作
  - 发作时伴有意识丧失，不能回忆发作过程
  - 发作期脑电图可见痫样放电
- 对比:
  - 猝倒发作时意识清醒或不完全丧失
  - 发作前可预感并采取保护性动作
  - 发作后可回忆过程
  - 视频显示猝倒动作不具刻板性

## 2. 假性猝倒
- 特征:
  - 精神疾病相关
  - 常在有人在场时突然倒下，但保持保护性姿势且未受伤
- 诱发因素:
  - 精神心理因素
- 诊断:
  - 暗示治疗和心理治疗能减少或消除发作
  - 精神心理评估、MSLT和脑脊液中食欲素检测有助于鉴别

## 3. 其他
- 鉴别对象:
  - 部分正常人放声大笑时的肌肉无力
  - 低血压、短暂性脑缺血发作、晕厥、神经肌肉疾病、睡眠瘫痪
- 疑难病例:
  - 抗抑郁药物治疗的有效性可能有助于鉴别诊断

## 备注
- 需考虑诈病和物质滥用的可能性，MSLT有助于鉴别上述疾病。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '癫痫'})
SET 
    n.description = coalesce(n.description, '日间无不可抗拒的思睡发作，发作时伴有意识丧失，不能回忆发作过程');

MERGE (n:Disease {name: '假性猝倒'})
SET 
    n.description = coalesce(n.description, '精神疾病相关，常在有人在场时突然倒下，但保持保护性姿势且未受伤');

MERGE (n:Disease {name: '低血压'});

MERGE (n:Disease {name: '短暂性脑缺血发作'});

MERGE (n:Disease {name: '晕厥'});

MERGE (n:Disease {name: '神经肌肉疾病'});

MERGE (n:Disease {name: '睡眠瘫痪'});

MERGE (n:Symptom {name: '意识丧失'})
SET 
    n.description = coalesce(n.description, '发作时伴有意识丧失'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '偶尔');

MERGE (n:Symptom {name: '发作期脑电图可见痫样放电'})
SET 
    n.description = coalesce(n.description, '发作期脑电图发现痫样放电'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '偶尔');

MERGE (n:Symptom {name: '精神心理因素'})
SET 
    n.description = coalesce(n.description, '可能诱发假性猝倒的因素'),
    n.severity = coalesce(n.severity, '轻'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Symptom {name: '肌肉无力'})
SET 
    n.description = coalesce(n.description, '放声大笑时的肌肉无力'),
    n.severity = coalesce(n.severity, '轻'),
    n.frequency = coalesce(n.frequency, '偶尔');

// 关系更新
MATCH (from) WHERE from.name = '癫痫'
MATCH (to) WHERE to.name = '意识丧失'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.95),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '癫痫'
MATCH (to) WHERE to.name = '发作期脑电图可见痫样放电'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '假性猝倒'
MATCH (to) WHERE to.name = '精神心理因素'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '低血压'
MATCH (to) WHERE to.name = '肌肉无力'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '低');

MATCH (from) WHERE from.name = '短暂性脑缺血发作'
MATCH (to) WHERE to.name = '肌肉无力'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '低');

MATCH (from) WHERE from.name = '晕厥'
MATCH (to) WHERE to.name = '肌肉无力'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '低');

MATCH (from) WHERE from.name = '神经肌肉疾病'
MATCH (to) WHERE to.name = '肌肉无力'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '低');

MATCH (from) WHERE from.name = '睡眠瘫痪'
MATCH (to) WHERE to.name = '肌肉无力'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '低');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:16"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/020-三鉴别诊断.md
[文本块]
# 三、鉴别诊断  

(一)EDS的鉴别  

1. **发作性睡病与阻塞性睡眠呼吸暂停（OSA）**: 主要表现为上午思睡，发作性睡病的日间思睡程度更重。小睡后感到头脑清醒的情况在发作性睡病患者中更常见，而OSA患者在小睡后多不会感到清醒。OSA患者无猝倒发作，可能会漏诊。日间思睡程度无法用OSA解释、思睡症状早于打鼾发生、无创通气治疗后日间思睡改善不明显时，怀疑存在发作性睡病。可通过检测脑脊液Hcrt含量来鉴别。  

2. **特发性睡眠增多**: 患者常缺乏REM睡眠相关症状如猝倒、幻觉、睡眠瘫痪等，MLST中未出现2次或以上SOREMP。与发作性睡病相比，患者夜间睡眠效率更高，可能出现宿醉式睡眠，与持续时间更长但不解乏的日间小睡，患者通常无多梦主诉。  

3. **克莱恩-莱文综合征（Kleine-Levin syndrome, K-LS）**: K-LS表现为反复发作的过度思睡，伴随认知、精神和行为异常，发作间期正常。过度思睡持续2天至5周，通常每年超过1次。睡眠监测显示总睡眠时间延长，无其他特异性表现。  

4. **睡眠不足综合征和睡眠-觉醒节律紊乱**: 日间思睡不伴有猝倒现象，保证充足睡眠时间和保持正常作息时间可消除日间思睡。  

5. **神经和精神类疾病**: 中枢神经系统疾病如脑部感染、血管性疾病、肿瘤、外伤、神经变性病以及某些遗传代谢性疾病可导致类似发作性睡病表现，需诊断为疾病引起的继发性发作性睡病。精神疾病如不典型抑郁症、双相障碍和躯体形式障碍也可表现过度思睡，但不会出现典型发作性睡病的MSLT特征和脑脊液中食欲素水平降低。  

6. **药物和物质滥用**: 镇静或催眠药物、酒精或毒品滥用可引起过度睡眠、日间思睡或小睡增多。需详细询问病史与用药史，通常无需进行nPSG，除非怀疑伴有其他睡眠障碍。可疑患者可给予必要的尿液毒物学筛查。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'});

MERGE (n:Disease {name: '阻塞性睡眠呼吸暂停'})
SET 
    n.short_name = coalesce(n.short_name, 'OSA');

MERGE (n:Disease {name: '特发性睡眠增多'});

MERGE (n:Disease {name: '克莱恩-莱文综合征'})
SET 
    n.short_name = coalesce(n.short_name, 'K-LS');

MERGE (n:Disease {name: '睡眠不足综合征'});

MERGE (n:Disease {name: '睡眠-觉醒节律紊乱'});

MERGE (n:Disease {name: '中枢神经系统疾病'});

MERGE (n:Disease {name: '精神疾病'});

MERGE (n:Disease {name: '药物和物质滥用'});

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '阻塞性睡眠呼吸暂停'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '重');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '特发性睡眠增多'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.6),
    r.frequency = coalesce(r.frequency, '较少'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '克莱恩-莱文综合征'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.5),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '轻');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '睡眠不足综合征'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '睡眠-觉醒节律紊乱'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '较少'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '中枢神经系统疾病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.5),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '重');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '精神疾病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.4),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '轻');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '药物和物质滥用'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.5),
    r.frequency = coalesce(r.frequency, '时常'),
    r.severity = coalesce(r.severity, '中');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:17"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/034-学院附属同济医院.md
[文本块]
学院附属同济医院

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:19"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/019-诊断标准.md
[文本块]
# 诊断标准  

依据国际睡眠障碍分类第3版(ICSD-3), 将发作性睡病分为两型：  
- 发作性睡病1型：Hcrt缺乏综合征，既往称为伴猝倒的发作性睡病  
- 发作性睡病2型：既往称为不伴猝倒的发作性睡病  

## 发作性睡病1型的诊断标准必须同时满足以下两条标准:  
1. 日间困倦症状持续至少3个月  
2. 满足以下任一项条件：  
   - (1) 有猝倒发作（符合定义的基本特征），且经过标准的MSLT检查平均睡眠潜伏期 ≤ 8分钟，且出现 ≥ 2 次睡眠始发REM；  
   - (2) 放射免疫法检测脑脊液中Hcrt-1水平 ≤ 110 pg/ml 或 < 同一标准检验正常者平均值的1/3。  

幼儿期的发作性睡病可能表现为夜晚睡眠时间过长或日间打瞌睡时间延长，如果临床强烈怀疑发作性睡病1型，但MSLT的诊断标准不能满足，推荐重复MSLT检查。患者存在EDS和脑脊液Hcrt-1水平降低，即使不伴有猝倒发作，仍应诊断为发作性睡病1型。  

## 发作性睡病2型的诊断标准必须同时满足以下五条标准:  
1. 每日出现日间难以克制的困倦欲睡或非预期的日间困倦，症状持续至少3个月。  
2. 标准MSLT检查平均睡眠潜伏期 ≤ 8分钟，且出现 ≥ 2 次SOREMP（睡眠起始15分钟内出现的REM期）。MSLT检查前进行nPSG检查（保证≥6小时睡眠）。  
3. 无猝倒发作。  
4. 放射免疫反应法检测脑脊液中Hcrt-1水平 > 110 pg/ml，或 > 同一标准检验正常者平均值的1/3。  
5. 思睡症状和/或MSLT结果无法用其他原因解释，如睡眠不足、OSA、睡眠时相延迟障碍、药物的使用或撤药。  

如果患者随后出现猝倒发作，应重新诊断为发作性睡病1型；如果诊断做出后，检测脑脊液Hcrt-1浓度 ≤ 110 pg/ml 或 < 经同一标准检验的正常者平均值的1/3，应重新修正诊断为发作性睡病1型。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病1型'});

MERGE (n:Disease {name: '发作性睡病2型'});

MERGE (n:Symptom {name: '日间困倦'})
SET 
    n.description = coalesce(n.description, '患者在白天感到过度困倦'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '持续至少3个月');

MERGE (n:Symptom {name: '猝倒发作'})
SET 
    n.description = coalesce(n.description, '突发的无意识性摔倒'),
    n.severity = coalesce(n.severity, '高'),
    n.frequency = coalesce(n.frequency, '出现');

MERGE (n:Symptom {name: '夜晚睡眠时间过长'})
SET 
    n.description = coalesce(n.description, '晚上睡眠时长明显延长'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '可能出现');

MERGE (n:Symptom {name: '日间打瞌睡时间延长'})
SET 
    n.description = coalesce(n.description, '白天容易入睡且难以清醒'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '可能出现');

MERGE (n:Symptom {name: '思睡症状'})
SET 
    n.description = coalesce(n.description, '持续的嗜睡感觉'),
    n.severity = coalesce(n.severity, '高'),
    n.frequency = coalesce(n.frequency, '持续');

MERGE (n:Treatment {name: 'MSLT检查'})
SET 
    n.type = coalesce(n.type, '检查'),
    n.description = coalesce(n.description, '昼间多次睡眠潜伏期测试');

MERGE (n:Examination {name: '反应性检测'})
SET 
    n.description = coalesce(n.description, '脑脊液中的Hcrt-1水平检测'),
    n.method = coalesce(n.method, '放射免疫法'),
    n.requirement = coalesce(n.requirement, '样本取自患者的脑脊液');

MERGE (n:Treatment {name: 'nPSG检查'})
SET 
    n.type = coalesce(n.type, '检查'),
    n.description = coalesce(n.description, '夜间多普勒监测检查');

// 关系更新
MATCH (from) WHERE from.name = '日间困倦'
MATCH (to) WHERE to.name = '发作性睡病1型'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '每日'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '猝倒发作'
MATCH (to) WHERE to.name = '发作性睡病1型'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '可能出现'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '夜晚睡眠时间过长'
MATCH (to) WHERE to.name = '发作性睡病2型'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '可能出现'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '日间打瞌睡时间延长'
MATCH (to) WHERE to.name = '发作性睡病2型'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '可能出现'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '思睡症状'
MATCH (to) WHERE to.name = '发作性睡病2型'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.95),
    r.frequency = coalesce(r.frequency, '持续'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '发作性睡病1型'
MATCH (to) WHERE to.name = 'MSLT检查'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '发作性睡病2型'
MATCH (to) WHERE to.name = 'nPSG检查'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '发作性睡病2型'
MATCH (to) WHERE to.name = '反应性检测'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:21"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/033-二猝倒的治疗.md
[文本块]
参与讨论人员：
1. 蔡晓杰（北京医院）
2. 陈燕（上海嘉会国际医院）
3. 桂雅星（上海交通大学附属第人民医院）
4. 郭春妮（上海交通大学附属第一人民医院）
5. 韩芳（北京大学人民医院）
6. 胡以达（重庆医科大学附属第一医院）
7. 黄金莎（华中科技大学同济医学院附属协和医院）
8. 蒋晓江（重庆西区医院）
9. 乐卫东（四川省医学科学院·四川省人民医院神经病学研究所）
10. 李宁（首都医科大学宣武医院）
11. 李震中（河北医科大学第二医院）
12. 林海（陕西省西安市中医院）
13. 刘春风（苏州大学附属第二医院）
14. 刘昊（南昌大学第二附属医院）
15. 刘江红（首都医科大学宣武医院）
16. 刘军（上海交通大学医学院附属瑞金医院）
17. 刘卫平（中南大学湘雅医院）
18. 卢强（中国医学科学院北京协和医院）
19. 马建芳（上海交通大学医学院附属瑞金医院）
20. 宿长军（空军军医大学唐都医院）
21. 汤永红（南华大学附属南华医院）
22. 唐吉友（山东省千佛山医院）
23. 脱厚珍（首都医科大学附属北京友谊医院）
24. 王春雪（首都医科大学附属北京天坛医院）
25. 王康（浙江大学医学院附属第一医院）
26. 王丝丝（暨南大学附属第一医院）
27. 王晓云（南京大学附属南京市鼓楼医院）
28. 王玉平（首都医科大学宣武医院）
29. 王赞（吉林大学白求恩第一医院）
30. 吴华（福建医科大学附属第一医院）
31. 吴惠涓（海军军医大学附属长征医院）
32. 夏峰（空军军医大学西京医院）
33. 谢兆宏（山东大学第二医院）
34. 徐江涛（福建医科大学附属厦门弘爱医院）
35. 薛蓉（天津医科大学总医院）
36. 鄢波（四川大学华西医院）
37. 于逢春（福建省漳州市正兴医院）
38. 于欢（复旦大学附属华山医院）
39. 詹淑琴（首都医科大学宣武医院）
40. 张红菊（河南省人民医院）
41. 张健（福建医科大学附属协和医院）
42. 张钱林（河南省人民医院）
43. 张燕（北京大学第三医院）
44. 赵忠新（海军军医大学附属长征医院）
45. 周俊英（四川大学华西医院）
46. 朱春燕（安徽医科大学第一附属医院）
47. 朱舟（华中科技大学同济医学院）

所有作者声明不存在利益冲突。

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:22"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/026-二睡眠卫生习惯.md
[文本块]
# 睡眠卫生习惯  
- 睡眠卫生习惯  
  - 功能: 缓解EDS、减少共病、提高治疗依从性  
  - 措施:  
    - 维持有利于睡眠的环境  
      - 特点: 房间安静, 光线适宜, 温度适宜  
    - 保持规律的睡眠-觉醒节律  
    - 避免睡眠剥夺  
    - 保证充足高质量夜间睡眠  
      - 时间: 至少8小时，条件允许可适当延长  
    - 避免不当使用镇静剂  
    - 加强体育运动  
    - 管理体重  

# 社会心理支持和认知治疗  
- 社会心理支持  
  - 功能: 理解和帮助患者的学习、工作、生活  
  - 参与者: 家长、老师  
  - 措施:  
    - 表示理解  
    - 鼓励患者采取积极健康的生活态度  
    - 学业负担不宜太重  
    - 允许根据小睡时间安排学习与工作任务  

- 交通和职业风险  
  - 风险: 发作性睡病患者交通和职业事故风险增加  
  - 建议: 避免高危工作如驾驶、高空及水下作业  

- 知识与应对  
  - 帮助患者:  
    - 认识发作性睡病的症状  
    - 掌握应对措施  
    - 了解药物疗效、不良反应、预后  
    - 了解症状对人际关系、工作的影响  
    - 减少心理负担  

- 同伴互助支持  
  - 功能: 提供疾病经验知识的支持  
  - 作用:  
    - 指导患者接纳自己  
    - 正确认识疾病  
    - 做好与疾病共存的心理准备  
    - 积极面对疾病  
    - 综合治疗，提高生活质量  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.description = coalesce(n.description, '一种睡眠障碍，表现为白天过度嗜睡，夜间睡眠质量受影响'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Symptom {name: '过度嗜睡'})
SET 
    n.description = coalesce(n.description, '在不适当的场合出现强烈的睡意'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '日常');

MERGE (n:Symptom {name: '睡眠剥夺'})
SET 
    n.description = coalesce(n.description, '因各种原因未能获得足够睡眠'),
    n.severity = coalesce(n.severity, '高'),
    n.frequency = coalesce(n.frequency, '偶尔');

MERGE (n:Symptom {name: '充足高质量夜间睡眠'})
SET 
    n.description = coalesce(n.description, '达到身体和精神恢复的睡眠'),
    n.severity = coalesce(n.severity, '高'),
    n.frequency = coalesce(n.frequency, '夜间');

MERGE (n:Treatment {name: '认知行为治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '通过改变认知和行为来改善睡眠质量'),
    n.duration = coalesce(n.duration, '持续'),
    n.contraindication = coalesce(n.contraindication, '无');

MERGE (n:Treatment {name: '药物治疗'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '使用药物控制白天嗜睡和改善睡眠'),
    n.dosage = coalesce(n.dosage, '根据医嘱'),
    n.duration = coalesce(n.duration, '根据治疗需要'),
    n.contraindication = coalesce(n.contraindication, '戒断症状');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '过度嗜睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '普遍'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '睡眠剥夺'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '充足高质量夜间睡眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 1.0),
    r.frequency = coalesce(r.frequency, '夜间'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '认知行为治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '合并症治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '药物治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.95),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '主要治疗');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:24"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/028-一EDS的治疗.md
[文本块]
# (一) EDS的治疗  

治疗EDS的首选药物是替洛利生(pitolisant)、莫达非尼(modafinil)、$\\upgamma$ 羟丁酸钠(gamma-hydroxybutyrate, sodium oxybate)。其他药物包括阿莫达非尼(armodafinil)、哌甲酯缓释片(methylphenidate)、索林非妥(solriamfetol)、马吲哚(mazindol)等。EDS治疗推荐药物和意见见表1。  

1. 替洛利生(I级推荐, A级证据): 替洛利生是一种新型组胺$\\mathrm{H}_{3}$受体拮抗剂/反向激动剂，通过增加中枢神经系统内源性组胺和其他兴奋性神经递质，如乙酰胆碱、多巴胺、去甲肾上腺素的释放，改善EDS和猝倒。该药物2016年和2019年在欧盟和美国被批准用于治疗发作性睡病，属于非精神管控的药物。临床研究显示替洛利生能显著降低ESS评分，长期疗效稳定，耐受性和安全性良好。替洛利生应按照向上滴定方案用药，最大剂量不得超过$36\\;\\mathrm{mg/d}$，常用剂量为$18{\\sim}36~\\mathrm{mg/d}$，并随早餐单次服用。常见不良反应包括失眠、头痛、恶心、焦虑等。

2. 莫达非尼(I级推荐, A级证据): 莫达非尼于1998年通过FDA批准用于治疗发作性睡病，轮班工作和OSA的思睡症状。其药理作用包括阻断多巴胺转运体再摄取、增强中枢-皮质-边缘系统多巴胺能神经传递、增强脑皮质和脑干的胆碱能和谷氨酸能神经兴奋性。莫达非尼改善EDS症状的效果为$65\\%{\\sim}90\\%$，但研究未发现其改善猝倒。莫达非尼口服吸收良好，半衰期为$9{\\sim}14\\;\\mathrm{h}$，初始剂量为每天$100~\\mathrm{mg}$，可逐渐增量至$200~400~\\mathrm{mg/d}$。常见不良反应包括头痛、胃肠道反应等，缓慢增加剂量可减少不良反应。阿莫达非尼为莫达非尼的R型异构体。

3. $\\upgamma$ -羟丁酸钠(I级推荐, A级证据): 是中枢神经系统内的一种神经递质，能显著改善发作性睡病1型和2型患者的EDS、猝倒和疾病严重程度，其单药疗效优于$400~\\mathrm{mg}$的莫达非尼。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.short_name = coalesce(n.short_name, 'EDS');

MERGE (n:Treatment {name: '替洛利生'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '一种新型组胺H3受体拮抗剂/反向激动剂，通过增加中枢神经系统内源性组胺和其他兴奋性神经递质，改善EDS和猝倒'),
    n.dosage = coalesce(n.dosage, '最大剂量36 mg/d, 常用剂量18~36 mg/d'),
    n.duration = coalesce(n.duration, '长期疗效稳定'),
    n.contraindication = coalesce(n.contraindication, '常见不良反应包括失眠、头痛、恶心、焦虑等');

MERGE (n:Treatment {name: '莫达非尼'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, 'FDA批准用于治疗发作性睡病的药物，通过阻断多巴胺转运体再摄取等机制改善EDS症状'),
    n.dosage = coalesce(n.dosage, '初始剂量100 mg/d, 可逐渐增量至200~400 mg/d'),
    n.duration = coalesce(n.duration, '长期疗效稳定'),
    n.contraindication = coalesce(n.contraindication, '常见不良反应包括头痛、胃肠道反应等');

MERGE (n:Treatment {name: 'γ-羟丁酸钠'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '中枢神经系统内的一种神经递质，能显著改善发作性睡病患者的EDS和猝倒'),
    n.dosage = coalesce(n.dosage, '优于400 mg的莫达非尼'),
    n.duration = coalesce(n.duration, '长期疗效稳定'),
    n.contraindication = coalesce(n.contraindication, '无具体禁忌症说明');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '替洛利生'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '长期');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '莫达非尼'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.65),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '长期');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = 'γ-羟丁酸钠'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '长期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:25"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/035-本刊对文稿中缩略语的书写要求.md
[文本块]
# 本刊对文稿中缩略语的书写要求  

在本刊发表的学术论文中，文题原则上不能使用缩略语，文中尽量少使用缩略语。已被公知公认的缩略语在摘要和正文中可以不加注释直接使用；不常用的和尚未被公知公认的缩略语以及原词过长、在文中多次出现者，若为中文缩略语可于文中第1次出现时写明全称，在圆括号内写出缩略语，如：流行性脑脊髓膜炎（流myasthenia gravis, MG称），在圆括号内写出外文全称及其缩略语，如：重症肌无力（myasthenia gravis, MG）。若该缩略语已经公知，也可不注出其英文全称。不超过4个汉字的名词不宜使用缩略语以免影响论文的可读性。西文缩略语不得拆开转行。  

GABA  γ⁃  

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:26"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/029-一EDS的治疗.md
[文本块]
# EDS的治疗

1. **γ-羟丁酸钠**  
   - 作用：改善夜间睡眠不安，缓解EDS。  
   - 用法：晚上睡前服用，建议夜间加服1次。  
   - 不良反应：恶心、头晕、夜间遗尿、头痛、胸部不适、睡眠障碍、睡眠呼吸障碍等。  
   - 过量反应：快速镇静、记忆缺失、大剂量会引发呼吸抑制和死亡。  

2. **马吲哚**（I级推荐，A级证据）  
   - 作用：非苯丙胺类精神振奋剂，通过大脑中隔区产生拟交感神经作用。  
   - 治疗效果：改善85%的EDS症状，减少50%的猝倒发作。  
   - 研究发现：对耐药患者的过度思睡改善率达60%。  
   - 不良反应：口干、心悸、厌食、紧张、头痛。  

3. **索林非妥**（I级推荐，C级证据）  
   - 作用：双重作用的多巴胺和去甲肾上腺素再摄取抑制剂（DNRIs），用于治疗成人EDS。  
   - 用法：每日服药1次，避免在睡前9小时内服药。  
   - 起始剂量：75 mg，最大剂量150 mg。  
   - 不良反应：头痛、食欲下降、失眠、恶心、胸部不适（多为轻度或中度）。  

4. **哌甲酯**（II级推荐，C级证据）  
   - 作用：苯丙胺类精神振奋剂，改善发作性睡病患者的过度思睡症状。  
   - 用法：缓释片起始每日1次18 mg，最大剂量不超过54 mg。  
   - 不良反应：胃肠道反应、头痛、头晕、失眠、无力、高血压、体重减轻；罕见的精神疾病。  
   - 注意：禁用于高血压、胸痛、心律失常等患者，存在潜在滥用性。  

5. **治疗优化**  
   - 15%~35%的患者对单药治疗效果不佳，可增加剂量或联合用药。  
   - 替洛利生可与莫达非尼或其他EDS治疗药物联合使用。  
   - 联合用药需在临床监测下使用，安全性尚无临床研究证据。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.code = coalesce(n.code, 'G47.429'),
    n.description = coalesce(n.description, '一种以嗜睡和睡眠发作为特征的疾病'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Treatment {name: 'γ-羟丁酸钠'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '改善夜间睡眠不安，缓解EDS'),
    n.dosage = coalesce(n.dosage, '服用方式: 晚上睡前服用，建议夜间加服1次'),
    n.duration = coalesce(n.duration, '短期'),
    n.contraindication = coalesce(n.contraindication, '不良反应包括恶心、头晕、夜间遗尿等');

MERGE (n:Treatment {name: '马吲哚'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '非苯丙胺类精神振奋剂，通过大脑中隔区产生拟交感神经作用'),
    n.dosage = coalesce(n.dosage, '每日服药，建议起始剂量为75 mg'),
    n.duration = coalesce(n.duration, '根据临床状况调整'),
    n.contraindication = coalesce(n.contraindication, '不良反应包括口干、心悸等');

MERGE (n:Treatment {name: '索林非妥'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '双重作用的多巴胺和去甲肾上腺素再摄取抑制剂，用于治疗成人EDS'),
    n.dosage = coalesce(n.dosage, '每日服药1次，最大剂量150 mg'),
    n.duration = coalesce(n.duration, '根据临床状况调整'),
    n.contraindication = coalesce(n.contraindication, '不良反应包括头痛、食欲下降等');

MERGE (n:Treatment {name: '哌甲酯'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '苯丙胺类精神振奋剂，改善发作性睡病患者的过度思睡症状'),
    n.dosage = coalesce(n.dosage, '起始每日1次18 mg，最大剂量不超过54 mg'),
    n.duration = coalesce(n.duration, '根据临床状况调整'),
    n.contraindication = coalesce(n.contraindication, '禁用于高血压等患者');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = 'γ-羟丁酸钠'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '临床治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '马吲哚'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '临床治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '索林非妥'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '临床治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '哌甲酯'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '临床治疗');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:34"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/031-二猝倒的治疗.md
[文本块]
# (二)猝倒的治疗（续）  
5. **SSRI (II级推荐, C级证据)**:  
   - **药物**: 帕罗西汀、氟西汀、舍曲林、西酞普兰  
   - **疗效**: 对治疗猝倒发作有一定疗效, 较TCAs和SNRIs疗效较弱  
   - **不良反应**: 恶心、厌食、便秘、头痛、乏力、性功能障碍、偶见体位性低血压  

6. **NaRI (II级推荐, C级证据)**:  
   - **药物**: 瑞波西汀  
   - **疗效**: 减少猝倒发作的频率及严重程度; 小样本研究显示经治疗后ESS评分下降48%, MSLT的睡眠潜伏期改善54%  
   - **剂量**: 最高剂量$10\\; \\mathrm{mg/d}$  
   - **不良反应**: 失眠、多汗、头晕、便秘、直立性低血压、性功能障碍、排尿困难  

- **阿托莫西汀 (II级推荐, C级证据)**:  
  - **功能**: 选择性抑制去甲肾上腺素的突触前转运  
  - **疗效**: 对猝倒和日间过度睡眠有效  
  - **剂量**: 有效治疗剂量为$10{\\sim}60~\\mathrm{mg/d}$, 最大剂量$80~\\mathrm{mg/d}$  
  - **不良反应**: 食欲减退、尿潴留、便秘  

- **抗抑郁剂的停药反应**: 突然减量或停药可导致猝倒发作时间延长、频率增加、严重程度增高，甚至出现猝倒持续状态。

# (三)人睡前幻觉和睡眠瘫痪的治疗  
- **药物**: 替洛利生、 $\\upgamma$-羟丁酸钠 (I级推荐, A级证据)  
- **疗效**: 对人睡前幻觉和睡眠瘫痪有明确改善作用  
- **抗抑郁剂**: 三环类抗抑郁剂、SSRIs、SNRIs (III级推荐, D级证据) 可改善人睡前幻觉和睡眠瘫痪。推荐使用SSRIs和SNRIs类药物，如氟西汀、文拉法辛等。

# (四)夜间睡眠紊乱的治疗  
1. **夜间睡眠不安的治疗**:  
   - **药物**: $\\upgamma$-羟丁酸钠 (I级推荐, A级证据)  
   - **疗效**: 被证实对发作性睡病夜间睡眠不安有确切疗效  
   - **风险**: 可能增加睡眠呼吸障碍或肺换气不足的风险，需要监测nPSG和血二氧化碳。  

- **巴氯芬 (III级推荐, D级证据)**:  
  - **疗效**: 可改善慢波睡眠，减少睡眠片段化，但证据较少，需要进一步研究。  

**表3**: 人睡前幻觉和睡眠瘫痪治疗的推荐意见  
**表4**: 睡眠不安治疗的推荐意见  

"""
response = """
// 节点更新
MERGE (n:Treatment {name: '帕罗西汀'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, 'SSRI药物');

MERGE (n:Treatment {name: '氟西汀'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, 'SSRI药物');

MERGE (n:Treatment {name: '舍曲林'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, 'SSRI药物');

MERGE (n:Treatment {name: '西酞普兰'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, 'SSRI药物');

MERGE (n:Treatment {name: '瑞波西汀'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, 'NaRI药物'),
    n.dosage = coalesce(n.dosage, '最高剂量10 mg/d');

MERGE (n:Treatment {name: '阿托莫西汀'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '选择性抑制去甲肾上腺素的突触前转运'),
    n.dosage = coalesce(n.dosage, '有效治疗剂量为10到60 mg/d，最大剂量80 mg/d');

MERGE (n:Treatment {name: '替洛利生'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于人睡前幻觉和睡眠瘫痪的治疗');

MERGE (n:Treatment {name: 'γ-羟丁酸钠'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '被证实对发作性睡病夜间睡眠不安有确切疗效');

MERGE (n:Treatment {name: '巴氯芬'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可改善慢波睡眠，减少睡眠片段化');

MERGE (n:Disease {name: '猝倒'})
SET 
    n.description = coalesce(n.description, '发作性睡病的一种症状');

MERGE (n:Disease {name: '日间过度睡眠'})
SET 
    n.description = coalesce(n.description, '发作性睡病的一种症状');

MERGE (n:Disease {name: '人睡前幻觉'})
SET 
    n.description = coalesce(n.description, '睡眠障碍的一种');

MERGE (n:Disease {name: '睡眠瘫痪'})
SET 
    n.description = coalesce(n.description, '睡眠障碍的一种');

MERGE (n:Disease {name: '夜间睡眠不安'})
SET 
    n.description = coalesce(n.description, '睡眠障碍的一种');

// 关系更新
MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '帕罗西汀'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.5),
    r.priority = coalesce(r.priority, 'II级推荐');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '氟西汀'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.5),
    r.priority = coalesce(r.priority, 'II级推荐');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '舍曲林'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.3),
    r.priority = coalesce(r.priority, 'II级推荐');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '西酞普兰'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.3),
    r.priority = coalesce(r.priority, 'II级推荐');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '瑞波西汀'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, 'II级推荐');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '阿托莫西汀'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, 'II级推荐');

MATCH (from) WHERE from.name = '日间过度睡眠'
MATCH (to) WHERE to.name = '替洛利生'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, 'I级推荐');

MATCH (from) WHERE from.name = '夜间睡眠不安'
MATCH (to) WHERE to.name = 'γ-羟丁酸钠'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, 'I级推荐');

MATCH (from) WHERE from.name = '夜间睡眠不安'
MATCH (to) WHERE to.name = '巴氯芬'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.4),
    r.priority = coalesce(r.priority, 'III级推荐');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '日间过度睡眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '日间过度睡眠'
MATCH (to) WHERE to.name = '帕罗西汀'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:40"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/030-二猝倒的治疗.md
[文本块]
# 猝倒的治疗  

推荐的抗猝倒药物主要有替洛利生、羟丁酸钠和抗抑郁剂，包括三环类和文拉法辛。三环类抗抑郁剂（TCAs）和选择性5-羟色胺再摄取抑制剂（SSRIs）通常不具有强促醒效应，而替洛利生和羟丁酸钠可同时改善猝倒和过度嗜睡（EDS）。选择性去甲肾上腺素与5-羟色胺再摄取抑制剂（SNRIs）和选择性去甲肾上腺素再摄取抑制剂（NaRIs）具有一定的促醒作用，这些药物也可联合使用。猝倒的推荐药物和意见见表2。  

抗抑郁剂治疗猝倒起效迅速，但停药后易出现症状反弹。即使是长期服用缓释型抗抑郁剂，在中断治疗后的第二天也可能出现猝倒症状反弹，且反弹症状可持续数天。抗抑郁剂治疗可能出现耐药现象，此时可考虑增加剂量或更换药物。  

1. 替洛利生（I级推荐，A级证据）：显著改善猝倒发作，7周治疗可减少每周猝倒发作75%。不会刺激与药物滥用有关的多巴胺释放，在临床试验中未发现戒断症状。  

2. 羟丁酸钠（I级推荐，A级证据）：可降低猝倒发生率，短期和长期疗效均得到随机对照试验证实。剂量效果不同，9.0 g/d为最有效剂量，但部分患者无法耐受，临床普遍剂量为6.0 g/d。一般羟丁酸钠治疗4周后可改善猝倒发作，最大疗效需至少3个月。  

3. SNRIs（III级推荐，C级证据）：主要包括文拉法辛、去甲基文拉法辛和度洛西汀。有效抑制5-羟色胺和去甲肾上腺素的再摄取，文拉法辛治疗猝倒、人睡前幻觉和睡眠瘫痪，起始剂量为37.5 mg，每日需2~3次服药，缓慢增加至有效剂量（75~225 mg/d）。去甲基文拉法辛的抗猝倒效果可能优于文拉法辛，副作用包括恶心、头晕、食欲下降等。度洛西汀治疗发作性睡病猝倒发作有效，有效剂量为20~40 mg/d，最大剂量为60 mg/d。  

4. TCAs（II级推荐，C级证据）：用于治疗猝倒，对入睡前幻觉和睡眠瘫痪有效，但可能导致快速眼动睡眠行为障碍（RBD）产生。这类药物包括氯米帕明、去甲阿米替林和丙咪嗪，存在如便秘、视力模糊等多种不良反应。  

表2 猝倒治疗的推荐意见

"""
response = """
// 节点更新
MERGE (n:Disease {name: '猝倒'})
SET 
    n.description = coalesce(n.description, '发作性睡病的一种症状'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Treatment {name: '替洛利生'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '显著改善猝倒发作'),
    n.dosage = coalesce(n.dosage, '7周治疗可减少每周猝倒发作75%'),
    n.duration = coalesce(n.duration, '7周'),
    n.contraindication = coalesce(n.contraindication, '无');

MERGE (n:Treatment {name: '羟丁酸钠'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可降低猝倒发生率'),
    n.dosage = coalesce(n.dosage, '6.0 g/d'),
    n.duration = coalesce(n.duration, '至少3个月'),
    n.contraindication = coalesce(n.contraindication, '部分患者无法耐受');

MERGE (n:Treatment {name: '文拉法辛'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '有效抑制5-羟色胺和去甲肾上腺素的再摄取'),
    n.dosage = coalesce(n.dosage, '起始剂量37.5 mg，每日2~3次'),
    n.duration = coalesce(n.duration, '根据医生指示'),
    n.contraindication = coalesce(n.contraindication, '副作用包括恶心、头晕、食欲下降');

MERGE (n:Treatment {name: '去甲基文拉法辛'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '抗猝倒效果可能优于文拉法辛'),
    n.dosage = coalesce(n.dosage, '根据医生指示'),
    n.duration = coalesce(n.duration, '根据医生指示'),
    n.contraindication = coalesce(n.contraindication, '副作用包括恶心');

MERGE (n:Treatment {name: '度洛西汀'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '有效治疗发作性睡病猝倒'),
    n.dosage = coalesce(n.dosage, '20~60 mg/d'),
    n.duration = coalesce(n.duration, '根据医生指示'),
    n.contraindication = coalesce(n.contraindication, '无');

MERGE (n:Treatment {name: '氯米帕明'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于治疗猝倒'),
    n.dosage = coalesce(n.dosage, '根据医生指示'),
    n.duration = coalesce(n.duration, '根据医生指示'),
    n.contraindication = coalesce(n.contraindication, '便秘、视力模糊等不良反应');

MERGE (n:Treatment {name: '去甲阿米替林'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于治疗猝倒'),
    n.dosage = coalesce(n.dosage, '根据医生指示'),
    n.duration = coalesce(n.duration, '根据医生指示'),
    n.contraindication = coalesce(n.contraindication, '便秘、视力模糊等不良反应');

MERGE (n:Treatment {name: '丙咪嗪'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于治疗猝倒'),
    n.dosage = coalesce(n.dosage, '根据医生指示'),
    n.duration = coalesce(n.duration, '根据医生指示'),
    n.contraindication = coalesce(n.contraindication, '便秘、视力模糊等不良反应');

// 关系更新
MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '替洛利生'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, 'I级推荐'),
    r.stage = coalesce(r.stage, '起始阶段');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '羟丁酸钠'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, 'I级推荐'),
    r.stage = coalesce(r.stage, '起始阶段');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '文拉法辛'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, 'III级推荐'),
    r.stage = coalesce(r.stage, '根据医生指示');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '去甲基文拉法辛'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, 'III级推荐'),
    r.stage = coalesce(r.stage, '根据医生指示');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '度洛西汀'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, 'II级推荐'),
    r.stage = coalesce(r.stage, '根据医生指示');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '氯米帕明'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, 'II级推荐'),
    r.stage = coalesce(r.stage, '根据医生指示');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '去甲阿米替林'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, 'II级推荐'),
    r.stage = coalesce(r.stage, '根据医生指示');

MATCH (from) WHERE from.name = '猝倒'
MATCH (to) WHERE to.name = '丙咪嗪'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, 'II级推荐'),
    r.stage = coalesce(r.stage, '根据医生指示');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:41"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
中国发作性睡病诊断与治疗指南（2022版）.md
[隶属文件分块名]
中国发作性睡病诊断与治疗指南（2022版）/032-二猝倒的治疗.md
[文本块]
# 猝倒的治疗

## 推荐级别与证据级别
- 推荐级别分为 I、II、III 级别
- 证据级别分为 A、B、C、D 级别

## 药物治疗
- 新型苯二氮草类药物: 唑吡坦、佐匹克隆、右佐匹克隆
- 褪黑素用于治疗发作性睡病患者的夜间睡眠不安
- 不建议长期使用苯二氮草类药物。
- 夜间睡眠不安的治疗选择:
  - 单用 γ-羟丁酸钠
  - 联合使用 γ-羟丁酸钠 和（或）文拉法辛/氯米帕明
  - 使用替洛利生等一线促醒剂

## SA的治疗
- 鼓励超重患者减轻体重，保持戒烟酒等健康的生活方式
- 无创气道正压通气为一线治疗方式
- 应用口腔矫治器和手术治疗

## RBD的治疗
- 不建议使用氯硝安定
- 可尝试褪黑素或褪黑素受体激动剂
- 合并猝倒时可参考猝倒的治疗药物并定期进行抑郁/焦虑评估

## 不宁腿综合征的治疗
- 推荐普拉克索为首选治疗
- 其他可选药物: 罗匹尼罗、罗替高汀、加巴喷丁
- 注意抗猝倒的抗抑郁药物可能加重不宁腿症状

## 其他症状的治疗
1. 抑郁状态和焦虑状态:
   - 建议在认知行为治疗基础上使用镇静作用小的抗抑郁剂如 SSRIs、SNRIs
2. 精神病样症状:
   - 建议精神科排除相关精神疾病，选择适当药物干预，注意体重不良反应

## 特定人群的治疗
1. 儿童发作性睡病的治疗:
   - 高峰年龄为 8~12岁，需积极治疗，推荐日间规律小睡及认知行为治疗
   - 临床医师应考虑获益与风险
2. 孕产妇发作性睡病的治疗:
   - 怀孕期一般不主张用药，若风险较高，推荐药物: 替洛利生、γ-羟丁酸钠、氟西汀、文拉法辛或氯米帕明
   - 推荐选择剖宫产手术
   - 哺乳期不主张用药，必须用药需停止母乳喂养

## 执笔
- 唐吉友（山东省千佛山医院）
- 王春雪（首都医科大学附属北京天坛医院）
- 王赞（吉林大学白求恩第一医院）
- 吴惠涓（海军军医大学附属长征医院）
- 詹淑琴（首都医科大学宣武医院）

"""
response = """
// 节点更新
MERGE (n:Disease {name: '发作性睡病'});

MERGE (n:Treatment {name: '新型苯二氮草类药物'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '包括了唑吡坦、佐匹克隆、右佐匹克隆'),
    n.contraindication = coalesce(n.contraindication, '不建议长期使用苯二氮草类药物');

MERGE (n:Treatment {name: '褪黑素'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于治疗发作性睡病患者的夜间睡眠不安');

MERGE (n:Treatment {name: 'γ-羟丁酸钠'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '单用或与其他药物联合使用');

MERGE (n:Treatment {name: '文拉法辛'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '与γ-羟丁酸钠联合使用');

MERGE (n:Treatment {name: '氯米帕明'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '与γ-羟丁酸钠联合使用');

MERGE (n:Treatment {name: '替洛利生'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '一线促醒剂');

MERGE (n:Treatment {name: '普拉克索'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '首选治疗不宁腿综合征');

MERGE (n:Treatment {name: '罗匹尼罗'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可选药物');

MERGE (n:Treatment {name: '罗替高汀'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可选药物');

MERGE (n:Treatment {name: '加巴喷丁'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可选药物');

MERGE (n:Treatment {name: 'SSRIs'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '镇静作用小的抗抑郁剂');

MERGE (n:Treatment {name: 'SNRIs'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '镇静作用小的抗抑郁剂');

MERGE (n:Treatment {name: '氟西汀'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '孕产妇推荐药物');

MERGE (n:Treatment {name: '替洛利生'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '孕产妇推荐药物');

MERGE (n:Treatment {name: 'γ-羟丁酸钠'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '孕产妇推荐药物');

MERGE (n:Treatment {name: '文拉法辛'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '孕产妇推荐药物');

MERGE (n:Treatment {name: '氯米帕明'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '孕产妇推荐药物');

// 关系更新
MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '新型苯二氮草类药物'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初始治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '褪黑素'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初始治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = 'γ-羟丁酸钠'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初始治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '文拉法辛'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '联合治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '氯米帕明'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '联合治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '替洛利生'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '一线治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '普拉克索'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '首选治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '罗匹尼罗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '可选治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '罗替高汀'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '可选治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '加巴喷丁'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '可选治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = 'SSRIs'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '可选治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = 'SNRIs'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '可选治疗');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '氟西汀'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '推荐');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '替洛利生'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '推荐');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = 'γ-羟丁酸钠'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '推荐');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '文拉法辛'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '推荐');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '氯米帕明'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '推荐');

"""
