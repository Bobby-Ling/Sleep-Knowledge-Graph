[metadata]
file_name = "基层医疗机构失眠症诊断和治疗中国专家共识.md"
processed_at = "2024-12-12 01:32:19"
total_pairs = 24

[[message_pairs]]
timestamp = "2024-12-12 01:31:12"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/003-第二部分失眠的病理生理学机制.md
[文本块]
第二部分失眠的病理生理学机制  

失眠机制尚不清楚，主要假说简述如下：一、三因素假说  

该假说从易感因素、促发因素和维持因素三方面探讨失眠的心理学机制，也称3P假说。 

- 易感因素：年龄、性别、遗传及性格特征等，可影响个体的失眠易感性。 
- 促发因素：生活事件及应激等，可诱发短期失眠。 
- 维持因素：失眠得以持续的行为和信念，包括应对短期失眠的不良行为（如延长在床时间）及对失眠本身的焦虑和恐惧等，进而发展为慢性失眠。  

表1 GRADE证据等级和推荐强度分级标准  

注：GRADE为证据等级和推荐强度的评估、制定与评价

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:14"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/002-第一部分专家共识的制订方法.md
[文本块]
# 第一部分专家共识的制订方法  

本共识制订采用共识会议制订法。  
时间：2023年6月至2024年3月  
组织机构：中国睡眠研究会  
领域：国内睡眠医学  
委员会：基层医疗机构失眠症诊断和治疗中国专家共识编写委员会（编委会）  
成员人数：16名成员执笔撰写  

文献检索：  
- 数据库：PubMed、EMBASE、Cochrane Library、中国知网、万方数据库、中国生物医学文献数据库  
- 检索时间：从建库到2023年12月  
- 检索词：  
  - insomnia(disorder) 
  - disorder of initiating and/or maintaining sleep 
  - primary/community care/healthcare 
  - primary/community health/medical care/services/center(s) 
  - 失眠(症/障碍) 
  - 睡眠起始/维持困难 
  - 初级/社区卫生保健/服务 
  - 基层医疗机构  

文献类型：临床指南、专家共识、综述、荟萃分析、原始临床研究  

参考：  
- 国外医疗体系相关内容的借鉴  
- 文献证据等级分级  
- clinical experience for recommendations as “专家共识”  

证据等级和推荐强度：  
- 指导原则：中华医学会发布的《中国制订/修订临床诊疗指南的指导原则(2022版)》  
- 证据等级评估系统：GRADE  
- 证据等级：高(A)、中(B)、低(C)、极低(D)  
- 推荐强度：强(1)、弱(2)  

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:16"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/001-基层医疗机构失眠症诊断和治疗中国专家共识.md
[文本块]
# 基层医疗机构失眠症诊断和治疗中国专家共识  

**组织**: 中国睡眠研究会  

**通信作者**: 张斌, 南方医科大学南方医院精神心理科(睡眠医学中心), 广州510515  
**Email**: zhang73bin@hotmail.com  

**摘要**:  
失眠症是最常见的睡眠障碍, 不仅增加多种躯体疾病和精神障碍的风险, 而且带来沉重的社会卫生经济学负担。然而目前国内外均缺乏针对基层医疗机构失眠症的诊疗规范。为此, 中国睡眠研究会组织国内睡眠医学专家, 以国内外最新的研究进展为依据, 制订本专家共识, 针对失眠症的病理生理学机制、流行病学、诊断思路、筛查评估、防治措施和基层管理进行逐一阐述, 共制订了2021YFC2501500 2023  

**关键词**:  
睡眠障碍; 失眠症; 基层医疗机构; 专家共识; 诊断; 治疗  

**实践指南注册**: 国际实践指南注册与透明化平台 (PREPARE-2024CN690)  

**英文摘要**:  
Insomnia disorder is the most common sleep disorder. It not only increases the risk of multiple somatic and mental disorders, but also carries a heavy social health economic burden. Currently, there is a lack of diagnosis and treatment standards for insomnia disorder in primary medical institutions at home and abroad. To this end, the Chinese Sleep Research Society organized domestic sleep medical experts to develop this consensus based on the latest research on insomnia disorder. The current consensus elaborates on the pathophysiological mechanism, epidemiology, diagnosis, screening assessment, prevention and control measures and basic management, and has established a total of 15 recommendations. These recommendations aim to provide comprehensive and standardized references and guidelines for the diagnosis and treatment of insomnia disorder.  

**英文关键词**:  
Sleep disorders; Insomnia; Primary medical institutions; Expert consensus; Diagnosis; Treatment  

**基金项目**:  
国家重点研发计划 (2021YFC2501500); 全国协作治理现代化示范项目2023 (2023ZLXD226)  
**实践指南注册**: 国际实践指南注册与透明化平台 (PREPARE-2024CN690)  

失眠症是最常见的睡眠障碍,不仅增加多种躯体疾病和精神障碍的风险, 而且带来沉重的社会卫生经济学负担。基层医疗机构指社区卫生服务中心和站点、乡镇卫生院和村卫生室, 是我国三级医疗制度的基础, 主要提供常见病、多发病的预防、治疗和康复等基本公共卫生和医疗服务。目前, 基层医疗机构对失眠症的诊疗手段相对有限, 而且国内缺乏针对基层医疗机构失眠症的诊疗规范。因此, 中国睡眠研究会组织国内睡眠医学领域的专家, 以国内外的最新研究进展为依据, 结合国内现状, 经过反复讨论, 制订本专家共识, 为基层医疗机构的失眠症诊疗提供规范化参考和依据。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'})
SET 
    n.description = coalesce(n.description, '最常见的睡眠障碍'),
    n.severity = coalesce(n.severity, '高'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Disease {name: '躯体疾病'})
SET 
    n.description = coalesce(n.description, '各种身体健康问题的统称');

MERGE (n:Disease {name: '精神障碍'})
SET 
    n.description = coalesce(n.description, '精神健康问题的统称');

// 关系更新
MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '躯体疾病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '精神障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '高');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:17"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/008-第五部分失眠症在基层的诊断和鉴别诊断.md
[文本块]
# 第五部分失眠症在基层的诊断和鉴别诊断  

一、临床诊断  
失眠可以是一种症状，也可以是独立的疾病。  
- 失眠症状  
  - 短期与压力、焦虑等因素相关  
  - 通常是短期的  
  - 可自行缓解  
- 失眠症  
  - 持续数月  
  - 对个体的社会功能产生较大负面影响  
  - 睡眠障碍

"""
response = """
// 节点更新
MERGE (n:Symptom {name: '失眠'})
SET 
    n.description = coalesce(n.description, '失眠是一种症状，也可以是独立的疾病'),
    n.severity = coalesce(n.severity, '短期'),
    n.frequency = coalesce(n.frequency, '可自行缓解');

MERGE (n:Disease {name: '失眠症'})
SET 
    n.description = coalesce(n.description, '失眠症是一种持续数月，对个体的社会功能产生较大负面影响的睡眠障碍'),
    n.severity = coalesce(n.severity, '严重');

// 关系更新
MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '失眠症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '短期与压力、焦虑等因素相关'),
    r.severity = coalesce(r.severity, '短期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:21"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/007-第四部分失眠症的基层医疗机构防治情况.md
[文本块]
第四部分失眠症的基层医疗机构防治情况

20世纪80年代我国第一家睡眠呼吸障碍诊疗中心成立,至今已有3000余家医疗机构具备睡眠监测的条件，从业人数大幅增长，诊治范围也由单一类型睡眠障碍向综合类型睡眠障碍转变。多部专著与指南也为睡眠障碍的规范化诊治提供了依据。然而，我国的睡眠医学专业仍存在发展不均衡、技术门槛高、人才培养不系统等问题。2022年的《全国医院睡眠医学业务开展情况调查》覆盖了31个省市自治区的各级综合与专科医院，调查显示仅2%基层医疗机构开展了睡眠业务，前三位阻碍因素为专业人才缺乏（76%）、设备成本高昂（70%）、缺乏睡眠障碍患者（33%）。需要关注的是，睡眠医学在我国尚未成为独立的二级学科，没有独立学位培养点，缺乏睡眠技师、住院医师及专科医师规范化培训体系和认证机构，因此限制了专业人才培养。

目前，基层医疗机构的失眠症主要采用传统镇静催眠药及中医药治疗。由于医疗水平和设备条件的影响，很多失眠治疗方式在基层医疗机构没有开展，失眠症的分级诊疗制度也需要确立和完善。

推荐意见3:基层医疗机构的失眠症防治水平受到了睡眠医学发展现状的制约，失眠症的分级诊疗制度也需要确定和完善。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'});

MERGE (n:Treatment {name: '传统镇静催眠药'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于治疗失眠的药物'),
    n.dosage = coalesce(n.dosage, '根据具体情况而定'),
    n.duration = coalesce(n.duration, '根据医生建议'),
    n.contraindication = coalesce(n.contraindication, '对镇静催眠药过敏者禁用');

MERGE (n:Treatment {name: '中医药'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '应用中医理论与方法治疗失眠'),
    n.dosage = coalesce(n.dosage, '依据医嘱'),
    n.duration = coalesce(n.duration, '依据医嘱'),
    n.contraindication = coalesce(n.contraindication, '对中药成分过敏者禁用');

// 关系更新
MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '传统镇静催眠药'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初级治疗');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '中医药'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '普通'),
    r.stage = coalesce(r.stage, '初级治疗');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:21"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/009-一失眠症状.md
[文本块]
失眠症状包括:  
1. 睡眠困难  
2. 睡眠不深  
3. 易醒  
4. 早醒  

这些症状导致明显的日间功能受损。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠'})
SET 
    n.description = coalesce(n.description, '一种常见的睡眠障碍，表现为无法入睡或保持睡眠状态');

MERGE (n:Symptom {name: '睡眠困难'})
SET 
    n.description = coalesce(n.description, '入睡困难，难以开始睡眠'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '睡眠不深'})
SET 
    n.description = coalesce(n.description, '睡眠质量差，睡眠浅'),
    n.severity = coalesce(n.severity, '轻度'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '易醒'})
SET 
    n.description = coalesce(n.description, '容易在夜间醒来'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '早醒'})
SET 
    n.description = coalesce(n.description, '提前醒来，无法继续睡眠'),
    n.severity = coalesce(n.severity, '轻度'),
    n.frequency = coalesce(n.frequency, '频繁');

// 关系更新
MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '睡眠困难'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '睡眠不深'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '轻度');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '易醒'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '早醒'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '轻度');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:22"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/013-第七部分-防治措施.md
[文本块]
第七部分 防治措施

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:23"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/005-三情绪应对假说.md
[文本块]
# 三、情绪应对假说  

该假说提出, 在快速眼动睡眠(REM)期间, 健康人的大脑蓝斑停止释放去甲肾上腺素。去甲肾上腺素的减少会阻断记忆与情绪反应之间的联系, 使个体在睡眠中达到“情绪喘息\"的效果。失眠人群的REM睡眠则出现片段化, 引发睡眠对不良情绪的适应不足, 导致持续性情绪问题。该模型也解释了失眠作为精神障碍风险因素的原因。  

四、其他假说  

还包括认知假说、REM睡眠不稳定假说、刺激控制假说等。  

以上假说并不是相互排斥的, 失眠的发生和发展可能是多种因素共同作用的结果, 不同的假说衍生出不同的临床治疗方法。失眠认知行为治疗(CBTI)建立在3P假说的基础上, 通过改变失眠者的认知和行为模式来改善失眠症状。基于过度觉醒假说, 临床可采取降低觉醒程度的治疗措施, 例如通过放松训练缓解日间的烦躁情绪。情绪应对假说则提供了新的治疗思路, 通过阻断去甲肾上腺素受体(如β-受体阻滞剂)或抑制蓝斑的活动(如胍法辛), 调控REM睡眠而达到调节情绪反应和改善睡眠质量的效果。  

推荐意见1: 失眠的病理生理学机制尚不清楚, 主要包括三因素、过度觉醒和情绪应对等多种假说; 各种假说并不相互排斥, 失眠是多种因素共同作用的结果。(专家共识)

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'})
SET 
    n.description = coalesce(n.description, '一种睡眠障碍，表现为入睡困难、维持睡眠困难或早醒等症状');

MERGE (n:Symptom {name: '情绪问题'})
SET 
    n.description = coalesce(n.description, '情绪反应不当，伴随失眠症状'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '持续');

MERGE (n:Symptom {name: '记忆障碍'})
SET 
    n.description = coalesce(n.description, '在睡眠中无法保持记忆'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '不定期');

MERGE (n:Treatment {name: '失眠认知行为治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '通过改变失眠者的认知和行为模式来改善失眠症状'),
    n.duration = coalesce(n.duration, '8-12周');

MERGE (n:Treatment {name: '放松训练'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '通过放松技巧来缓解日间的烦躁情绪'),
    n.duration = coalesce(n.duration, '短期');

MERGE (n:Treatment {name: 'β-受体阻滞剂'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '通过阻断去甲肾上腺素受体来调控REM睡眠'),
    n.duration = coalesce(n.duration, '视患者情况而定');

MERGE (n:Treatment {name: '胍法辛'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '抑制蓝斑的活动以调节情绪反应'),
    n.duration = coalesce(n.duration, '视患者情况而定');

// 关系更新
MATCH (from) WHERE from.name = '情绪问题'
MATCH (to) WHERE to.name = '失眠症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '持续'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '记忆障碍'
MATCH (to) WHERE to.name = '失眠症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '不定期'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '失眠认知行为治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '放松训练'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '症状缓解期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = 'β-受体阻滞剂'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '长期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '胍法辛'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '长期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:24"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/006-第三部分-失眠症的流行病学和高危因素.md
[文本块]
# 第三部分 失眠症的流行病学和高危因素  

失眠症的现患率与定义、评估程序样本特征等因素有关。人群数据表明, 36.3% 成年人报告了当前存在至少一种失眠症状。将日间功能受损添加到失眠定义时, 现患率降至 9%~15% 。使用《精神障碍诊断与统计手册(第五版)》(DSM-5)或《国际睡眠障碍分类第3版文字修订版》(ICSD-3-TR)的失眠症诊断标准时, 现患率则为 6%~10%。

女性的失眠现患率约为男性的1.5倍。随着年龄增长而睡眠能力逐渐下降, 老年人的失眠现患率最高。一项美国全国性睡眠调查发现失眠人群中, 白人为 10% 、亚洲人为 4%，这可能与不同种族文化人群的睡眠态度和信念差异有关。失眠的自然病程具有波动性, 可能自发缓解。一项研究对388例失眠患者进行了为期3年随访，结果显示 54% 的患者在某个时间点进入缓解期，但其中约半数又最终复发。不同严重程度的失眠患者存在不同的病程轨迹, 基线的严重失眠患者往往表现出更持久的病程。综上所述, 失眠发生发展的影响因素众多, 包括性别、年龄、失眠既往史、严重程度、家族史、心理脆弱性、生物易感性等。

失眠症会带来一系列不良后果。短期包括醒来时身体不适、疲劳、易怒、对噪音和光线敏感, 以及日间动力下降等。长期失眠是多种精神疾病发展的风险因素, 增加抑郁症、焦虑症、物质滥用障碍等精神障碍的发病风险。失眠还常伴随躯体疾病, 因为慢性失眠引发的过度觉醒导致植物神经活动过于活跃从而诱发心脑血管系统疾病，失眠患者由于睡眠剥夺导致血糖调节能力受损, 也容易诱发糖尿病等代谢性疾病。此外, 失眠带来沉重的社会卫生经济学负担, 导致患者及其家庭的生活质量下降。

推荐意见：大多数的失眠流行病学研究采用了自评问卷而非诊断工具或客观监测数据, 所以失眠的流行病学特征尚需更多高质量研究。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'});

MERGE (n:Symptom {name: '失眠'})
SET 
    n.description = coalesce(n.description, '当前存在至少一种失眠症状'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Symptom {name: '日间功能受损'})
SET 
    n.description = coalesce(n.description, '白天表现出不能正常工作的状态'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '常见');

// 关系更新
MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '日间功能受损'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:25"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/014-一目标.md
[文本块]
# 一、目标  

针对基层医疗机构的医疗条件以及服务人群的特点，利用现有医疗资源，结合现代技术，制定合理的中西医结合防治方案。实现以下目标：
1. 增加有效睡眠时间和(或)改善睡眠质量。
2. 改善失眠相关日间损害。
3. 降低失眠慢性化的概率。
4. 减少失眠引发躯体疾病或与精神障碍的风险。

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:26"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/004-二过度觉醒假说.md
[文本块]
# 过度觉醒假说

该假说认为失眠是一种过度觉醒，呈持续性，横跨 $24~\\mathrm{h}$ 日周期。过度觉醒包括认知觉醒和生理觉醒两方面：
- 认知觉醒方面：担心、紧张、反刍等水平升高。
- 生理觉醒方面：躯体、皮质等水平升高。

失眠患者的表现包括：
- 睡眠期觉醒增多
- 日间小睡潜伏期延长
- $24\\,\\mathrm{h}$ 代谢率增加
- 清醒期更多β波活动
- 睡眠期的频繁$\\upalpha$波和$\\upbeta$波
- 自主神经功能活性增加
- 下丘脑-垂体-肾上腺轴过度活跃
- 炎症因子释放增加

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠'})
SET 
    n.description = coalesce(n.description, '失眠是一种过度觉醒，呈持续性，横跨24小时日周期'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Symptom {name: '睡眠期觉醒增多'})
SET 
    n.description = coalesce(n.description, '睡眠期觉醒增多的表现'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '高');

MERGE (n:Symptom {name: '日间小睡潜伏期延长'})
SET 
    n.description = coalesce(n.description, '日间小睡需要较长时间才能入睡'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '高');

MERGE (n:Symptom {name: '24h代谢率增加'})
SET 
    n.description = coalesce(n.description, '身体代谢速率在24小时内的增加'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '高');

MERGE (n:Symptom {name: '清醒期更多β波活动'})
SET 
    n.description = coalesce(n.description, '清醒状态下更频繁的β波活动'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '高');

MERGE (n:Symptom {name: '睡眠期的频繁α波和β波'})
SET 
    n.description = coalesce(n.description, '睡眠期间 α波 和 β波 的频繁出现'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '高');

MERGE (n:Symptom {name: '自主神经功能活性增加'})
SET 
    n.description = coalesce(n.description, '自主神经系统在失眠患者中的活性增加'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '高');

MERGE (n:Symptom {name: '下丘脑-垂体-肾上腺轴过度活跃'})
SET 
    n.description = coalesce(n.description, '下丘脑-垂体-肾上腺轴在睡眠障碍中表现为过度活跃'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '高');

MERGE (n:Symptom {name: '炎症因子释放增加'})
SET 
    n.description = coalesce(n.description, '失眠患者体内炎症因子的释放量增加'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '高');

// 关系更新
MATCH (from) WHERE from.name = '睡眠期觉醒增多'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '日间小睡潜伏期延长'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '24h代谢率增加'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '清醒期更多β波活动'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '睡眠期的频繁α波和β波'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '自主神经功能活性增加'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '下丘脑-垂体-肾上腺轴过度活跃'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '炎症因子释放增加'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:29"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/016-二心理治疗.md
[文本块]
心理治疗包含失眠的治疗，主要以CBTI为代表。CBTI是针对行为和认知因素导致失眠症的多成分非药物治疗，包括睡眠卫生教育、睡眠限制治疗、刺激控制治疗、认知治疗、放松训练等五个部分，被国内外指南推荐为失眠症的一线治疗。

传统的面对面CBTI模式效果良好，但对治疗师要求较高，并且受时间和空间限制。随着信息技术的发展，失眠数字疗法（DTI）应运而生，可以通过应用程序、微信、网络、电话等形式开展，降低了治疗成本，且不受时间和空间限制，与传统模式CBTI效果相当。基层医疗机构可通过“阶梯式保健”模式，在社区环境中以自助式CBTI作为失眠的首选保健，并根据失眠的严重程度将患者分配到不同级别的保健机构中，增加患者的治疗机会，节省有限的专家资源。

推荐意见：阶梯式保健和DTI等创新模式有助于CBTI在基层医疗机构的实施。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'});

MERGE (n:Treatment {name: '认知行为治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '针对行为和认知因素导致失眠症的多成分非药物治疗，包括睡眠卫生教育、睡眠限制治疗、刺激控制治疗、认知治疗、放松训练等五个部分'),
    n.dosage = coalesce(n.dosage, 'null'),
    n.duration = coalesce(n.duration, 'null'),
    n.contraindication = coalesce(n.contraindication, 'null');

MERGE (n:Treatment {name: '失眠数字疗法'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '通过应用程序、微信、网络、电话等形式开展的治疗方法'),
    n.dosage = coalesce(n.dosage, 'null'),
    n.duration = coalesce(n.duration, 'null'),
    n.contraindication = coalesce(n.contraindication, 'null');

// 关系更新
MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '认知行为治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '一线');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '失眠数字疗法'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '一线');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '认知行为治疗'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'false');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '失眠数字疗法'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'false');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:31"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/022-本共识编写委员会专家名单.md
[文本块]
# 本共识编写委员会专家名单

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:36"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/018-三物理治疗.md
[文本块]
# 物理治疗（续）

药物选择: 
- 催眠药物种类繁多。 
- 苯二氮草类受体激动剂 (BZRA)：临床应用广泛，包括：
  - 非苯二氮草类药物：唑吡坦、右佐匹克隆、佐匹克隆、扎来普隆
  - 苯二氮草类药物：劳拉西泮、阿普唑仑、艾司唑仑
  - GABAA受体部分正向别构调节剂：地达西尼
- 双重食欲素受体拮抗剂 (DORA)：新型镇静催眠药物，包括莱博雷生、达利雷生、苏沃雷生
- 其他药物：
  - 短、中效的BZRA或褪黑素受体激动剂
  - 具有镇静催眠作用的抗抑郁药物，适用于伴随焦虑和抑郁症状的失眠患者
  - 联合使用BZRA和具有镇静作用的抗抑郁剂
  - 具有镇静作用的抗精神病药，仅适用于特殊情况
  - 非处方药抗组胺药、普通褪黑素、草提取物等

疗程:
- 根据失眠障碍病程、严重程度及对药物的治疗反应决定，一般不超过4周
- 超过4周需重新评估，药物疗效与安全性欠佳者需更换治疗药物

终止治疗:
- 失眠改善后可考虑逐渐减量、停药
- 避免Sudden withdrawal以避免失眠反跳、癫痫发作和其他严重症状

特殊人群:
- 儿童、孕妇、哺乳期妇女、肝肾功能损害、重度睡眠呼吸暂停综合征、重症肌无力患者，需慎用镇静催眠药物

推荐意见:
- 镇静催眠药物应个体化、按需、间歇和最低有效剂量给药，建议首选短、中效的BZRA或褪黑素受体激动剂或DORA
- 镇静催眠药物使用一般不超过4周，失眠改善后可考虑逐渐减量、停药；连续治疗超过4周需重新全面评估

中医药治疗:
- 中医称失眠症为“不寐病”，在辨证论治基础上进行证治分类，采用中医药治疗、针刺、穴位按摩、艾灸、耳穴疗法、功法治疗、中医心理疗法等非药物疗法。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'});

MERGE (n:Treatment {name: '催眠药物'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于缓解失眠的药物'),
    n.duration = coalesce(n.duration, '不超过4周');

MERGE (n:Treatment {name: 'BZRA'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '苯二氮草类受体激动剂'),
    n.duration = coalesce(n.duration, '不超过4周');

MERGE (n:Treatment {name: 'DORA'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '双重食欲素受体拮抗剂'),
    n.duration = coalesce(n.duration, '不超过4周');

MERGE (n:Complication {name: '失眠改善后'})
SET 
    n.description = coalesce(n.description, '伴随药物逐渐减量或停药'),
    n.severity = coalesce(n.severity, '轻');

MERGE (n:Complication {name: '失眠反跳'})
SET 
    n.description = coalesce(n.description, '突然停药可能导致此症'),
    n.severity = coalesce(n.severity, '中');

MERGE (n:Complication {name: '癫痫发作'})
SET 
    n.description = coalesce(n.description, '可能由突然停药引起'),
    n.severity = coalesce(n.severity, '重');

// 关系更新
MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '催眠药物'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初始治疗');

MATCH (from) WHERE from.name = '催眠药物'
MATCH (to) WHERE to.name = '失眠症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.95),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '重');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = 'BZRA'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '初始治疗');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = 'DORA'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '初始治疗');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '失眠改善后'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.7),
    r.timeframe = coalesce(r.timeframe, '短期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '失眠反跳'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.6),
    r.timeframe = coalesce(r.timeframe, '短期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '癫痫发作'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.5),
    r.timeframe = coalesce(r.timeframe, '短期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:37"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/020-第八部分失眠症的基层管理.md
[文本块]
# 第八部分失眠症的基层管理  

建立基层失眠症体系管理, 需要患者及其家庭成员/照料者、基层医疗机构人员、专科医师的共同参与。基层医疗机构具有特定的社区基础, 在开展失眠防治、分级诊疗和建立健康网络方面具有重要作用。  

一、立足筛查, 数据建档  

(一)失眠症筛查模式  
- ISI可作为基层人群定期筛查量表, 并在筛查基础上应用睡眠日记、PSQI、ESS、MEQ、STOP-BANG、RLSQ等量表, 以及家用睡眠监测设备、活动记录仪、非侵入式远程监控、额贴脑电、手环等设备进行筛查和评估。  

(二)建立电子健康档案  
- 基层医疗机构通过建立电子健康档案, 充分运用互联网等信息网络技术, 开展失眠症的定期评估和健康管理。通过信息化的个案管理平台, 提高疾病的防治效率, 降低复发风险, 有效促进医疗服务的可及性。  

二、分级诊疗、双向转诊  

(一)分级诊疗  
- 分级诊疗可以优化医疗服务、构建多层次化体系, 通过专科和全科、二三级医院等上级医疗机构和基层医疗机构的协同合作, 给患者提供全疾病周期的医疗服务, 使患者在失眠症的早期获得及时的干预, 减少就医的不便和盲目性, 以及减少镇静催眠类药物的滥用。  

(二)各级医疗机构失眠症的诊治范围  
1. 基层医疗机构: 具备失眠症的识别能力, 具有开展失眠症的诊疗、预防、康复能力。  
2. 上级医疗机构: 具有开展失眠症、药物依赖性失眠、异相睡眠障碍、不宁腿综合征、失眠症共病精神障碍和躯体疾病等疑难、急危重症的诊断、治疗能力。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'});

MERGE (n:Symptom {name: '失眠'})
SET 
    n.description = coalesce(n.description, '难以入眠、维持睡眠或过早醒来'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Treatment {name: '分级诊疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '通过不同级别医疗机构提供的治疗服务'),
    n.duration = coalesce(n.duration, '持续');

MERGE (n:Complication {name: '药物依赖性失眠'})
SET 
    n.description = coalesce(n.description, '因药物滥用导致的失眠症状'),
    n.severity = coalesce(n.severity, '严重');

// 关系更新
MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '分级诊疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '早期');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '失眠症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '药物依赖性失眠'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.6),
    r.timeframe = coalesce(r.timeframe, '长期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:38"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/015-二防治措施.md
[文本块]
# 二、防治措施  

包括良好生活习惯、心理治疗、物理治疗、药物治疗、中医治疗等。在基层医疗机构，良好生活习惯是防治基础，心理治疗和物理治疗是优选治疗策略，药物治疗是以上措施效果不佳的治疗方法。  

(一)良好生活习惯  

1. 科学膳食:《中国居民膳食指南(2022)》建议，注意饮食的搭配和营养的摄入，增加膳食纤维和水分的摄入量，避免过量摄入高糖、高脂、高盐的食物，适当控制总能量摄入，以维持身体的健康。失眠者还应该避免午后摄入咖啡、茶、奶茶、酒精饮品等刺激性食物，以及睡前过度进食等。  

2. 充足日照: 光照是维持生物节律的最重要授时因子，失眠患者应减少夜间人工光源，特别是电子产品的使用；增加日间自然光照，上午的光照比下午更能促进睡眠。  

3. 合理运动: 运动可以改善睡眠质量，并有助于建立稳定的休息-运动规律，推荐瑜伽、太极拳、八段锦等传统运动。  

4. 心理调适: 可以自我进行以下心理调适:  
   (1)放松训练: 降低紧张与过度警觉，提高睡眠质量，包括渐进式肌肉放松训练、腹式呼吸、冥想等。  
   (2)音乐疗法: 轻柔舒缓的音乐可以降低神经系统兴奋性，减轻焦虑情绪从而改善睡眠。  
   (3)调整认知: 不灾难化和过分关注失眠，不因偶尔失眠而产生挫败感，培养失眠的耐受性。  

推荐意见: 科学膳食、充足日照、合理运动、心理调适等良好生活习惯，可以保持健康的身心状态，促进健康睡眠。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'})
SET 
    n.description = coalesce(n.description, '一种常见的睡眠障碍，影响睡眠质量和数量');

MERGE (n:Treatment {name: '良好生活习惯'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '包括科学膳食、充足日照、合理运动和心理调适等'),
    n.duration = coalesce(n.duration, '长期');

MERGE (n:Treatment {name: '心理治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '通过心理干预改善睡眠'),
    n.duration = coalesce(n.duration, '短期');

MERGE (n:Treatment {name: '物理治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '使用物理手段改善睡眠质量'),
    n.duration = coalesce(n.duration, '短期');

MERGE (n:Treatment {name: '药物治疗'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '使用药物来帮助睡眠'),
    n.duration = coalesce(n.duration, '短期');

MERGE (n:Symptom {name: '失眠'})
SET 
    n.description = coalesce(n.description, '入睡困难、睡眠维持困难或早醒'),
    n.severity = coalesce(n.severity, '中'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:RiskFactor {name: '咖啡因摄入'})
SET 
    n.description = coalesce(n.description, '过量摄入咖啡、茶等刺激性食物'),
    n.impact_level = coalesce(n.impact_level, '中');

// 关系更新
MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '良好生活习惯'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '基础治疗');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '心理治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '优选治疗');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '物理治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.65),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '优选治疗');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '药物治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.5),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '低效治疗');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '咖啡因摄入'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '高'),
    r.evidence_level = coalesce(r.evidence_level, '明确');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:39"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/024-本共识编写委员会专家名单.md
[文本块]
本共识编写委员会专家名单（续）  
编写秘书（以姓氏汉语拼音排序）：  
- 罗雪 [南方医科大学南方医院精神心理科（睡眠医学中心）]  
- 曾淑妃 [南方医科大学南方医院精神心理科（睡眠医学中心）]  

利益冲突所有作者声明不存在利益冲突  

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:40"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/010-二失眠症.md
[文本块]
# 失眠症分类

失眠症根据ICSD-3-TR可分为以下几类：

1. **慢性失眠症** (ICD-11编码: 7A00)
   - 诊断标准：
     1. 患者或其监护人观察到至少一项以下症状：
        - 睡眠困难
        - 睡眠维持困难
        - 早醒
        - 拒绝上床睡觉
        - 在父母或照顾者干预下难以入睡
     2. 患者或其监护人观察到至少一项以下相关症状：
        - 疲劳或萎靡不振
        - 注意力、专注力或记忆力下降
        - 功能损害（社交、家庭、职业或学业等）
        - 情绪不稳或易激惹
        - 日间困倦
        - 行为问题（活动过度、冲动或攻击性）
        - 动力、精力或工作主动性下降
        - 易犯错或易出事故
        - 对睡眠质量的强烈关切或不满意
     3. 睡眠/觉醒主诉不能由不合适的睡眠机会或环境解释。
     4. 每周发生至少3次睡眠困难和相关日间症状。
     5. 持续至少3个月。
     6. 这些症状不能仅由当前的其他睡眠障碍、躯体疾病、精神障碍或药物/物质使用所致。

2. **短期失眠症** (ICD-11编码: 7A01)
   - 诊断标准：
     - 符合慢性失眠症的第(1)~(3)、(6)条标准，病程小于3个月，且没有频率要求。

3. **其他失眠症** (ICD-11编码: 7A0Z)
   - 指存在失眠症状但不符合慢性或短期失眠症诊断标准的情况。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '慢性失眠症'})
SET 
    n.code = coalesce(n.code, '7A00');

MERGE (n:Disease {name: '短期失眠症'})
SET 
    n.code = coalesce(n.code, '7A01');

MERGE (n:Disease {name: '其他失眠症'})
SET 
    n.code = coalesce(n.code, '7A0Z');

MERGE (n:Symptom {name: '睡眠困难'});

MERGE (n:Symptom {name: '睡眠维持困难'});

MERGE (n:Symptom {name: '早醒'});

MERGE (n:Symptom {name: '拒绝上床睡觉'});

MERGE (n:Symptom {name: '难以入睡'});

MERGE (n:Symptom {name: '疲劳或萎靡不振'});

MERGE (n:Symptom {name: '注意力下降'});

MERGE (n:Symptom {name: '日间困倦'});

MERGE (n:Symptom {name: '情绪不稳'});

MERGE (n:Symptom {name: '行为问题'});

MERGE (n:Symptom {name: '对睡眠质量的强烈关切'});

// 关系更新
MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '睡眠困难'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '每周至少3次'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '睡眠维持困难'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '每周至少3次'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '早醒'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '每周至少3次'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '拒绝上床睡觉'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '每周至少3次'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '难以入睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '每周至少3次'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '疲劳或萎靡不振'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '注意力下降'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '日间困倦'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '情绪不稳'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '低');

MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '行为问题'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '慢性失眠症'
MATCH (to) WHERE to.name = '对睡眠质量的强烈关切'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '短期失眠症'
MATCH (to) WHERE to.name = '睡眠困难'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '不定期'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '短期失眠症'
MATCH (to) WHERE to.name = '睡眠维持困难'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '不定期'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '短期失眠症'
MATCH (to) WHERE to.name = '早醒'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '不定期'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '短期失眠症'
MATCH (to) WHERE to.name = '拒绝上床睡觉'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '不定期'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '短期失眠症'
MATCH (to) WHERE to.name = '难以入睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '不定期'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '其他失眠症'
MATCH (to) WHERE to.name = '睡眠困难'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '不定期'),
    r.severity = coalesce(r.severity, '低');

MATCH (from) WHERE from.name = '其他失眠症'
MATCH (to) WHERE to.name = '睡眠维持困难'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '不定期'),
    r.severity = coalesce(r.severity, '低');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:41"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/021-三上转指征.md
[文本块]
上转指征：
1. 失眠症经规范化治疗4周以上，未得到缓解或患者对治疗效果不满意。
2. 需要上级医疗机构进行PSG、核磁共振等检查，以明确诊断和协助治疗。
3. 基层不具备rTMS、tACS、生物反馈疗法等物理治疗设备，需上级医疗机构配合进行。
4. 合并不稳定的躯体疾病、精神障碍、其他睡眠障碍。

下转指征：
失眠症经上级医疗机构规范治疗后，症状缓解的患者可下转至基层医疗机构进行进一步巩固治疗、康复、随访。

规范治疗、定期随访：
1. 规范治疗：
   - 治疗方式包括良好生活习惯、心理治疗、物理治疗、药物治疗、中医药治疗等。
   - 在基层医疗机构，良好生活习惯是防治基础，心理治疗和物理治疗是优选治疗策略，药物治疗是以上措施效果不佳的治疗方法。
   - CBTI可以提高基层失眠症的临床疗效，减少复发率、降低发病率，值得在基层诊疗中进一步推广。

2. 定期随访：
   - 基层医疗机构可以通过面对面访谈、电话、手机App、微信随访等形式做好失眠患者定期随访。
   - 定期随访有利于提高患者的睡眠认知水平，定期更新健康档案，动态观察睡眠情况，及时就患者出现的睡眠问题进行治疗、干预和转诊，降低失眠症进一步严重、恶化的风险。

推荐意见：
基层医疗机构在失眠症管理中承担重要任务，立足于筛查，建立电子健康档案，并根据诊疗范围与上级医疗机构开展规范化分级诊疗，并定期随访。

总结：
本共识的制订充分吸纳了国内外失眠症诊断与治疗领域的最新研究成果，经过数十位专家的讨论和修订形成最终文本。本共识仅代表参与撰写的专家组的集体意见，不具有法律上的强制执行力。随着未来失眠症诊断和治疗技术的不断进步，本共识将根据新的科学证据进行适时更新和完善。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'});

MERGE (n:Symptom {name: '症状缓解'})
SET 
    n.description = coalesce(n.description, '失眠症患者经上级医疗机构规范治疗后的症状改善'),
    n.severity = coalesce(n.severity, '轻'),
    n.frequency = coalesce(n.frequency, '偶发');

MERGE (n:Treatment {name: '认知行为治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, 'CBTI可以提高基层失眠症的临床疗效，减少复发率、降低发病率');

MERGE (n:Disease {name: '躯体疾病'});

MERGE (n:Disease {name: '精神障碍'});

MERGE (n:Disease {name: '其他睡眠障碍'});

MERGE (n:Examination {name: 'PSG检查'})
SET 
    n.description = coalesce(n.description, '通过多导睡眠监测法进行疾病诊断'),
    n.method = coalesce(n.method, '多导睡眠监测'),
    n.requirement = coalesce(n.requirement, '患者需在睡眠实验室进行');

MERGE (n:Examination {name: '核磁共振'})
SET 
    n.description = coalesce(n.description, '用于明确睡眠相关疾病的检查'),
    n.method = coalesce(n.method, '核磁共振成像'),
    n.requirement = coalesce(n.requirement, '无特殊要求');

// 关系更新
MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '认知行为治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '症状缓解'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '躯体疾病'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '持续'),
    r.severity = coalesce(r.severity, '重');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '精神障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '持续'),
    r.severity = coalesce(r.severity, '重');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '其他睡眠障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '持续'),
    r.severity = coalesce(r.severity, '重');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = 'PSG检查'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '核磁共振'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:41"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/023-本共识编写委员会专家名单.md
[文本块]
# 本共识编写委员会专家名单（续）
## 执笔人
- 艾思志 (广州医科大学附属脑科医院睡眠与节律医学中心)
- 陈景旭 (北京回龙观医院睡眠医学中心)
- 冯霞 (贵州省第二人民医院睡眠医学科)
- 雷旭 (西南大学心理学部)
- 李陈渝 (重庆市中医院神经内科(脑病科))
- 刘帅 (南方医科大学南方医院精神心理科(睡眠医学中心))
- 罗雪 (南方医科大学南方医院精神心理科(睡眠医学中心))
- 吕东升 (内蒙古自治区脑科医院睡眠医学中心)
- 潘集阳 (暨南大学附属第一医院睡眠医学中心)
- 谭云龙 (北京回龙观医院)
- 肖莉 (中国医科大学附属盛京医院睡眠医学中心)
- 曾淑妃 (南方医科大学南方医院精神心理科(睡眠医学中心))
- 张斌 (南方医科大学南方医院精神心理科(睡眠医学中心))
- 张继辉 (广州医科大学附属脑科医院睡眠与节律医学中心)
- 张雯静 (上海中医药大学附属市中医医院神志病科)
- 张云淑 (河北省精神卫生中心睡眠医学科)

## 讨论专家
- 艾思志 (广州医科大学附属脑科医院睡眠与节律医学中心)
- 安建雄 (中国医科大学航空总医院)
- 陈贵海 (安徽医科大学附属巢湖医院睡眠障碍科)
- 陈景旭 (北京回龙观医院睡眠医学中心)
- 陈锐 (苏州大学附属第二医院呼吸内科)
- 陈雄 (武汉大学中南医院耳鼻咽喉头颈外科)
- 陈云飞 (上海中医药大学附属岳阳中西医结合医院针灸一科)
- 冯霞 (贵州省第二人民医院睡眠医学科)
- 冯媛 (南方医科大学南方医院精神心理科(睡眠医学中心))
- 高东 (陆军军医大学大坪医院睡眠心理中心)
- 高雪梅 (北京大学口腔医学院睡眠呼吸障碍诊疗中心)
- 顾平 (河北医科大学第一医院神经内科)
- 韩芳 (北京大学人民医院呼吸睡眠医学科)
- 胡克 (武汉大学人民医院呼吸与危重症医学科)
- 胡志安 (陆军军医大学基础医学院生理学教研室)
- 黄志力 (复旦大学基础医学院药理学系)
- 贾福军 (广东省人民医院广东省精神卫生中心心理精神科)
- 雷旭 (西南大学心理学部认知神经影像中心)
- 李陈渝 (重庆市中医院神经内科(脑病科))
- 李庆云 (上海交通大学医学院附属瑞金医院呼吸内科)
- 李善群 (复旦大学附属中山医院呼吸内科)
- 李延忠 (山东大学齐鲁医院耳鼻咽喉科)
- 刘春风 (苏州大学附属第二医院神经内科)
- 刘帅 (南方医科大学南方医院精神心理科(睡眠医学中心))
- 罗远明 (广州医科大学附属第一医院呼吸内科)
- 吕东升 (内蒙古自治区精神卫生中心睡眠医学中心)
- 吕云辉 (云南省第一人民医院睡眠医学中心)
- 欧琼 (广东省人民医院呼吸内科)
- 潘集阳 (暨南大学附属第一医院精神医学科)
- 时杰 (北京大学中国药物依赖性研究所)
- 宿长军 (空军军医大学唐都医院神经内科)
- 孙洪强 (北京大学第六医院睡眠医学中心)
- 谭云龙 (北京回龙观医院)
- 汤永红 (南华大学附属南华医院神经内科)
- 唐吉友 (山东第一医科大学第一附属医院神经内科)
- 唐向东 (四川大学华西医院睡眠医学中心)
- 王菡侨 (河北医科大学第三医院呼吸睡眠科)
- 王涛 (华中科技大学协和医院神经内科)
- 王玉平 (首都医科大学宣武医院神经内科)
- 汪卫东 (中国中医科学院广安门医院心理科)
- 王赞 (吉林大学第一医院神经内科)
- 吴惠涓 (海军军医大学第二附属医院神经内科)
- 肖莉 (中国医科大学附属盛京医院睡眠医学中心)
- 谢宇平 (甘肃省人民医院甘肃省睡眠医学中心)
- 徐建 (上海中医药大学附属市中医医院神志病科)
- 徐敏 (中国科学院脑科学与智能技术卓越创新中心)
- 徐璎 (苏州大学剑桥-苏大基因组资源中心)
- 易红良 (上海交通大学医学院附属第六人民医院耳鼻喉科)
- 詹淑琴 (首都医科大学宣武医院神经内科)
- 张斌 (南方医科大学南方医院精神心理科(睡眠医学中心))
- 张继辉 (广州医科大学附属脑科医院睡眠与节律医学中心)
- 张雯静 (上海中医药大学附属市中医医院神志病科)
- 张云淑 (河北省精神卫生中心精神科)
- 赵忠新 (海军军医大学第二附属医院神经内科)
- 左和鸣 (中国睡眠研究会)

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:46"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/012-第六部分失眠症的基层筛查和评估方法及工具.md
[文本块]
# 第六部分失眠症的基层筛查和评估方法及工具  

一、失眠症的基层筛查  
定期筛查有助于及早发现睡眠问题，降低失眠症的患病率，减少社会卫生经济学的影响，促进社会的睡眠健康认知。

二、失眠症的评估方法及工具  
1. 病史采集  
   (1) 现病史:  
   - 核心症状及伴随症状  
   - 睡前状况: 评估傍晚到睡前的行为模式、心理活动及睡眠环境  
   - 睡眠-觉醒节律: 了解日常作息习惯  
   - 日间功能损害: 日间的工作和学习情况，以及思睡和疲劳状况  
   (2) 其他: 既往史、个人史、月经史、婚育史、家族史等  

2. 体格检查  
   - 全面体格检查（包括神经系统检查）以评估患者的躯体状况  

3. 精神检查  
   - 评估患者的精神状态，建议使用抑郁筛查量表（PHQ-9）、医院焦虑抑郁量表（HADS）等量表辅助评估常见抑郁和焦虑情绪  

4. 辅助检查  
   - 病史提示潜在疾病影响睡眠时，需要进行相关辅助检查（如动态血压监测、磁共振、甲状腺功能等检查）以明确诊断，必要时转诊至上级医院  

5. 睡眠检查  
   (1) 主观评估工具:  
   - 睡眠日记: 患者应连续2周（至少1周）记录每天的活动和睡眠情况  
   - 量表评估: 常用量表包括失眠严重程度指数（ISI）、匹兹堡睡眠质量指数（PSQI）、Epworth嗜睡量表（ESS）、清晨型-夜晚型量表（MEQ）、睡眠呼吸暂停初筛量表（STOP-BANG）、不宁腿综合征问卷（RLSQ）等  
   (2) 客观评估工具: 多导睡眠监测（PSG），基层可以使用家用睡眠监测设备、活动记录仪、非侵入式远程监控、额贴脑电和手环等创新设备  

推荐意见5: 失眠症的基层定期筛查非常必要，睡眠日志、量表及活动记录仪在失眠筛查和评估中具有实际操作的便捷性和准确性。  

三、中医的评估方法及工具  
中医的失眠评估包括病史采集和望、闻、问、切，主要用于证候的鉴别诊断和确立诊断。目前，已发展了多种中医评估量表:  
- 失眠症系列状态量表  
- 老年失眠中医PRO量表  
- 失眠症中医生存质量量表  
- 中医失眠量表  
- 主观性失眠评定问卷  
- 成人不寐中医证候流行病学调查问卷  
- 失眠症中医辨证诊断和治疗前瞻性评定表  

这些量表除了评估夜间睡眠，均涵盖日间精神状态、情绪状态、脏腑功能表现，反映整体证候表现。  

推荐意见6: 中医失眠评估量表用于证候的诊断，对失眠的中医分型治疗具有临床意义。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'})
SET 
    n.description = coalesce(n.description, '影响睡眠的疾病'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Symptom {name: '睡眠问题'})
SET 
    n.description = coalesce(n.description, '包括难以入睡、易醒等症状'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '日间功能损害'})
SET 
    n.description = coalesce(n.description, '影响到日常工作的功能'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '焦虑情绪'})
SET 
    n.description = coalesce(n.description, '伴随着焦虑的情绪表现'),
    n.severity = coalesce(n.severity, '轻度'),
    n.frequency = coalesce(n.frequency, '间歇性');

MERGE (n:Symptom {name: '抑郁情绪'})
SET 
    n.description = coalesce(n.description, '伴随着抑郁的情绪表现'),
    n.severity = coalesce(n.severity, '轻度'),
    n.frequency = coalesce(n.frequency, '间歇性');

MERGE (n:Treatment {name: '失眠症认知行为疗法'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '旨在改善睡眠质量的心理治疗方法'),
    n.duration = coalesce(n.duration, '2-6周');

MERGE (n:Treatment {name: '失眠症药物治疗'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '通过药物缓解失眠症状'),
    n.dosage = coalesce(n.dosage, '视医生处方而定'),
    n.duration = coalesce(n.duration, '短期用药');

MERGE (n:Complication {name: '抑郁症'})
SET 
    n.description = coalesce(n.description, '与失眠症相关的常见并发症'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Complication {name: '焦虑症'})
SET 
    n.description = coalesce(n.description, '与失眠症相关的常见并发症'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Scale {name: '失眠严重程度指数'})
SET 
    n.description = coalesce(n.description, '评估失眠严重程度的量表'),
    n.score_range = coalesce(n.score_range, '0-28'),
    n.interpretation = coalesce(n.interpretation, '分数越高，失眠越严重');

MERGE (n:Scale {name: '匹兹堡睡眠质量指数'})
SET 
    n.description = coalesce(n.description, '评估睡眠质量的量表'),
    n.score_range = coalesce(n.score_range, '0-21'),
    n.interpretation = coalesce(n.interpretation, '分数越高，睡眠质量越差');

MERGE (n:Scale {name: 'Epworth嗜睡量表'})
SET 
    n.description = coalesce(n.description, '评估日间嗜睡程度的量表'),
    n.score_range = coalesce(n.score_range, '0-24'),
    n.interpretation = coalesce(n.interpretation, '分数越高，嗜睡程度越严重');

// 关系更新
MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '睡眠问题'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '日间功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '焦虑情绪'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '中等'),
    r.severity = coalesce(r.severity, '轻度');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '抑郁情绪'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '中等'),
    r.severity = coalesce(r.severity, '轻度');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '失眠症认知行为疗法'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '失眠症药物治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '需要时');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '抑郁症'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.6),
    r.timeframe = coalesce(r.timeframe, '长期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '焦虑症'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.5),
    r.timeframe = coalesce(r.timeframe, '长期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '失眠严重程度指数'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.95),
    r.recommendation_level = coalesce(r.recommendation_level, '高');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '匹兹堡睡眠质量指数'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.9),
    r.recommendation_level = coalesce(r.recommendation_level, '高');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = 'Epworth嗜睡量表'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.85),
    r.recommendation_level = coalesce(r.recommendation_level, '中');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:31:51"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/017-三物理治疗.md
[文本块]
物理治疗具有使用方便、不易成瘾、不良反应小等优点。失眠的常用物理治疗包括光照疗法、重复经颅磁刺激、经颅电刺激、生物反馈疗法等;此外，迷走神经刺激术、虚拟现实(VR)、听觉刺激等新兴技术也日益得到关注。

1. 光照治疗: 光线是调节昼夜节律的重要因素。光照疗法可改善失眠患者的日间思睡，减少睡眠片段化，适用人群广泛。推荐晨间光照，单位 2500~10000 lux，每天光照时间 30~45 min。

2. 重复经颅磁刺激(repetitive transcranial magnetic stimulation, rTMS): 低频 rTMS (≤1 Hz) 通过降低失眠患者的皮质异常兴奋性、诱导慢波睡眠、增加睡眠深度，同时影响松果体褪黑素的合成和分泌，以维持正常睡眠觉醒周期和改善睡眠质量。rTMS对失眠的疗效确切，并且可以缓解焦虑和抑郁症状，疗效持续时间与疗程有关。

3. 经颅电刺激(transcranial electrical stimulation, TES): TES通过向头皮施加低强度电流来调节大脑活动，包括经颅交流电刺激(tACS)和经颅直流电刺激(tDCS)。tACS对慢性失眠患者有显著改善作用，tDCS在失眠患者中应用较少，暂不推荐。

4. 生物反馈疗法: 生物反馈旨在减少条件唤醒，尤其是躯体、认知或皮质的过度唤醒，可以减少失眠者的入睡时间和觉醒次数，可以作为CBTI的替代疗法或辅助治疗。

5. 其他: 迷走神经刺激、VR、听觉刺激等治疗方法尚缺乏高质量的临床证据支持，暂不推荐。

推荐意见: 光照疗法对于各种睡眠紊乱普遍有效，rTMS可以缓解失眠相关的焦虑和抑郁症状，tACS对慢性失眠患者有改善作用，生物反馈疗法可减少失眠者的入睡时间和觉醒次数。

药物治疗主要是指镇静催眠药物，治疗中需要明确失眠症的病因以针对性治疗，还应避免或减少相关的负面效应。基层医疗机构需要遵循以下原则：

1. 治疗时机: 无法开展CBTI或不愿意接受CBTI，以及CBTI疗效不满意时，可以与患者共同决策，选择药物治疗; 对于失眠症状严重且紧急的患者，宜尽早应用。

2. 个体化: 考虑患者的症状学特点，如入睡困难、睡眠维持困难或早醒，关注共病的躯体疾病、精神障碍、睡眠障碍、药物和（或）成瘾性物质使用史、药物相互作用，以及患者的自我选择和药物可获取性等。

3. 按需和间歇给药: 以最低剂量开始治疗，逐步向上滴定以达到治疗效果。“按需”的具体决策标准: 预期入睡困难时，上床前 5~10 min 服用; 上床 30 min 后仍不能入睡时，立即服用; 比通常起床时间提前≥5 h 醒来，且无法再次入睡时，可以服用短半衰期的药物; 根据次日的日间活动需求（如重要事务），睡前服用。“间歇”是指非连续性每晚用药，具体频次尚无定论，推荐频率为3~5晚/周。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠'});

MERGE (n:Treatment {name: '光照疗法'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '光照疗法可改善失眠患者的日间思睡，减少睡眠片段化，适用人群广泛。推荐晨间光照，单位 2500~10000 lux，每天光照时间 30~45 min。');

MERGE (n:Treatment {name: '重复经颅磁刺激'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '低频 rTMS (≤1 Hz) 通过降低失眠患者的皮质异常兴奋性、诱导慢波睡眠、增加睡眠深度，同时影响松果体褪黑素的合成和分泌，以维持正常睡眠觉醒周期和改善睡眠质量。');

MERGE (n:Treatment {name: '经颅电刺激'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, 'TES通过向头皮施加低强度电流来调节大脑活动，包括经颅交流电刺激(tACS)和经颅直流电刺激(tDCS)。');

MERGE (n:Treatment {name: '生物反馈疗法'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '生物反馈旨在减少条件唤醒，尤其是躯体、认知或皮质的过度唤醒，可以减少失眠者的入睡时间和觉醒次数。');

MERGE (n:Treatment {name: '迷走神经刺激'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '迷走神经刺激尚缺乏高质量的临床证据支持，暂不推荐。');

MERGE (n:Treatment {name: '虚拟现实'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '虚拟现实(VR)治疗尚缺乏高质量的临床证据支持，暂不推荐。');

MERGE (n:Treatment {name: '听觉刺激'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '听觉刺激尚缺乏高质量的临床证据支持，暂不推荐。');

// 关系更新
MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '光照疗法'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初始');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '重复经颅磁刺激'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初始');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '经颅电刺激'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '初始');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '生物反馈疗法'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '辅助');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '迷走神经刺激'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.4),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '不推荐');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '虚拟现实'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.4),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '不推荐');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '听觉刺激'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.4),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '不推荐');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:00"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/019-三物理治疗.md
[文本块]
# 物理治疗（续）

## 失眠症的辨证论治
1. **实证**
   - **肝气郁结证**
     - 治法: 疏肝解郁, 行气止痛
     - 推荐方药: 柴胡疏肝散或逍遥散加减
     - 推荐中成药: 舒肝解郁胶囊, 舒眠胶囊
   - **肝郁化火证**
     - 治法: 疏肝解郁, 清热化火
     - 推荐方药: 龙胆泻肝汤加减
   - **胃气失和证**
     - 治法: 行气导滞, 和胃降逆
     - 推荐方药: 保和丸或半夏林米汤加减
   - **痰热内扰证**
     - 治法: 化痰清热, 和中安神
     - 推荐方药: 黄连温胆汤加减
   - **瘀血内阻证**
     - 治法: 活血化瘀, 通经活络
     - 推荐方药: 血府逐瘀汤加减
   - **心火炽盛证**
     - 治法: 清心泻火, 养血安神
     - 推荐方药: 导赤汤合交泰丸或朱砂安神丸加减

2. **虚证**
   - **心脾两虚证**
     - 治法: 益气健脾, 养心安神
     - 推荐方药: 归脾汤加减
     - 推荐中成药: 枣仁安神胶囊
   - **心胆气虚证**
     - 治法: 益气养心, 镇静安神
     - 推荐方药: 安神定志丸合酸枣仁汤加减
   - **心肾不交证**
     - 治法: 滋阴降火, 交通心肾
     - 推荐方药: 六味地黄丸合交泰丸或天王补心丹加减
     - 推荐中成药: 乌灵胶囊, 百乐眠胶囊

## 中药单味药治疗
1. **药目**
   - 酸枣仁, 远志, 五味子, 茯神, 草, 落花生枝叶, 柏子仁等
2. **服用方法**
   - 单味药可泡水作代茶饮

## 失眠症的非药物手段治疗
1. **传统治疗**
   - 针刺、电针、温针、穴位按摩、艾灸
   - 相关穴位: 101关、神庭、安眠、太溪
   - 操作要领参考《针灸技术操作规范》
2. **耳穴治疗**
   - 取穴: 神门、心、肝、皮质下、交感
   - 每日自行按压3~5次，每次每穴1~2分钟
   - 每晚睡前按1次，约5分钟，双耳交替
   - 每周换耳穴贴2次，每次双耳各2贴，持续4周
3. **功法治疗**
   - **八段锦**
     - 操作要领参考国家体育总局推广的《健身气功·八段锦》
   - **太极拳**
     - 操作要领参考“六式太极拳”
   - 建议治疗时间: 每周3~4次，每次半小时，至少持续12周
4. **中医心理疗法**
   - 结合心理特征，重视精神调摄，倡导天人相应、五志有节、起居有常

## 推荐意见
1. 中医治疗在辨证论治的基础上，对失眠症进行分类诊治，应用中药、中成药、针灸等非药物疗法，具有一定的应用场景。
2. 单味药代茶饮、穴位按摩、耳穴疗法、八段锦、太极拳等功法锻炼的方法简便，便于患者居家保健。
3. 中医治疗可以单独应用，也可应用于镇静催眠药物的减量、停药过程。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'})
SET 
    n.description = coalesce(n.description, '一种常见的睡眠障碍，表现为入睡困难、睡眠质量差或早醒等症状');

MERGE (n:Treatment {name: '柴胡疏肝散'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于疏肝解郁');

MERGE (n:Treatment {name: '逍遥散'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于疏肝解郁');

MERGE (n:Treatment {name: '舒肝解郁胶囊'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于舒肝解郁');

MERGE (n:Treatment {name: '舒眠胶囊'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于帮助睡眠');

MERGE (n:Treatment {name: '龙胆泻肝汤'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于疏肝解郁、清热化火');

MERGE (n:Treatment {name: '保和丸'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于和胃降逆');

MERGE (n:Treatment {name: '半夏林米汤'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于导滞');

MERGE (n:Treatment {name: '黄连温胆汤'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于化痰清热');

MERGE (n:Treatment {name: '血府逐瘀汤'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于活血化瘀');

MERGE (n:Treatment {name: '导赤汤'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于清心泻火');

MERGE (n:Treatment {name: '交泰丸'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于养血安神');

MERGE (n:Treatment {name: '朱砂安神丸'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于养心安神');

MERGE (n:Treatment {name: '归脾汤'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于益气健脾');

MERGE (n:Treatment {name: '枣仁安神胶囊'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于养心安神');

MERGE (n:Treatment {name: '安神定志丸'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于镇静安神');

MERGE (n:Treatment {name: '酸枣仁汤'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于养心安神');

MERGE (n:Treatment {name: '六味地黄丸'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于滋阴降火');

MERGE (n:Treatment {name: '天王补心丹'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于滋阴降火');

MERGE (n:Treatment {name: '乌灵胶囊'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于养心安神');

MERGE (n:Treatment {name: '百乐眠胶囊'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于助眠');

// 关系更新
MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '柴胡疏肝散'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '逍遥散'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '舒肝解郁胶囊'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '舒眠胶囊'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '龙胆泻肝汤'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '中期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '保和丸'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '中期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '半夏林米汤'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '中期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '黄连温胆汤'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '中期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '血府逐瘀汤'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '中期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '导赤汤'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '后期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '交泰丸'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '后期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '朱砂安神丸'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '后期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '归脾汤'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '中期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '枣仁安神胶囊'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '安神定志丸'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '酸枣仁汤'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '后期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '六味地黄丸'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '后期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '天王补心丹'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '后期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '乌灵胶囊'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '后期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '百乐眠胶囊'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '后期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:32:19"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
基层医疗机构失眠症诊断和治疗中国专家共识.md
[隶属文件分块名]
基层医疗机构失眠症诊断和治疗中国专家共识/011-二鉴别诊断.md
[文本块]
# 二、鉴别诊断  

失眠症可共病某种躯体疾病或精神障碍,需要区别单纯性失眠症、共病性失眠症,以及没有达到诊断标准的失眠症状。  

1. 精神障碍:  
   - 抑郁障碍  
   - 双相情感障碍  
   - 焦虑障碍  

2. 躯体疾病:  
   - 内分泌系统疾病  
   - 神经系统疾病  
   - 心血管系统疾病  
   - 呼吸系统疾病  
   - 消化系统疾病  

3. 精神活性物质或药物:  
   - 抗抑郁药物  
   - 中枢兴奋性药物  
   - 心血管药物  
   - 麻醉性镇痛药  
   - 平喘药  
   - 酒精  
   - 烟草  

4. 其他睡眠障碍:  
   - 睡眠呼吸障碍  
   - 不宁腿综合征  
   - 发作性睡病  
   - 异态睡眠  

5. 昼夜节律相关睡眠障碍:  
   - 倒班  
   - 飞行时差  

6. 环境性睡眠障碍:  
   - 干扰睡眠的环境因素  

7. 睡眠不足综合征:  
   - 过度或有意延长工作或娱乐的时间而缺乏充足的时间睡眠  

推荐意见4:  
失眠既可以是一种症状,也可以是独立的疾病。需要鉴别单纯性失眠症、共病性失眠症,以及未达诊断标准的失眠症状。(专家共识)  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠症'});

MERGE (n:Disease {name: '抑郁障碍'});

MERGE (n:Disease {name: '双相情感障碍'});

MERGE (n:Disease {name: '焦虑障碍'});

MERGE (n:Disease {name: '内分泌系统疾病'});

MERGE (n:Disease {name: '神经系统疾病'});

MERGE (n:Disease {name: '心血管系统疾病'});

MERGE (n:Disease {name: '呼吸系统疾病'});

MERGE (n:Disease {name: '消化系统疾病'});

MERGE (n:Disease {name: '睡眠呼吸障碍'});

MERGE (n:Disease {name: '不宁腿综合征'});

MERGE (n:Disease {name: '发作性睡病'});

MERGE (n:Disease {name: '异态睡眠'});

MERGE (n:Disease {name: '环境性睡眠障碍'});

MERGE (n:Disease {name: '睡眠不足综合征'});

MERGE (n:Disease {name: '抗抑郁药物'});

MERGE (n:Disease {name: '中枢兴奋性药物'});

MERGE (n:Disease {name: '心血管药物'});

MERGE (n:Disease {name: '麻醉性镇痛药'});

MERGE (n:Disease {name: '平喘药'});

MERGE (n:Disease {name: '酒精'});

MERGE (n:Disease {name: '烟草'});

MERGE (n:Symptom {name: '共病性失眠症'});

MERGE (n:Symptom {name: '单纯性失眠症'});

MERGE (n:Symptom {name: '未达诊断标准的失眠症状'});

// 关系更新
MATCH (from) WHERE from.name = '共病性失眠症'
MATCH (to) WHERE to.name = '失眠症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '单纯性失眠症'
MATCH (to) WHERE to.name = '失眠症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '未达诊断标准的失眠症状'
MATCH (to) WHERE to.name = '失眠症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '偶见'),
    r.severity = coalesce(r.severity, '低');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '抑郁障碍'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '双相情感障碍'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '焦虑障碍'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '内分泌系统疾病'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '神经系统疾病'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '心血管系统疾病'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '呼吸系统疾病'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '消化系统疾病'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '睡眠呼吸障碍'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'false');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '不宁腿综合征'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'false');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '发作性睡病'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'false');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '异态睡眠'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'false');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '环境性睡眠障碍'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'false');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '睡眠不足综合征'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'false');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '抗抑郁药物'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '早期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '中枢兴奋性药物'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '早期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '心血管药物'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '早期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '麻醉性镇痛药'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.65),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '晚期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '平喘药'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '晚期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '酒精'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.5),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '晚期');

MATCH (from) WHERE from.name = '失眠症'
MATCH (to) WHERE to.name = '烟草'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.55),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '晚期');

"""
