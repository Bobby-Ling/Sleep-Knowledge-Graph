[metadata]
file_name = "认知功能损害患者睡眠障碍评估和管理的专家共识.md"
processed_at = "2024-12-12 01:28:39"
total_pairs = 32

[[message_pairs]]
timestamp = "2024-12-12 01:26:34"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/011-推荐意见.md
[文本块]
推荐意见:

1. MCI和痴呆患者要评估EDS，特别是住护理机构的患者（IA级）。

2. 可以通过ESS（IIB级）、ACT（IIIIC级）、MSLT或MWT（IIB级）问卷评估MCI和轻度痴呆患者的EDS的严重程度。

3. 中度至重度痴呆者，主要基于详细的病史和照顾者报告的临床印象（IA级）。

4. 怀疑有中枢性嗜睡的患者，需警惕发作性睡病或特发性过度嗜睡（IA级）。

5. 伴有EDS的患者，必须除外SDB，特别是住护理机构的患者（IIB级）。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '嗜睡障碍'})
SET 
    n.short_name = coalesce(n.short_name, 'EDS');

MERGE (n:Disease {name: '轻度认知障碍'})
SET 
    n.short_name = coalesce(n.short_name, 'MCI');

MERGE (n:Disease {name: '痴呆'})
SET 
    n.short_name = coalesce(n.short_name, 'Dementia');

MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.short_name = coalesce(n.short_name, 'Narcolepsy');

MERGE (n:Disease {name: '特发性过度嗜睡'})
SET 
    n.short_name = coalesce(n.short_name, 'Idiopathic Hypersomnia');

MERGE (n:Disease {name: '阻塞性睡眠呼吸暂停综合征'})
SET 
    n.short_name = coalesce(n.short_name, 'SDB');

MERGE (n:Symptom {name: '过度嗜睡'})
SET 
    n.description = coalesce(n.description, '日间过度嗜睡'),
    n.severity = coalesce(n.severity, '中度至重度'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '病史报告'})
SET 
    n.description = coalesce(n.description, '患者病历信息'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '持续');

// 关系更新
MATCH (from) WHERE from.name = '轻度认知障碍'
MATCH (to) WHERE to.name = '嗜睡障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中度');

MATCH (from) WHERE from.name = '痴呆'
MATCH (to) WHERE to.name = '嗜睡障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '重度');

MATCH (from) WHERE from.name = '轻度认知障碍'
MATCH (to) WHERE to.name = '嗜睡障碍'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '痴呆'
MATCH (to) WHERE to.name = '嗜睡障碍'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '嗜睡障碍'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '特发性过度嗜睡'
MATCH (to) WHERE to.name = '嗜睡障碍'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '嗜睡障碍'
MATCH (to) WHERE to.name = '阻塞性睡眠呼吸暂停综合征'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.8),
    r.timeframe = coalesce(r.timeframe, '长期');

MATCH (from) WHERE from.name = '嗜睡障碍'
MATCH (to) WHERE to.name = '过度嗜睡'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.95),
    r.recommendation_level = coalesce(r.recommendation_level, '强烈推荐');

MATCH (from) WHERE from.name = '病史报告'
MATCH (to) WHERE to.name = '嗜睡障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '一次性评估'),
    r.severity = coalesce(r.severity, '重度');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:26:40"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/021-二管理与治疗.md
[文本块]
管理与治疗  
RBD治疗目标：减少异常发声、行为频率、减轻程度；降低患者与照料者受伤风险。  
药物治疗与安全防范措施：为RBD患者提供安全有效的管理。  
培训患者及其照料者：使用简单方法加强防护，包括  
- 使用有护栏的床  
- 卧室放置地毯  
- 移走锋利器物  
以减少坠床和受伤风险。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '快速眼动睡眠行为障碍'})
SET 
    n.short_name = coalesce(n.short_name, 'RBD');

MERGE (n:Treatment {name: '药物治疗'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '为RBD患者提供安全有效的管理');

MERGE (n:Treatment {name: '安全防范措施'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '使用简单方法加强防护');

// 关系更新
MATCH (from) WHERE from.name = '快速眼动睡眠行为障碍'
MATCH (to) WHERE to.name = '药物治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初始');

MATCH (from) WHERE from.name = '快速眼动睡眠行为障碍'
MATCH (to) WHERE to.name = '安全防范措施'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '持续');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:26:42"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/001-认知功能损害患者睡眠障碍评估和管理的专家共识.md
[文本块]
# 认知功能损害患者睡眠障碍评估和管理的专家共识

**机构**:  
- 中华医学会神经病学分会睡眠障碍学组  
- 中国医师协会神经内科分会睡眠障碍专业委员会  
- 中国睡眠研究会睡眠障碍专业委员会  

**主题**:  
- 认知功能损害患者  
- 睡眠障碍  
- 患病率  
- 睡眠紊乱  
- 认知功能损害加速  
- 病死率增加  
- 照料者经济与心理负担  

**目的**:  
- 系统的临床评估  
- 管理的重要性  
- 临床和社会意义  

**方法**:  
- 回顾2018年4月以前的相关论文、荟萃分析和系统性综述的证据  
- 讨论和制定专家共识  

**参与者**:  
- 中国内相关学科专家  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '认知功能损害患者'})
SET 
    n.description = coalesce(n.description, '认知功能损害患者的相关情况'),
    n.category = coalesce(n.category, '健康状况');

MERGE (n:Disease {name: '睡眠障碍'})
SET 
    n.description = coalesce(n.description, '与睡眠相关的障碍'),
    n.category = coalesce(n.category, '健康状况');

// 关系更新
MATCH (from) WHERE from.name = '认知功能损害患者'
MATCH (to) WHERE to.name = '睡眠障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '睡眠障碍'
MATCH (to) WHERE to.name = '认知功能损害患者'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:26:44"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/012-二管理与治疗.md
[文本块]
管理与治疗

EDS的治疗应在行为治疗的基础上针对病因进行。通过改善生活方式和睡眠卫生教育，可以改善因睡眠质量差而导致的EDS。由SDB和(或)RLS相关的睡眠质量差所导致的EDS，首先应治疗SDB和(或)RLS。需注意由治疗躯体与精神疾病的相关药物不良反应导致的EDS。治疗PDD和DLB相关的睡眠增多时，应特别注意EDS与疾病本身及其相关药物治疗的关系，如多巴胺能药物可能导致日间思睡。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '过度嗜睡综合征'})
SET 
    n.description = coalesce(n.description, 'EDS'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Disease {name: '睡眠呼吸暂停'})
SET 
    n.short_name = coalesce(n.short_name, 'SDB'),
    n.description = coalesce(n.description, '与睡眠相关的呼吸障碍');

MERGE (n:Disease {name: '不宁腿综合症'})
SET 
    n.short_name = coalesce(n.short_name, 'RLS'),
    n.description = coalesce(n.description, '一种引起肢体不适的疾病');

MERGE (n:Disease {name: '抑郁症'})
SET 
    n.short_name = coalesce(n.short_name, 'PDD'),
    n.description = coalesce(n.description, '与情绪相关的精神疾病');

MERGE (n:Disease {name: '路易体痴呆'})
SET 
    n.short_name = coalesce(n.short_name, 'DLB'),
    n.description = coalesce(n.description, '一种影响记忆和认知的疾病');

MERGE (n:Treatment {name: '行为治疗'})
SET 
    n.description = coalesce(n.description, '改善生活方式和睡眠卫生教育');

// 关系更新
MATCH (from) WHERE from.name = '过度嗜睡综合征'
MATCH (to) WHERE to.name = '行为治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期治疗');

MATCH (from) WHERE from.name = '过度嗜睡综合征'
MATCH (to) WHERE to.name = '睡眠呼吸暂停'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '过度嗜睡综合征'
MATCH (to) WHERE to.name = '不宁腿综合症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '轻度');

MATCH (from) WHERE from.name = '抑郁症'
MATCH (to) WHERE to.name = '过度嗜睡综合征'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '路易体痴呆'
MATCH (to) WHERE to.name = '过度嗜睡综合征'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'false');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:26:48"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/014-一诊断与评估.md
[文本块]
诊断与评估

阻塞性睡眠呼吸暂停低通气综合征 (obstructive sleep apnea-hypopnea syndrome, OSAHS) 是最常见的睡眠呼吸障碍 (SDB) 类型。OSAHS 的三个关键症状是：
1. 日间思睡
2. 打鼾
3. 睡眠呼吸暂停

如果持续和频繁出现上述中的两个症状，考虑存在 SDB 高风险。多导睡眠监测 (PSG) 是明确认知功能损害患者是否存在 OSAHS 的金标准。嗜睡量表 (ESS) 仅与睡眠呼吸暂停低通气指数 (apnea hypopnea index, AHI) 有关，但不能表明呼吸暂停的严重程度。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '阻塞性睡眠呼吸暂停低通气综合征'})
SET 
    n.code = coalesce(n.code, 'OSAHS'),
    n.description = coalesce(n.description, '最常见的睡眠呼吸障碍类型'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Symptom {name: '日间思睡'})
SET 
    n.description = coalesce(n.description, '白天感到困倦'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '打鼾'})
SET 
    n.description = coalesce(n.description, '在睡眠中出现的声音'),
    n.severity = coalesce(n.severity, '轻'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Symptom {name: '睡眠呼吸暂停'})
SET 
    n.description = coalesce(n.description, '睡眠时呼吸停止'),
    n.severity = coalesce(n.severity, '重'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Examination {name: '多导睡眠监测'})
SET 
    n.description = coalesce(n.description, '用于评估睡眠质量的检测'),
    n.method = coalesce(n.method, '多导监测'),
    n.requirement = coalesce(n.requirement, '需在医院进行');

MERGE (n:Scale {name: '嗜睡量表'})
SET 
    n.description = coalesce(n.description, '用于评估日间嗜睡程度的量表'),
    n.score_range = coalesce(n.score_range, '0-24'),
    n.interpretation = coalesce(n.interpretation, '分数越高，嗜睡越严重');

// 关系更新
MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '日间思睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '打鼾'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '轻');

MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '睡眠呼吸暂停'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.95),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '重');

MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '多导睡眠监测'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '嗜睡量表'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.85),
    r.recommendation_level = coalesce(r.recommendation_level, '推荐');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:26:56"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/022-推荐意见.md
[文本块]
# 【推荐意见】  

1. 强烈推荐采取措施减少伤害和坠床风险，取走卧室与床旁具有潜在危险的物品（IA级）。  

2. 药物治疗和安全防范措施相结合，能更有效管理RBD（IIB级）。  
   - 低剂量氯硝西泮（0.25~0.5 mg/d）治疗伴认知障碍RBD患者有效，必要时可增量至1.0 mg/d（IA级），但应谨慎使用以避免出现跌倒和加重认知损害（IIB级）。  
   - 褪黑素有一定辅助睡眠作用，有效剂量为2~12 mg/d，睡前30 min应用。  
   - 多奈哌齐、左旋多巴、卡马西平、氯氮平、喹硫平、唑吡坦、佐匹克隆和右佐匹克隆对认知功能损害患者的RBD有一定疗效，但使用过程中必须仔细监测（IIIC级）。  
   - 抗抑郁药、抗精神病药、β受体阻滞剂和曲马多可诱发或加剧RBD，应停止应用或不晚于睡前6小时应用（IIIC级）。  

3. 床旁报警装置可降低患者的伤害性事件（IIB级）。  

4. 避免酒精摄入（IA级）。  

八、不宁腿综合征（RLS）的评估与管理  
- 在变性痴呆和VaD中临床确诊的RLS患病率为6.1%。  
- AD患者铁缺乏和服用多巴胺拮抗剂，也是RLS发病风险与加重的因素。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '快速眼动睡眠行为障碍'})
SET 
    n.short_name = coalesce(n.short_name, 'RBD');

MERGE (n:Disease {name: '不宁腿综合征'})
SET 
    n.short_name = coalesce(n.short_name, 'RLS');

MERGE (n:Disease {name: '认知障碍'})
SET 
    n.short_name = coalesce(n.short_name, 'Cognitive Impairment');

MERGE (n:Treatment {name: '氯硝西泮'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '治疗伴认知障碍RBD患者有效的药物'),
    n.dosage = coalesce(n.dosage, '0.25~0.5 mg/d'),
    n.duration = coalesce(n.duration, '必要时可增量至1.0 mg/d'),
    n.contraindication = coalesce(n.contraindication, '谨慎使用以避免出现跌倒和加重认知损害');

MERGE (n:Treatment {name: '褪黑素'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '有一定辅助睡眠作用的药物'),
    n.dosage = coalesce(n.dosage, '2~12 mg/d'),
    n.duration = coalesce(n.duration, '睡前30分钟应用');

MERGE (n:Treatment {name: '多奈哌齐'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '对认知功能损害患者的RBD有一定疗效的药物'),
    n.dosage = coalesce(n.dosage, '需监测'),
    n.duration = coalesce(n.duration, '需监测'),
    n.contraindication = coalesce(n.contraindication, '监测过程中注意');

MERGE (n:Treatment {name: '抗抑郁药'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可诱发或加剧RBD的药物'),
    n.dosage = coalesce(n.dosage, '应停止应用或不晚于睡前6小时应用'),
    n.duration = coalesce(n.duration, '应停止应用'),
    n.contraindication = coalesce(n.contraindication, '诱发或加剧RBD');

MERGE (n:RiskFactor {name: '铁缺乏'})
SET 
    n.description = coalesce(n.description, '影响RLS发病风险与加重的因素'),
    n.impact_level = coalesce(n.impact_level, '中');

MERGE (n:RiskFactor {name: '多巴胺拮抗剂'})
SET 
    n.description = coalesce(n.description, '影响RLS发病风险与加重的因素'),
    n.impact_level = coalesce(n.impact_level, '中');

// 关系更新
MATCH (from) WHERE from.name = '快速眼动睡眠行为障碍'
MATCH (to) WHERE to.name = '氯硝西泮'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, 'IA级'),
    r.stage = coalesce(r.stage, '治疗');

MATCH (from) WHERE from.name = '快速眼动睡眠行为障碍'
MATCH (to) WHERE to.name = '多奈哌齐'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, 'IIIC级'),
    r.stage = coalesce(r.stage, '治疗');

MATCH (from) WHERE from.name = '快速眼动睡眠行为障碍'
MATCH (to) WHERE to.name = '抗抑郁药'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, 'IIIC级'),
    r.stage = coalesce(r.stage, '治疗');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '认知障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.6),
    r.frequency = coalesce(r.frequency, '6.1%'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '铁缺乏'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '高'),
    r.evidence_level = coalesce(r.evidence_level, 'IIIC级');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '多巴胺拮抗剂'
MERGE (from)-[r:INFLUENCED_BY]->(to)
SET 
    r.impact_level = coalesce(r.impact_level, '高'),
    r.evidence_level = coalesce(r.evidence_level, 'IIIC级');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:26:58"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/015-推荐意见.md
[文本块]
# 推荐意见  

1. 应对 OSAHS 患者或知情者询问是否存在 EDS、打鼾和睡眠呼吸暂停三个临床特征 (IA级)。  

2. 柏林问卷可用于评估 OSAHS 的风险程度 (IIB级)。  

3. 对能配合检查的疑似伴有 OSAHS 的认知功能损害患者，应使用 PSG 确诊，并依照指南和推荐意见进行治疗 (IA级)。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '阻塞性睡眠呼吸暂停低通气综合征'})
SET 
    n.short_name = coalesce(n.short_name, 'OSAHS');

MERGE (n:Symptom {name: '白天嗜睡'})
SET 
    n.description = coalesce(n.description, '白天过度嗜睡的状态'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '打鼾'})
SET 
    n.description = coalesce(n.description, '睡眠时发出的声响'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '睡眠呼吸暂停'})
SET 
    n.description = coalesce(n.description, '睡眠中呼吸暂停的现象'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Examination {name: '多导睡眠图'})
SET 
    n.description = coalesce(n.description, '用于评估睡眠状态的检查'),
    n.method = coalesce(n.method, '应用多项监测技术'),
    n.requirement = coalesce(n.requirement, '配合检查');

// 关系更新
MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '白天嗜睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '打鼾'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '睡眠呼吸暂停'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.95),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '多导睡眠图'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:00"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/003-推荐意见.md
[文本块]
推荐意见  
1. 询问认知功能损害患者的睡眠情况  
   - 进行体检  
   - 选用敏感性、特异性好的睡眠调查问卷和量表  
   - 可以由患者直接填写，也可由照料者完成  
   - 证据级别：IA级  

2. 如认知功能损害患者能配合检查  
   - 推荐进行PSG检测  
   - 目的：确诊睡眠障碍类型1,6  
   - 证据级别：IA级  

管理总体原则  
- 针对认知功能损害患者的睡眠障碍进行管理  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '认知功能损害患者睡眠障碍'})
SET 
    n.description = coalesce(n.description, '认知功能损害患者出现的睡眠问题'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Symptom {name: '睡眠障碍'})
SET 
    n.description = coalesce(n.description, '睡眠的质量和/或时间异常'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '无法配合检查'})
SET 
    n.description = coalesce(n.description, '患者在检查过程中无法配合的情况'),
    n.severity = coalesce(n.severity, '轻度'),
    n.frequency = coalesce(n.frequency, '偶尔');

MERGE (n:Treatment {name: 'PSG检测'})
SET 
    n.type = coalesce(n.type, '检查'),
    n.description = coalesce(n.description, '多导睡眠监测');

// 关系更新
MATCH (from) WHERE from.name = '睡眠障碍'
MATCH (to) WHERE to.name = '认知功能损害患者睡眠障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '无法配合检查'
MATCH (to) WHERE to.name = '认知功能损害患者睡眠障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '轻度');

MATCH (from) WHERE from.name = '认知功能损害患者睡眠障碍'
MATCH (to) WHERE to.name = 'PSG检测'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:00"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/031-十中医药治疗.md
[文本块]
# 十、中医药治疗  

中医着眼于在整体观念指导下,根据具体情况进行辨证施治。目前针对认知功能损害患者睡眠障碍的治疗仅有少数报道,例如养血清脑颗粒可改善PD患者EDS, 络氧疗法可增加伴发失眠的痴呆患者的睡眠时间。目前,该领域尚缺乏大样本、多中心的随机、双盲、安慰剂、对照的临床研究。  

执笔(排名不分先后): 顾平 (河北医科大学第一医院神经内科), 吴惠涓 (海军军医大学长征医院神经内科), 张斌 (南方医科大学南方医院精神科), 王赞 (吉林大学白求恩第一医院神经内科), 薛蓉 (天津医科大学总医院神经内科), 黄颜 (中国医学科学院北京协和医院神经内科), 李宁 (首都医科大学宣武医院神经内科), 尹又 (海军军医大学长征医院神经内科)  

主审专家(排名不分先后): 韩芳 (北京大学人民医院呼吸内科), 刘春风 (苏州大学附属第二医院神经内科), 彭丹涛 (中日友好医院神经内科), 邓丽影 (南昌大学第二附属医院神经内科), 宿长军 (空军军医大学唐都医院神经内科), 王玉平 (首都医科大学宣武医院神经内科), 赵忠新 (海军军医大学长征医院神经内科)  

"""
response = """
// 节点更新
MERGE (n:Treatment {name: '养血清脑颗粒'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可改善PD患者EDS');

MERGE (n:Treatment {name: '络氧疗法'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '可增加伴发失眠的痴呆患者的睡眠时间');

MERGE (n:Disease {name: '认知功能损害'});

MERGE (n:Disease {name: '失眠'});

MERGE (n:Disease {name: '帕金森病'})
SET 
    n.short_name = coalesce(n.short_name, 'PD');

// 关系更新
MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '养血清脑颗粒'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '帕金森病'
MATCH (to) WHERE to.name = '养血清脑颗粒'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '络氧疗法'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '络氧疗法'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '中期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:02"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/002-一共识制定的背景.md
[文本块]
# 一、共识制定的背景

认知功能损害包括轻度认知功能损害 (mild cognitive impairment, MCI) 和痴呆，痴呆的主要类型包括阿尔茨海默病 (Alzheimer disease, AD)、血管性痴呆 (vascular dementia, VaD)、额颞叶变性 (frontotemporal lobe degeneration, FTLD/FTD)、路易体痴呆 (Lewy body dementia, LBD) 和帕金森病痴呆 (Parkinson's disease dementia, PDD) 等。认知功能损害患者睡眠障碍的主要类型包括失眠 (insomnia)、日间过度思睡 (excessive daytime sleepiness, EDS)、睡眠呼吸障碍 (sleep-disordered breathing, SDB)、异态睡眠 [尤其是快速眼球运动睡眠期行为障碍 (REM sleep behavior disorder, RBD)]、不宁腿综合征 (restless legs syndrome, RLS) / 周期性肢体运动 (periodic limb movements, PLMs)、昼夜节律失调性睡眠-觉醒障碍 (circadian rhythm sleep-wake disorders, CRSWDs) 等。

有研究显示，60% 认知功能损害患者存在不同类型睡眠障碍。因此，准确系统评估睡眠障碍类型，并给予适当干预、管理，将有助于延缓、甚至改善患者的认知功能衰退。我们按照循证医学原则，参考近年相关领域文献资料，制定本专家共识，旨在为临床医师提供规范化的诊疗标准，为临床实践制定个体化方案提供理论依据。

二、证据级别和推荐强度分类

根据2016年中华医学会发布的《制订/修订 < 临床诊疗指南 > 的基本方法和程序》，本专家共识使用如下证据级别和推荐强度的分类。

表1 证据级别与定义

表2 推荐强度与定义

三、认知功能损害患者睡眠障碍的临床总体评估与管理意见 

(一) 认知功能损害患者睡眠障碍的临床评估总体原则

对于认知功能损害患者，睡眠障碍诊断主要基于：详细病史、体格检查、睡眠问卷调查和多导睡眠监测 (polysomnography, PSG)；治疗前应明确患者睡眠障碍类型与伴随的疾病。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '轻度认知功能损害'})
SET 
    n.code = coalesce(n.code, 'MCI');

MERGE (n:Disease {name: '阿尔茨海默病'})
SET 
    n.code = coalesce(n.code, 'AD');

MERGE (n:Disease {name: '血管性痴呆'})
SET 
    n.code = coalesce(n.code, 'VaD');

MERGE (n:Disease {name: '额颞叶变性'})
SET 
    n.code = coalesce(n.code, 'FTLD/FTD');

MERGE (n:Disease {name: '路易体痴呆'})
SET 
    n.code = coalesce(n.code, 'LBD');

MERGE (n:Disease {name: '帕金森病痴呆'})
SET 
    n.code = coalesce(n.code, 'PDD');

MERGE (n:Disease {name: '失眠'})
SET 
    n.code = coalesce(n.code, 'insomnia');

MERGE (n:Disease {name: '日间过度思睡'})
SET 
    n.code = coalesce(n.code, 'EDS');

MERGE (n:Disease {name: '睡眠呼吸障碍'})
SET 
    n.code = coalesce(n.code, 'SDB');

MERGE (n:Disease {name: '异态睡眠'})
SET 
    n.code = coalesce(n.code, 'RBD');

MERGE (n:Disease {name: '不宁腿综合征'})
SET 
    n.code = coalesce(n.code, 'RLS');

MERGE (n:Disease {name: '周期性肢体运动'})
SET 
    n.code = coalesce(n.code, 'PLMs');

MERGE (n:Disease {name: '昼夜节律失调性睡眠-觉醒障碍'})
SET 
    n.code = coalesce(n.code, 'CRSWDs');

// 关系更新
MATCH (from) WHERE from.name = '阿尔茨海默病'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, 'high'),
    r.stage = coalesce(r.stage, 'management');

MATCH (from) WHERE from.name = '血管性痴呆'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, 'high'),
    r.stage = coalesce(r.stage, 'management');

MATCH (from) WHERE from.name = '额颞叶变性'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, 'medium'),
    r.stage = coalesce(r.stage, 'management');

MATCH (from) WHERE from.name = '路易体痴呆'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.5),
    r.priority = coalesce(r.priority, 'medium'),
    r.stage = coalesce(r.stage, 'management');

MATCH (from) WHERE from.name = '帕金森病痴呆'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.4),
    r.priority = coalesce(r.priority, 'low'),
    r.stage = coalesce(r.stage, 'management');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, 'frequent'),
    r.severity = coalesce(r.severity, 'mild');

MATCH (from) WHERE from.name = '日间过度思睡'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, 'frequent'),
    r.severity = coalesce(r.severity, 'moderate');

MATCH (from) WHERE from.name = '睡眠呼吸障碍'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, 'frequent'),
    r.severity = coalesce(r.severity, 'severe');

MATCH (from) WHERE from.name = '异态睡眠'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, 'occasional'),
    r.severity = coalesce(r.severity, 'moderate');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, 'occasional'),
    r.severity = coalesce(r.severity, 'moderate');

MATCH (from) WHERE from.name = '周期性肢体运动'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, 'rare'),
    r.severity = coalesce(r.severity, 'mild');

MATCH (from) WHERE from.name = '昼夜节律失调性睡眠-觉醒障碍'
MATCH (to) WHERE to.name = '轻度认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.65),
    r.frequency = coalesce(r.frequency, 'rare'),
    r.severity = coalesce(r.severity, 'moderate');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:09"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/013-推荐意见.md
[文本块]
# 【推荐意见】  

1. 治疗EDS，应给予生活方式和睡眠卫生指导 (IA级)，多种方法相结合，治疗包括：
   - 日间光照
   - 减少夜间光照
   - 参加体育锻炼和社会活动
   - 规律觉醒和睡眠时间 (IIB级)。

2. 低剂量莫达非尼 (100∼200 mg/d) 可能是有益的，但超出适应证范围，且对老年人和共病心血管疾病患者须谨慎使用 (IIIC级)。

3. γ-羟丁酸钠 (∼9 mg/晚) 可改善PD患者夜间睡眠、日间思睡和疲劳症状 (IIIC级)。

4. 司来吉兰 (5∼10 mg/d) 具有兴奋作用，可改善日间思睡，但缺乏充足证据 (IIIC级)。

5. 中枢性睡眠增多如发作性睡病和原发性睡眠增多患者应考虑给予相应的药物治疗 (IIB级)。

6. 合并中枢性睡眠增多如发作性睡病和原发性睡眠增多者应给予相应药物治疗 (IIB级)。

## 睡眠呼吸障碍 (SDB) 的评估与管理  

认知功能损害患者最常见睡眠障碍类型是SDB，发生率约60%，其中：
- 33%∼53% AD
- 58.7% MCI
- 74.4% VaD
- 68% FTD
- 76% DLB/PDD

患者存在不同程度的SDB。SDB可损害认知功能损害患者的执行能力，表现为信息处理速度减慢，短时记忆广度减少，警觉性下降。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '日间嗜睡'})
SET 
    n.code = coalesce(n.code, 'EDS');

MERGE (n:Disease {name: '睡眠呼吸障碍'})
SET 
    n.short_name = coalesce(n.short_name, 'SDB');

MERGE (n:Disease {name: '阿尔茨海默病'})
SET 
    n.short_name = coalesce(n.short_name, 'AD');

MERGE (n:Disease {name: '轻度认知障碍'})
SET 
    n.short_name = coalesce(n.short_name, 'MCI');

MERGE (n:Disease {name: '血管性痴呆'})
SET 
    n.short_name = coalesce(n.short_name, 'VaD');

MERGE (n:Disease {name: '额颞叶痴呆'})
SET 
    n.short_name = coalesce(n.short_name, 'FTD');

MERGE (n:Disease {name: '路易体痴呆'})
SET 
    n.short_name = coalesce(n.short_name, 'DLB/PDD');

MERGE (n:Treatment {name: '生活方式和睡眠卫生指导'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '包括日间光照、减少夜间光照、参加体育锻炼和社会活动、规律觉醒和睡眠时间'),
    n.contraindication = coalesce(n.contraindication, '无');

MERGE (n:Treatment {name: '莫达非尼'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可能有益的低剂量药物'),
    n.dosage = coalesce(n.dosage, '100∼200 mg/d'),
    n.contraindication = coalesce(n.contraindication, '对老年人和共病心血管疾病患者须谨慎使用');

MERGE (n:Treatment {name: 'γ-羟丁酸钠'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可改善PD患者夜间睡眠、日间思睡和疲劳症状'),
    n.dosage = coalesce(n.dosage, '∼9 mg/晚');

MERGE (n:Treatment {name: '司来吉兰'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '具有兴奋作用，可改善日间思睡，但缺乏充足证据'),
    n.dosage = coalesce(n.dosage, '5∼10 mg/d');

// 关系更新
MATCH (from) WHERE from.name = '睡眠呼吸障碍'
MATCH (to) WHERE to.name = '日间嗜睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.6),
    r.frequency = coalesce(r.frequency, '发生率约60%'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '阿尔茨海默病'
MATCH (to) WHERE to.name = '睡眠呼吸障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.33),
    r.frequency = coalesce(r.frequency, '33%∼53%'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '轻度认知障碍'
MATCH (to) WHERE to.name = '睡眠呼吸障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.587),
    r.frequency = coalesce(r.frequency, '58.7%'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '血管性痴呆'
MATCH (to) WHERE to.name = '睡眠呼吸障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.744),
    r.frequency = coalesce(r.frequency, '74.4%'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '额颞叶痴呆'
MATCH (to) WHERE to.name = '睡眠呼吸障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.68),
    r.frequency = coalesce(r.frequency, '68%'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '路易体痴呆'
MATCH (to) WHERE to.name = '睡眠呼吸障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.76),
    r.frequency = coalesce(r.frequency, '76%'),
    r.severity = coalesce(r.severity, '高');

MATCH (from) WHERE from.name = '日间嗜睡'
MATCH (to) WHERE to.name = '生活方式和睡眠卫生指导'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '日间嗜睡'
MATCH (to) WHERE to.name = '莫达非尼'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.5),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '日间嗜睡'
MATCH (to) WHERE to.name = 'γ-羟丁酸钠'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '日间嗜睡'
MATCH (to) WHERE to.name = '司来吉兰'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.4),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '后期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:09"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/032-十中医药治疗.md
[文本块]
专家委员会成员（按姓氏拼音排列）：
- 邓丽影：南昌大学第二附属医院神经内科
- 顾平：河北医科大学第一医院神经内科
- 韩芳：北京大学人民医院呼吸内科
- 黄颜：中国医学科学院北京协和医院神经内科
- 黄志力：复旦大学医学神经生物学国家重点实验室
- 贾建军：解放军总医院神经内科
- 蒋晓江：陆军军医大学大坪医院神经内科
- 季建林：复旦大学附属中山医院心理医学科
- 李宁：首都医科大学宣武医院神经内科
- 李焰生：上海交通大学附属仁济医院神经内科
- 李雁鹏：海军军医大学长征医院神经内科
- 李舜伟：中国医学科学院北京协和医院神经内科
- 刘春风：苏州大学附属第二医院神经内科
- 罗本燕：浙江大学医学院附属第一医院神经内科
- 龙小艳：中南大学湘雅医院神经内科
- 乐卫东：大连医科大学附属第一医院神经内科
- 马建芳：上海交通大学附属瑞金医院神经内科
- 潘集阳：暨南大学附属第一医院精神心理科
- 彭丹涛：中日友好医院神经内科
- 尚伟：山东大学第二医院神经内科
- 沈扬：北京大学第三医院神经内科
- 宿长军：空军军医大学唐都医院神经内科
- 唐向东：四川大学华西医院睡眠医学中心
- 唐吉友：山东大学千佛山医院神经内科
- 王涛：华中科技大学同济医学院附属协和医院神经内科
- 王赞：吉林大学白求恩第一医院神经内科
- 王玉平：首都医科大学宣武医院神经内科
- 吴惠涓：海军军医大学长征医院神经内科
- 吴中亮：空军军医大学西京医院神经内科
- 徐江涛：解放军乌鲁木齐总医院神经内科
- 肖世富：上海交通大学附属精神卫生中心精神科
- 薛蓉：天津医科大学总医院神经内科
- 尹又：海军军医大学长征医院神经内科
- 于逢春：北京大学第三医院海淀院区神经内科
- 于欢：复旦大学附属华山医院神经内科
- 詹淑琴：首都医科大学宣武医院神经内科
- 张斌：南方医科大学南方医院精神科
- 张鹏：解放军第九十一中心医院神经内科
- 张红菊：郑州大学人民医院神经内科
- 张熙：解放军总医院神经内科
- 赵忠新：海军军医大学长征医院神经内科

"""
response = """
// 节点更新
"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:10"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/016-二管理与治疗.md
[文本块]
管理与治疗

应加强对轻中度痴呆患者的OSAHS筛查，对伴OSAHS的痴呆患者进行持续正压通气（continuous positive airway pressure, CPAP）治疗可以改善其认知功能。此外，单水平CPAP治疗可改善共患OSAHS的痴呆患者的睡眠质量、日间思睡和情绪障碍，同时治疗SDB可能会减少躁动、减轻照料者的负担、延长患者家居生活的时间。痴呆患者使用CPAP呼吸机时，必须指导照料者配合。

多奈哌齐改善AD患者认知功能的同时，也能够促进睡眠结构恢复正常，改善入睡困难和REM期睡眠，提高睡眠质量，从而改善日间功能。多奈哌齐还能改善痴呆患者OSAHS的严重程度、认知功能和血氧饱和度。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '轻中度痴呆'})
SET 
    n.code = coalesce(n.code, 'Mild Cognitive Impairment'),
    n.description = coalesce(n.description, '轻中度痴呆患者的疾病'),
    n.category = coalesce(n.category, '神经系统疾病'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Disease {name: '阻塞性睡眠呼吸暂停综合征'})
SET 
    n.short_name = coalesce(n.short_name, 'OSAHS'),
    n.description = coalesce(n.description, '一种睡眠障碍'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '严重');

MERGE (n:Treatment {name: '持续正压通气'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '使用CPAP治疗轻中度痴呆患者的OSAHS'),
    n.dosage = coalesce(n.dosage, '根据个体情况调节'),
    n.duration = coalesce(n.duration, '长期'),
    n.contraindication = coalesce(n.contraindication, '有严重心脏病患者需慎用');

MERGE (n:Symptom {name: '睡眠质量差'})
SET 
    n.description = coalesce(n.description, '患者入睡困难'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '日间思睡'})
SET 
    n.description = coalesce(n.description, '白天嗜睡'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '情绪障碍'})
SET 
    n.description = coalesce(n.description, '情绪不稳定'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '偶尔');

// 关系更新
MATCH (from) WHERE from.name = '轻中度痴呆'
MATCH (to) WHERE to.name = '阻塞性睡眠呼吸暂停综合征'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '轻中度痴呆'
MATCH (to) WHERE to.name = '持续正压通气'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '治疗');

MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停综合征'
MATCH (to) WHERE to.name = '睡眠质量差'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '重度');

MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停综合征'
MATCH (to) WHERE to.name = '日间思睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '阻塞性睡眠呼吸暂停综合征'
MATCH (to) WHERE to.name = '情绪障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '持续正压通气'
MATCH (to) WHERE to.name = '阻塞性睡眠呼吸暂停综合征'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '必需'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:13"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/024-推荐意见.md
[文本块]
# 推荐意见  

1. 睡眠困难的认知功能损害伴失眠患者，询问睡前腿部不舒服的感觉（IA级）。  

2. 认知功能损害患者RLS诊断必须符合国际RLS 4项核心标准（IA级）。  

3. 中重度痴呆患者无法回答用于临床确诊RLS评估的问题，可通过观察行为来诊断临床很可能的RLS（IA级）。  

4. 国际RLS评定量表可用于评测疾病症状、对睡眠和生活质量的影响（IIB级）。  

5. 支持临床诊断的标准有：RLS家族史、多巴胺能药物和铁剂能改善症状（IIA级）。  

6. 临床确诊或临床可能的RLS患者，应检查血清铁蛋白（IA级）。  

7. 检查有无共患疾病、使用的药物、酒精滥用和咖啡因摄入等，并进行干预或治疗（IA级）。  

8. 如同时存在PLMs，则支持RLS诊断（IB级）。  

9. ACT（特别是踝部ACT）检测可获取与睡眠困难和睡眠紊乱相关的RLS和PLMs信息，但不能完整地评估PLMs（IIIC级）。  

10. PSG监测可确诊不能使用问卷和量表的疑似RLS患者（IIIB级）。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠'})
SET 
    n.code = coalesce(n.code, 'G47.00'),
    n.description = coalesce(n.description, '一种睡眠障碍，表现为入睡困难、维持睡眠困难或早醒'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中度');

MERGE (n:Disease {name: '下肢不宁综合征'})
SET 
    n.short_name = coalesce(n.short_name, 'RLS'),
    n.code = coalesce(n.code, 'G25.81'),
    n.description = coalesce(n.description, '一种不自主的腿部移动症状，通常在夜间加重'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中度');

MERGE (n:Disease {name: '周围神经病'})
SET 
    n.code = coalesce(n.code, 'G62.9'),
    n.description = coalesce(n.description, '神经系统的疾病，通常影响肢体的感觉和运动功能'),
    n.category = coalesce(n.category, '神经系统疾病'),
    n.severity = coalesce(n.severity, '中度');

MERGE (n:Symptom {name: '睡眠困难'})
SET 
    n.description = coalesce(n.description, '入睡或维持睡眠的困难'),
    n.severity = coalesce(n.severity, '中度'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '腿部不适'})
SET 
    n.description = coalesce(n.description, '感觉到腿部不舒服，通常在晚上加重'),
    n.severity = coalesce(n.severity, '中度'),
    n.frequency = coalesce(n.frequency, '频繁');

MERGE (n:Symptom {name: '白天嗜睡'})
SET 
    n.description = coalesce(n.description, '白天异常的困倦与嗜睡'),
    n.severity = coalesce(n.severity, '轻度'),
    n.frequency = coalesce(n.frequency, '偶尔');

MERGE (n:Examination {name: '血清铁蛋白检查'})
SET 
    n.description = coalesce(n.description, '用于检测血清中铁的储存水平'),
    n.method = coalesce(n.method, '血液检查'),
    n.requirement = coalesce(n.requirement, '空腹');

MERGE (n:Examination {name: '多导睡眠监测（PSG）'})
SET 
    n.description = coalesce(n.description, '用于评估睡眠模式和其他生理参数'),
    n.method = coalesce(n.method, '多导睡眠监测'),
    n.requirement = coalesce(n.requirement, '入睡前保持安静');

// 关系更新
MATCH (from) WHERE from.name = '睡眠困难'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中度');

MATCH (from) WHERE from.name = '腿部不适'
MATCH (to) WHERE to.name = '下肢不宁综合征'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.95),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中度');

MATCH (from) WHERE from.name = '下肢不宁综合征'
MATCH (to) WHERE to.name = '血清铁蛋白检查'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '下肢不宁综合征'
MATCH (to) WHERE to.name = '多导睡眠监测（PSG）'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '周围神经病'
MATCH (to) WHERE to.name = '下肢不宁综合征'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.7),
    r.timeframe = coalesce(r.timeframe, '长期');

MATCH (from) WHERE from.name = '下肢不宁综合征'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '初始');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:15"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/004-推荐意见.md
[文本块]
# 推荐意见  

1. 认知功能损害患者睡眠障碍总体治疗原则与非痴呆的同年龄段人群相似。  

2. 积极处理导致认知功能损害患者出现睡眠障碍的病因。  

3. 推荐非药物治疗作为起始治疗手段，且必须考虑生活方式因素的影响。  

4. 应根据睡眠障碍的具体类型选择针对性治疗方法。  

5. 严格管理可引起或加重失眠的药物，如利尿剂、β受体阻断剂、支气管扩张剂、皮质类固醇、H2受体阻滞剂等。应尽量避免使用含咖啡因类物质、酒精。  

6. 必须考虑生活方式的影响，如评估疼痛、床的舒适性；鼓励患者进行规律的锻炼；遵循规律的睡眠-觉醒节律和睡眠卫生，尽量避免日间小睡，如有午睡习惯，建议将时间限制在60分钟内；早晨、傍晚规律地接受光照；固定进餐时间，睡前可进食少量食物，避免夜间摄入过多液体；注意环境因素，如夜间噪音和环境灯光。  

7. 认知功能损害患者可能无法清楚表达其夜间觉醒情况，应对照料者进行相关知识培训。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '认知功能损害患者睡眠障碍'});

MERGE (n:Treatment {name: '非药物治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '作为起始治疗手段，且必须考虑生活方式因素的影响');

MERGE (n:Disease {name: '失眠'});

MERGE (n:Disease {name: '非痴呆的同年龄段人群'});

// 关系更新
MATCH (from) WHERE from.name = '认知功能损害患者睡眠障碍'
MATCH (to) WHERE to.name = '非药物治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初始');

MATCH (from) WHERE from.name = '认知功能损害患者睡眠障碍'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '认知功能损害患者睡眠障碍'
MATCH (to) WHERE to.name = '非痴呆的同年龄段人群'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '中'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '认知功能损害患者睡眠障碍'
MATCH (to) WHERE to.name = '非药物治疗'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:21"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/023-一诊断与评估.md
[文本块]
# 诊断与评估  

根据国际RLS标准，认知功能损害患者临床诊断RLS必须符合4个核心标准：  
(1) 最近是否因不舒服感觉而需要活动腿和(或)胳膊？  
(2) 起床和行走后是否改善或缓解这种感觉？  
(3) 坐着或者躺着休息时，是否感觉特别不舒服？  
(4) 傍晚或晚上感觉是否更严重？

大多数痴呆患者由于无法理解和准确回答RLS问诊，常需要通过客观检查确诊RLS，包括观察腿部运动及行为，并根据晚上和深夜对腿部不适的揉捏动作，判断是否存在RLS。RLS可能与痴呆患者的夜间躁动行为有关：  
(1) 下肢有痛苦和不适的迹象，如摩擦或揉捏腿，伴随呻吟；  
(2) 下肢存在过多的活动，如步行、坐立不安、反复踢腿、不停翻身、腿部拍打床垫、坐起晃动双腿、踏车样动作、重复踏步、揉搓双脚、不能保持坐姿等；  
(3) 非活动期间和活动减少时，腿部不适的迹象更严重；  
(4) 第(1)、(2)条标准只存在于晚上、夜间或较日间更强烈。 

排除标准：以下表现不能单纯由其他疾病与现象解释，如肌痛、静脉淤血、腿部水肿、关节炎、腿肌肉痉挛、位置不适和习惯性顿足等。  
RLS鉴别诊断包括周围神经病、间歇性跛行、抗精神病药物引起的静坐不能、静脉曲张、关节炎、腿痉挛、姿势不适、腿局部病变等。

国际RLS评定量表是主观评测RLS的工具，可评估疾病的症状、疾病对睡眠和生活质量的影响。  
PSG监测发现55%痴呆患者的PLMs指数>15，其中35%为服用SSRIs期间出现RLS，SSRIs是RLS最常见的危险因素。  
另有研究发现RLS与肾功能不全、缺铁、血清铁蛋白下降有关。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '不宁腿综合征'})
SET 
    n.abbreviation = coalesce(n.abbreviation, 'RLS');

MERGE (n:Symptom {name: '腿部不适'})
SET 
    n.description = coalesce(n.description, '腿部不适需要活动的感觉'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '夜间更明显');

MERGE (n:Symptom {name: '腿部过度活动'})
SET 
    n.description = coalesce(n.description, '腿部运动活动过多的迹象'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '夜间');

MERGE (n:Symptom {name: '非活动期间腿部不适'})
SET 
    n.description = coalesce(n.description, '非活动期间和活动减少时腿部不适的迹象'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '夜间');

MERGE (n:Symptom {name: '夜间躁动'})
SET 
    n.description = coalesce(n.description, '晚上夜间躁动行为'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '夜间');

MERGE (n:Complication {name: '药物相关综合症'})
SET 
    n.description = coalesce(n.description, '抗精神病药物引起的静坐不能'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Complication {name: '周围神经病'})
SET 
    n.description = coalesce(n.description, '周围神经病变导致的症状'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Complication {name: '缺铁'})
SET 
    n.description = coalesce(n.description, '缺铁导致的症状'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Complication {name: '腿部痉挛'})
SET 
    n.description = coalesce(n.description, '腿部肌肉痉挛症状'),
    n.severity = coalesce(n.severity, '中等');

// 关系更新
MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '腿部不适'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '腿部过度活动'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '非活动期间腿部不适'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '夜间躁动'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '药物相关综合症'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.6),
    r.timeframe = coalesce(r.timeframe, '长期');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '周围神经病'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.5),
    r.timeframe = coalesce(r.timeframe, '长期');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '缺铁'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.7),
    r.timeframe = coalesce(r.timeframe, '长期');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '腿部痉挛'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.4),
    r.timeframe = coalesce(r.timeframe, '长期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:21"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/017-推荐意见.md
[文本块]
# 推荐意见  

1. 应对各类型 SDB 患者进行治疗 (IA 级)。  

2. CPAP 是大多数 SDB 患者的一线治疗方法 (IA 级)。  

3. 对于能够依从的有认知功能障碍的 OSAHS 患者，无论年龄大小和认知功能障碍的程度，提供 CPAP 治疗是合理的 (IIIB 级)。  

4. 积极治疗 VaD 伴随的 SDB (IA 级)。  

5. 对不耐受 CPAP 的患者，可试用双水平或自动调节 CPAP 呼吸机治疗 (IIB 级)。  

6. 多奈哌齐可改善认知功能障碍患者 OSAHS 的严重程度、认知功能和睡眠质量 (IIB 级)。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '睡眠呼吸暂停低通气综合征'})
SET 
    n.code = coalesce(n.code, 'OSAHS'),
    n.description = coalesce(n.description, '一种影响睡眠质量的疾病，伴随着呼吸暂停或低通气。'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '严重');

MERGE (n:Disease {name: '血管性痴呆'})
SET 
    n.code = coalesce(n.code, 'VaD'),
    n.description = coalesce(n.description, '一种由于脑血管问题导致的认知功能障碍。'),
    n.category = coalesce(n.category, '认知障碍'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Treatment {name: '持续气道正压通气'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '一种治疗睡眠呼吸暂停的常见方法，使用呼吸机提供持续的气道压力。');

MERGE (n:Treatment {name: '双水平或自动调节CPAP'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '一种对不耐受传统CPAP患者的替代治疗方法。');

MERGE (n:Treatment {name: '多奈哌齐'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可改善认知功能及其对睡眠呼吸暂停的影响。');

// 关系更新
MATCH (from) WHERE from.name = '睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '持续气道正压通气'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.95),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '一线治疗');

MATCH (from) WHERE from.name = '睡眠呼吸暂停低通气综合征'
MATCH (to) WHERE to.name = '双水平或自动调节CPAP'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '替代治疗');

MATCH (from) WHERE from.name = '多奈哌齐'
MATCH (to) WHERE to.name = '睡眠呼吸暂停低通气综合征'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '辅助治疗');

MATCH (from) WHERE from.name = '血管性痴呆'
MATCH (to) WHERE to.name = '睡眠呼吸暂停低通气综合征'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '积极治疗');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:28"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/025-二管理与治疗.md
[文本块]
# (二)管理与治疗  

2014年国际RLS研究协会发表了关于长期治疗RLS的建议:  
- 非药物治疗可作为轻度RLS患者治疗方法，也可作为严重RLS患者的辅助治疗。  
- 干预措施包括:  
  - 避免使用酒精、烟草、咖啡因以及导致病情恶化的药物(如抗组胺药、抗抑郁药、止吐药)  
  - 改变生活方式、睡眠卫生和适度规律的锻炼，有助于RLS患者睡眠改善。  

对于认知功能损害患者:  
- 非麦角类多巴胺受体激动剂是一线促智治疗药物，但睡前服用$2\\,\\mathrm{~h~}$可能诱发痴呆患者的精神症状。  
- 有效的一线药物包括:  
  - 普拉克索(0.25~$0.\\,75\\,\\mathrm{\\mg}$)  
  - 罗匹尼罗($\\left(1.\\phantom{}^{\\phantom{\\dagger}}5\\phantom{}^{\\phantom{\\dagger}}\\!\\!+\\!\\!4.\\phantom{}6\\phantom{}\\!\\!\\!\\!0\\right)$)  
  - 罗替戈汀透皮贴剂($\\left(1\\sim3\\mathrm{~mg}/24\\mathrm{~h}\\right)$)  

关于罗替戈汀透皮贴剂:  
- 在6个月治疗期内被认为是有效的;  
- 在治疗1年后耐受性良好，仍对中重度RLS患者有效;  
- 稳定剂量内 $(\\,2\\sim3\\,\\mathrm{~mg}/24\\,\\mathrm{~h~})$ 对RLS患者的有效期可长达5年。  

药物推荐与禁忌:  
- 除非是难治性RLS患者，否则不推荐使用培高利特和卡麦角林。  
- 短期使用左旋多巴/苄丝肼($\\left(100/25\\,\\sim200/50\\,\\mathrm{~mg}\\right)$)或缓释左旋多巴/多巴丝肼($\\left[100/25\\,\\mathrm{~mg}\\right)$是有效的，但减少使用是因为左旋多巴有使原有症状恶化或症状反跳的可能。  

对于二线治疗药物:  
- 抗惊厥药(如加巴喷丁、普瑞巴林)是在使用多巴胺受体激动剂无满意疗效时而采用的，能改善RLS症状与下肢持续疼痛，尤其对LBD患者不会恶化精神症状。  
- 阿片类药物(如曲马多、氢可酮、羟考酮、美沙酮)对重度RLS有效，但应谨慎使用，特别是伴SDB老年认知功能损害患者。  

此外，  
- 睡前服用$0.\\,5\\sim1~\\mathrm{mg}$氯硝西泮可改善RLS患者感觉异常，减少睡眠-觉醒，降低NREM睡眠脑电图的不稳定性，但不能治疗PLMs。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '不宁腿综合征'})
SET 
    n.short_name = coalesce(n.short_name, 'RLS');

MERGE (n:Treatment {name: '普拉克索'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于治疗轻度到中重度RLS的药物'),
    n.dosage = coalesce(n.dosage, '0.25~0.75 mg'),
    n.duration = coalesce(n.duration, '短期'),
    n.contraindication = coalesce(n.contraindication, '无');

MERGE (n:Treatment {name: '罗匹尼罗'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于治疗RLS的药物'),
    n.dosage = coalesce(n.dosage, '1.5~4.6 mg'),
    n.duration = coalesce(n.duration, '短期'),
    n.contraindication = coalesce(n.contraindication, '无');

MERGE (n:Treatment {name: '罗替戈汀透皮贴剂'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '有效的RLS治疗药物'),
    n.dosage = coalesce(n.dosage, '1~3 mg/24h'),
    n.duration = coalesce(n.duration, '长达5年'),
    n.contraindication = coalesce(n.contraindication, '无');

// 关系更新
MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '普拉克索'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '一线');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '罗匹尼罗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.95),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '一线');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '罗替戈汀透皮贴剂'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '一线');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:29"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/026-推荐意见.md
[文本块]
# 推荐意见  

1. 非药物治疗用于轻度 RLS 患者治疗, 或作为程度较重 RLS 患者的辅助治疗 (IIB 级)。  

2. 戒除烟酒、咖啡因, 避免加重 RLS 的药物 (IIB 级); 睡眠卫生保健和适度规律锻炼可能有助于缓解 RLS 症状 (IIIC 级)。  

3. 针对缺铁相关 RLS (血清铁蛋白 ${\\leqslant} 75~\\mathrm{mg/L}$ 或转铁蛋白饱和度 $<20\\%$), 必须积极治疗缺铁 (IA 级)。  

4. 非麦角类多巴胺受体激动剂 (普拉克索、罗替高汀、罗匹尼罗) 是认知功能损害患者伴有中重度 RLS 的一线治疗药物, 透皮贴或服用缓释剂型疗效均较好 (IA 级)。  

5. 不推荐使用培高利特和卡麦角林 (IA 级)。  

6. 左旋多巴/苄丝肼或左旋多巴/苄丝肼控释片在睡前服用 (IIB 级), 但部分患者在使用左旋多巴/苄丝肼后会引起症状加重 (IA 级)。  

7. 加巴喷丁和普瑞巴林是 RLS 二线治疗用药, 伴失眠、疼痛、冲动控制障碍和焦虑症情况下可作为初始治疗方案 (IA 级)。  

8. 重度 RLS 患者可应用阿片类药物、丙戊酸盐和卡马西平 (IIIC 级)。  

9. 氯硝西泮可改善 RLS 的感觉异常, 降低睡眠中觉醒次数 (IIB 级)。  

10. 抗抑郁药和抗精神病药会恶化 RLS/PLMs, 必要时应评估睡眠相关的运动障碍, 并在睡前 $^\\mathrm{~6~h~}$ 外服用 (IIB 级)。  

九、昼夜节律失调性睡眠-觉醒障碍 (CRSWDs) 的评估与管理  

$44\\%$ AD 患者存在 CRSWDs, $40\\%$ AD 患者伴有日落综合征, 上述症状严重影响患者及照料者生活质量, 增加其他脏器损伤风险, 延长住院时间。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '不宁腿综合征'})
SET 
    n.code = coalesce(n.code, 'RLS'),
    n.description = coalesce(n.description, '一种导致患者感到在静止时下肢有不适，并且有不可抗拒的动作欲望的疾病'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '轻度到重度');

MERGE (n:Symptom {name: 'RLS症状'})
SET 
    n.description = coalesce(n.description, '在静止状态下感到不适'),
    n.severity = coalesce(n.severity, '轻度到重度'),
    n.frequency = coalesce(n.frequency, '不定期');

MERGE (n:Treatment {name: '非药物治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '用于轻度RLS患者的治疗，或作为重度RLS患者的辅助治疗');

MERGE (n:Treatment {name: '缺铁治疗'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '积极治疗缺铁以改善缺铁相关RLS');

MERGE (n:Treatment {name: '普拉克索'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '一线治疗药物，适用于认知功能损害患者伴有中重度RLS'),
    n.dosage = coalesce(n.dosage, '透皮贴或缓释剂型');

MERGE (n:Treatment {name: '加巴喷丁'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, 'RLS二线治疗用药');

MERGE (n:Treatment {name: '阿片类药物'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '重度RLS患者可用');

MERGE (n:Symptom {name: '昼夜节律失调性睡眠-觉醒障碍'})
SET 
    n.description = coalesce(n.description, '影响患者及照料者生活质量的睡眠障碍'),
    n.severity = coalesce(n.severity, '中度'),
    n.frequency = coalesce(n.frequency, '持续');

MERGE (n:Disease {name: '阿尔茨海默病'})
SET 
    n.code = coalesce(n.code, 'AD'),
    n.description = coalesce(n.description, '一种导致记忆力和其他思维能力下降的疾病'),
    n.category = coalesce(n.category, '神经系统疾病'),
    n.severity = coalesce(n.severity, '严重');

// 关系更新
MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = 'RLS症状'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '不定期'),
    r.severity = coalesce(r.severity, '轻度到重度');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '非药物治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '初始治疗');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '缺铁治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '急需治疗');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '普拉克索'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '一线治疗');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '加巴喷丁'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '二线治疗');

MATCH (from) WHERE from.name = '不宁腿综合征'
MATCH (to) WHERE to.name = '阿片类药物'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.6),
    r.priority = coalesce(r.priority, '低'),
    r.stage = coalesce(r.stage, '特殊情况');

MATCH (from) WHERE from.name = '阿尔茨海默病'
MATCH (to) WHERE to.name = '昼夜节律失调性睡眠-觉醒障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '持续'),
    r.severity = coalesce(r.severity, '中度');

MATCH (from) WHERE from.name = '阿尔茨海默病'
MATCH (to) WHERE to.name = '昼夜节律失调性睡眠-觉醒障碍'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.44),
    r.timeframe = coalesce(r.timeframe, '长期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:34"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/018-七RBD-的评估与管理.md
[文本块]
# 七、RBD 的评估与管理  

认知功能损害患者 RBD 发生率约 22.6%。RBD 在帕金森病（PD）、嗜睡性脑病（DLB）发生率相对较高，而在阿尔茨海默病（AD）、额颞叶痴呆（FTD）、进行性核上性麻痹和皮质基底节变性中发生率相对较低。RBD 患者 5 年发展成神经系统退行性病的风险为 17.7% 至 33.1%，10 年为 40.6% 至 75.7%。RBD 随访研究提示出现 PD 的比例为 33.8% 至 53.8%，DLB 的比例为 26.9% 至 44.6%，AD 的比例为 15.4%，轻度认知功能障碍的比例为 18.5%。

"""
response = """
// 节点更新
MERGE (n:Disease {name: 'REM行为障碍'})
SET 
    n.code = coalesce(n.code, 'RBD');

MERGE (n:Disease {name: '帕金森病'})
SET 
    n.code = coalesce(n.code, 'PD');

MERGE (n:Disease {name: '嗜睡性脑病'})
SET 
    n.code = coalesce(n.code, 'DLB');

MERGE (n:Disease {name: '阿尔茨海默病'})
SET 
    n.code = coalesce(n.code, 'AD');

MERGE (n:Disease {name: '额颞叶痴呆'})
SET 
    n.code = coalesce(n.code, 'FTD');

MERGE (n:Disease {name: '进行性核上性麻痹'})
SET 
    n.code = coalesce(n.code, 'PSP');

MERGE (n:Disease {name: '皮质基底节变性'})
SET 
    n.code = coalesce(n.code, 'CBD');

// 关系更新
MATCH (from) WHERE from.name = 'REM行为障碍'
MATCH (to) WHERE to.name = '帕金森病'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.177),
    r.timeframe = coalesce(r.timeframe, '5年');

MATCH (from) WHERE from.name = 'REM行为障碍'
MATCH (to) WHERE to.name = '帕金森病'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.406),
    r.timeframe = coalesce(r.timeframe, '10年');

MATCH (from) WHERE from.name = 'REM行为障碍'
MATCH (to) WHERE to.name = '帕金森病'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.338),
    r.timeframe = coalesce(r.timeframe, '随访');

MATCH (from) WHERE from.name = 'REM行为障碍'
MATCH (to) WHERE to.name = '嗜睡性脑病'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.269),
    r.timeframe = coalesce(r.timeframe, '随访');

MATCH (from) WHERE from.name = 'REM行为障碍'
MATCH (to) WHERE to.name = '阿尔茨海默病'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.154),
    r.timeframe = coalesce(r.timeframe, '随访');

MATCH (from) WHERE from.name = 'REM行为障碍'
MATCH (to) WHERE to.name = '额颞叶痴呆'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.185),
    r.timeframe = coalesce(r.timeframe, '随访');

MATCH (from) WHERE from.name = 'REM行为障碍'
MATCH (to) WHERE to.name = '进行性核上性麻痹'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.0),
    r.timeframe = coalesce(r.timeframe, '随访');

MATCH (from) WHERE from.name = 'REM行为障碍'
MATCH (to) WHERE to.name = '皮质基底节变性'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.0),
    r.timeframe = coalesce(r.timeframe, '随访');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:37"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/005-四失眠的评估与管理.md
[文本块]
四、失眠的评估与管理  

既往研究显示, 42% 的65岁以上老人报告至少有一种睡眠相关症状, 其中 23%~34% 有失眠症状, 7%~15% 晨醒后无恢复感; 认知功能损害患者的失眠发生率约为 49.9%。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠'})
SET 
    n.description = coalesce(n.description, '一种睡眠障碍，表现为入睡困难，维持睡眠困难，清晨过早醒来或睡眠质量差。');

MERGE (n:Symptom {name: '睡眠相关症状'})
SET 
    n.description = coalesce(n.description, '与睡眠有关的表现，可能包括入睡困难、早醒等。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '至少一种');

MERGE (n:Symptom {name: '晨醒后无恢复感'})
SET 
    n.description = coalesce(n.description, '早晨醒来后仍感到疲惫，未能恢复活力。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '7%~15%');

MERGE (n:Disease {name: '认知功能损害'})
SET 
    n.description = coalesce(n.description, '指认知过程的显著降低，影响思维、记忆、判断等。');

// 关系更新
MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '睡眠相关症状'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '23%~34%'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '晨醒后无恢复感'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '7%~15%'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '49.9%'),
    r.severity = coalesce(r.severity, '高');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:37"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/028-推荐意见.md
[文本块]
# 推荐意见  

1. 在照料者配合下，仔细调查白天人睡和觉醒时间以评估CRSWDs（IA级）。  

2. 至少连续记录7天的睡眠日记和（或）使用7天ACT检测以确诊CRSWDs（IIIB级）。  

3. 中文版清晨型与夜晚型问卷可以评估睡眠时相类型，并鉴别睡眠-觉醒模式和CRSWDs（IB级）。  

4. 时相标记（如核心体温、褪黑激素）可能有助于诊断（IIIC级）。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: 'CRSWDs'})
SET 
    n.description = coalesce(n.description, 'Circadian Rhythm Sleep-Wake Disorders'),
    n.severity = coalesce(n.severity, 'IA级');

MERGE (n:Symptom {name: '白天人睡和觉醒时间'})
SET 
    n.description = coalesce(n.description, '对白天人睡眠和觉醒时间的调查'),
    n.severity = coalesce(n.severity, '重要性中等'),
    n.frequency = coalesce(n.frequency, '每日');

MERGE (n:Symptom {name: '睡眠日记'})
SET 
    n.description = coalesce(n.description, '记录7天的睡眠日记以确诊睡眠障碍'),
    n.severity = coalesce(n.severity, '重要性高'),
    n.frequency = coalesce(n.frequency, '7天');

MERGE (n:Symptom {name: 'ACT检测'})
SET 
    n.description = coalesce(n.description, '使用ACT检测确认睡眠障碍'),
    n.severity = coalesce(n.severity, '重要性中等'),
    n.frequency = coalesce(n.frequency, '7天');

MERGE (n:Symptom {name: '问卷评估'})
SET 
    n.description = coalesce(n.description, '中文版问卷评估睡眠时相类型'),
    n.severity = coalesce(n.severity, '重要性中等'),
    n.frequency = coalesce(n.frequency, '依据所需');

MERGE (n:Symptom {name: '时相标记'})
SET 
    n.description = coalesce(n.description, '时相标记对诊断的辅助作用'),
    n.severity = coalesce(n.severity, '重要性低'),
    n.frequency = coalesce(n.frequency, '依据所需');

// 关系更新
MATCH (from) WHERE from.name = 'CRSWDs'
MATCH (to) WHERE to.name = '白天人睡和觉醒时间'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, 'IA级');

MATCH (from) WHERE from.name = 'CRSWDs'
MATCH (to) WHERE to.name = '睡眠日记'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '中'),
    r.severity = coalesce(r.severity, 'IIIB级');

MATCH (from) WHERE from.name = 'CRSWDs'
MATCH (to) WHERE to.name = 'ACT检测'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '中'),
    r.severity = coalesce(r.severity, 'IIIB级');

MATCH (from) WHERE from.name = 'CRSWDs'
MATCH (to) WHERE to.name = '问卷评估'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '低'),
    r.severity = coalesce(r.severity, 'IB级');

MATCH (from) WHERE from.name = 'CRSWDs'
MATCH (to) WHERE to.name = '时相标记'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.6),
    r.frequency = coalesce(r.frequency, '依据所需'),
    r.severity = coalesce(r.severity, 'IIIC级');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:40"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/027-一诊断与评估.md
[文本块]
# 诊断与评估  

CRSWDs 在认知功能损害的 MCI 期或更早阶段出现，表现为：
- 睡眠明显片段化
- 觉醒次数增加
- NREM 减少大于 REM 减少
- 夜间徘徊不睡，人睡及维持困难

睡眠时相变化主要为不规则睡眠-觉醒节律、睡眠-觉醒时相延迟障碍及睡眠-觉醒时相提前障碍。认知功能损害患者在出现 CRSWDs 的同时，常有 $90\\%$ 的患者伴有精神行为异常及昼夜节律的变化，最突出的精神行为异常为日落综合征。

CRSWDs 的诊断需调查人睡和起床时间，包括至少 1 周睡眠日记，并记录治疗睡眠障碍的具体方法及药物剂量。ACT 检测结果对诊断有重要作用。一些昼夜节律的生理指标（如微光褪黑激素分泌、最低核心体温）是确认 CRSWDs 的辅助工具。鉴别诊断 CRSWDs 需考虑痴呆患者其他的精神行为症状，如抑郁、淡漠与焦虑。

根据 ICSD-3 对 CRSWDs 的诊断标准：

1. 睡眠-觉醒紊乱 (ISWRD) 诊断必须同时满足以下标准：
   - A. 患者长期反复 $24\\,\\mathrm{~h~}$ 内不规则睡眠-觉醒发作，在计划的睡眠时间内失眠、在日间过度思睡（或需小睡）或两者均有；
   - B. 症状持续 $\\geqslant3$ 个月；
   - C. $\\mathrm{C}.\\geqslant7\\mathrm{~d~}$ 的睡眠日志或 ACT 监测显示无主睡眠期，在 $24\\,\\mathrm{~h~}$ 内有多次（至少 $\\geqslant3$ 次）不规则睡眠；
   - D. 排除其他睡眠障碍、内科或神经精神疾病、药物与物质使用情况。

2. 睡眠-觉醒时相延迟障碍 (DSWPD) 诊断必须同时满足以下标准：
   - A. 主要睡眠-觉醒时间较期望或所需要的睡眠-觉醒时间显著延迟（患者或照料者证实长期反复在人睡或觉醒困难）；
   - B. 症状持续 $\\geqslant3$ 个月；
   - C. 若允许自然睡眠，睡眠质量和时间正常且与年龄匹配，但仍为推迟的 $24\\,\\mathrm{~h~}$ 睡眠-觉醒节律；
   - D. 至少7d（最好14 d）的睡眠日志或 ACT 监测显示睡眠时相一贯延迟（监测时段应连续并包括工作/学习日及休息日）；
   - E. 睡眠-觉醒障碍不能用其他类型睡眠障碍、内科和神经或精神疾病、药物与物质使用解释。

3. 内在昼夜节律性睡眠-觉醒障碍 (ASWPD) 诊断必须同时满足以下标准：
   - A. 要睡眠-觉醒时间较期望或需要的时间提前；
   - B. 症状 $\\geqslant3$ 个月；
   - C. 如果允许自然醒，除睡眠-觉醒时间提前外，患者睡眠质量及时间可获改善；
   - D. 至少7d的睡眠日志或 ACT 监测显示睡眠时段总是稳定提前（监测时段应连续并包括工作/学习日及休息日）；
   - E. 睡眠-觉醒障碍不能用其他类型睡眠障碍、内科疾病、神经疾病或精神疾病、药物或物质使用解释。

"""
response = """
// 节点更新
MERGE (n:Disease {name: 'CRSWDs'})
SET 
    n.description = coalesce(n.description, '认知功能损害患者睡眠障碍'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Symptom {name: '睡眠明显片段化'})
SET 
    n.description = coalesce(n.description, '睡眠质量差，频繁醒来'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Symptom {name: '觉醒次数增加'})
SET 
    n.description = coalesce(n.description, '夜间醒来次数增多'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Symptom {name: 'NREM减少大于REM减少'})
SET 
    n.description = coalesce(n.description, 'NREM睡眠较少，REM睡眠变化相对较小'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Symptom {name: '夜间徘徊不睡'})
SET 
    n.description = coalesce(n.description, '夜间不能入睡，四处徘徊'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Symptom {name: '维持困难'})
SET 
    n.description = coalesce(n.description, '入睡后难以维持较长时间的睡眠'),
    n.severity = coalesce(n.severity, '严重'),
    n.frequency = coalesce(n.frequency, '常见');

MERGE (n:Disease {name: '睡眠-觉醒紊乱'})
SET 
    n.description = coalesce(n.description, '不规则的睡眠-觉醒模式'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Disease {name: '睡眠-觉醒时相延迟障碍'})
SET 
    n.description = coalesce(n.description, '主要睡眠时间显著延迟'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Disease {name: '内在昼夜节律性睡眠-觉醒障碍'})
SET 
    n.description = coalesce(n.description, '睡眠-觉醒时间提前'),
    n.category = coalesce(n.category, '睡眠障碍');

// 关系更新
MATCH (from) WHERE from.name = 'CRSWDs'
MATCH (to) WHERE to.name = '睡眠明显片段化'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = 'CRSWDs'
MATCH (to) WHERE to.name = '觉醒次数增加'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = 'CRSWDs'
MATCH (to) WHERE to.name = 'NREM减少大于REM减少'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = 'CRSWDs'
MATCH (to) WHERE to.name = '夜间徘徊不睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = 'CRSWDs'
MATCH (to) WHERE to.name = '维持困难'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '睡眠-觉醒紊乱'
MATCH (to) WHERE to.name = 'CRSWDs'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '睡眠-觉醒时相延迟障碍'
MATCH (to) WHERE to.name = 'CRSWDs'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '内在昼夜节律性睡眠-觉醒障碍'
MATCH (to) WHERE to.name = 'CRSWDs'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:55"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/006-一诊断与评估.md
[文本块]
# 诊断与评估  

根据《国际睡眠障碍分类-第3版(international classification of sleep disorders-3 edition, ICSD-3)》慢性失眠诊断标准:  
A. 患者自述或照料者观察到患者出现以下一种或者多种症状:  
(1) 入睡困难，  
(2) 睡眠维持困难，  
(3) 比期望起床时间更早醒来;  

B. 患者自述或照料者观察到患者因为夜间睡眠困难而出现以下一种或者多种症状:  
(1) 疲劳或缺乏精力，  
(2) 注意力、专注力或者记忆力下降，  
(3) 在社交、家庭、职业或学业等功能损害，  
(4) 情绪易烦躁或易激动，  
(5) 日间思睡，  
(6) 行为问题(多动、冲动或攻击性)，  
(7) 驱动力、精力或动力缺乏，  
(8) 易犯错或易出事故，  
(9) 对睡眠质量感到忧虑;  

C. 这些异常不能完全被睡眠条件(如无充足睡眠时间)或睡眠环境(如黑暗、安静、安全性、舒适性等)所解释;  

D. 上述症状至少每周出现3次;  
E. 上述症状持续至少3个月;  
F. 上述症状不能用其他睡眠障碍解释。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '慢性失眠'})
SET 
    n.description = coalesce(n.description, '根据国际睡眠障碍分类-第3版诊断标准的慢性失眠。');

MERGE (n:Symptom {name: '入睡困难'})
SET 
    n.description = coalesce(n.description, '患者自述或照料者观察到的症状之一。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '睡眠维持困难'})
SET 
    n.description = coalesce(n.description, '患者自述或照料者观察到的症状之一。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '比期望起床时间更早醒来'})
SET 
    n.description = coalesce(n.description, '患者自述或照料者观察到的症状之一。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '疲劳或缺乏精力'})
SET 
    n.description = coalesce(n.description, '由于夜间睡眠困难而出现的症状。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '注意力、专注力或者记忆力下降'})
SET 
    n.description = coalesce(n.description, '由于夜间睡眠困难而出现的症状。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '社交、家庭、职业或学业等功能损害'})
SET 
    n.description = coalesce(n.description, '由于夜间睡眠困难而出现的症状。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '情绪易烦躁或易激动'})
SET 
    n.description = coalesce(n.description, '由于夜间睡眠困难而出现的症状。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '日间思睡'})
SET 
    n.description = coalesce(n.description, '由于夜间睡眠困难而出现的症状。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '行为问题(多动、冲动或攻击性)'})
SET 
    n.description = coalesce(n.description, '由于夜间睡眠困难而出现的症状。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '驱动力、精力或动力缺乏'})
SET 
    n.description = coalesce(n.description, '由于夜间睡眠困难而出现的症状。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '易犯错或易出事故'})
SET 
    n.description = coalesce(n.description, '由于夜间睡眠困难而出现的症状。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

MERGE (n:Symptom {name: '对睡眠质量感到忧虑'})
SET 
    n.description = coalesce(n.description, '由于夜间睡眠困难而出现的症状。'),
    n.severity = coalesce(n.severity, '中等'),
    n.frequency = coalesce(n.frequency, '经常');

// 关系更新
MATCH (from) WHERE from.name = '入睡困难'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '睡眠维持困难'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '比期望起床时间更早醒来'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '疲劳或缺乏精力'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '注意力、专注力或者记忆力下降'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '社交、家庭、职业或学业等功能损害'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '情绪易烦躁或易激动'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '日间思睡'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '行为问题(多动、冲动或攻击性)'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '驱动力、精力或动力缺乏'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '易犯错或易出事故'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '对睡眠质量感到忧虑'
MATCH (to) WHERE to.name = '慢性失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '经常'),
    r.severity = coalesce(r.severity, '中等');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:56"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/029-二管理与治疗.md
[文本块]
# 管理与治疗  

首选治疗是非药物疗法，管理措施包括：  
- 光照治疗与褪黑素应用相结合  
- 体育锻炼  
- 增加社交活动  

帮助患者建立规律的睡眠-觉醒节律：  
- 蓝光治疗有助于睡眠维持障碍和睡眠时相提前的痴呆患者  
- 清晨光照有利于睡眠时相延迟的患者  
- 傍晚强光照射可改善痴呆患者夜间睡眠质量和减少日间思睡  
- 运动有益于认知功能损害患者的整体健康与睡眠，推荐参与一些力所能及、规律的运动  
- 鼓励照料者增加患者白天日光照射的时间  
- 日落综合征的治疗需基于患者生活方式和环境的调整  

药物治疗：  
- 坚持小剂量、短期用药原则  
- 避免应用BZDs药物  
- 外源性褪黑素对于重置生理性睡眠-觉醒周期作用有效  
- 下午 $1\\sim$2点使用褪黑素对睡眠时相提前的痴呆患者有效  
- 褪黑素和光照治疗可以稳定睡眠-觉醒节律，缩短痴呆和PD患者人睡时间  

"""
response = """
// 节点更新
MERGE (n:Treatment {name: '光照治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '通过光照来调节生理时钟');

MERGE (n:Treatment {name: '褪黑素应用'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '使用褪黑素以重置生理性睡眠-觉醒周期'),
    n.dosage = coalesce(n.dosage, '小剂量'),
    n.duration = coalesce(n.duration, '短期'),
    n.contraindication = coalesce(n.contraindication, '避免应用BZDs药物');

MERGE (n:Treatment {name: '体育锻炼'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '通过运动促进整体健康与睡眠'),
    n.duration = coalesce(n.duration, '规律');

MERGE (n:Treatment {name: '蓝光治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '有助于睡眠维持障碍的治疗');

MERGE (n:Treatment {name: '清晨光照'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '有利于睡眠时相延迟的患者');

MERGE (n:Treatment {name: '傍晚强光照射'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '改善痴呆患者夜间睡眠质量');

MERGE (n:Treatment {name: '外源性褪黑素'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '重置睡眠-觉醒周期的有效治疗');

MERGE (n:Symptom {name: '睡眠维持障碍'})
SET 
    n.description = coalesce(n.description, '难以维持持续睡眠');

MERGE (n:Symptom {name: '睡眠时相提前'})
SET 
    n.description = coalesce(n.description, '睡眠出现时间提前的情况');

MERGE (n:Symptom {name: '睡眠时相延迟'})
SET 
    n.description = coalesce(n.description, '睡眠出现时间延后的情况');

MERGE (n:Symptom {name: '夜间睡眠质量差'})
SET 
    n.description = coalesce(n.description, '夜间睡眠效果不佳');

MERGE (n:Symptom {name: '日间思睡'})
SET 
    n.description = coalesce(n.description, '白天感到困倦的现象');

MERGE (n:Disease {name: '认知功能损害'})
SET 
    n.description = coalesce(n.description, '描述认知功能损害的疾病');

// 关系更新
MATCH (from) WHERE from.name = '睡眠维持障碍'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '睡眠时相提前'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '偶见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '睡眠时相延迟'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '少见'),
    r.severity = coalesce(r.severity, '轻度');

MATCH (from) WHERE from.name = '夜间睡眠质量差'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '日间思睡'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '光照治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初始');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '褪黑素应用'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.95),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '中期');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '体育锻炼'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '持续');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '蓝光治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '评估');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '清晨光照'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '评估');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '傍晚强光照射'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '评估');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '外源性褪黑素'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '中期');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:27:57"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/019-一诊断与评估.md
[文本块]
# 诊断与评估

## RBD诊断标准
- **标准来源**: ICSD-3
- **标准要求**:
  - A. 重复发作的睡眠相关的言语和(或)复杂的运动行为
  - B. PSG证实在REM睡眠期发生这些行为，或根据临床病史推测该行为发生在REM睡眠期
  - C. PSG证实REM睡眠期出现骨骼肌失弛缓现象
  - D. 不能用其他因素解释（包括其他睡眠障碍、神经精神障碍、内科疾病、药物或物质滥用）

## 观察与鉴别诊断
- RBD发作不一定导致患者完全觉醒
- 患者可在惊醒时描述梦境内容
- 痴呆患者可能无法回忆和描述梦境

### 鉴别诊断包括:
- NREM期异态睡眠
- 睡眠呼吸障碍
- 周期性腿动
- 夜间发作的癫痫
- 夜间节律性运动障碍

"""
response = """
// 节点更新
MERGE (n:Disease {name: 'REM睡眠行为障碍'})
SET 
    n.code = coalesce(n.code, 'RBD'),
    n.description = coalesce(n.description, '重复发作的睡眠相关的言语和(或)复杂的运动行为'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Disease {name: 'NREM期异态睡眠'})
SET 
    n.description = coalesce(n.description, 'NREM期的非正常睡眠表现');

MERGE (n:Disease {name: '睡眠呼吸障碍'})
SET 
    n.description = coalesce(n.description, '睡眠时呼吸的异常');

MERGE (n:Disease {name: '周期性腿动症'})
SET 
    n.description = coalesce(n.description, '周期性腿动导致的睡眠干扰');

MERGE (n:Disease {name: '夜间发作的癫痫'})
SET 
    n.description = coalesce(n.description, '夜间癫痫发作');

MERGE (n:Disease {name: '夜间节律性运动障碍'})
SET 
    n.description = coalesce(n.description, '夜间周期性运动导致的睡眠障碍');

// 关系更新
MATCH (from) WHERE from.name = 'REM睡眠行为障碍'
MATCH (to) WHERE to.name = 'NREM期异态睡眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = 'REM睡眠行为障碍'
MATCH (to) WHERE to.name = '睡眠呼吸障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '中等'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = 'REM睡眠行为障碍'
MATCH (to) WHERE to.name = '周期性腿动症'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '低'),
    r.severity = coalesce(r.severity, '轻');

MATCH (from) WHERE from.name = 'REM睡眠行为障碍'
MATCH (to) WHERE to.name = '夜间发作的癫痫'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '中等'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = 'REM睡眠行为障碍'
MATCH (to) WHERE to.name = '夜间节律性运动障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '中等'),
    r.severity = coalesce(r.severity, '轻');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:28:06"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/030-推荐意见.md
[文本块]
# 推荐意见  

1. 蓝光治疗 - 改善 - 认知功能损害患者的睡眠维持障碍  
2. 蓝光治疗 - 改善 - 睡眠时相提前  
3. 清晨光照治疗 - 有助于 - 治疗睡眠时相延迟  
4. 傍晚光照治疗 - 增加 - 患者夜间睡眠时间  
5. 傍晚光照治疗 - 减少 - 日间思睡  
6. 褪黑素和光照结合治疗 - 有效 - 痴呆和 PD 患者  
7. 患者睡眠时 - 避免 - 暴露在光线下  
8. 鼓励患者 - 增加 - 日间自然光照  
9. 鼓励患者 - 增加 - 体育活动  
10. 下午1~2点应用褪黑素 - 改善 - 痴呆患者的ASWPD症状  
11. 日落综合征的治疗 - 基于 - 患者的生活方式和环境的改变  
12. 镇静催眠药 - 不用于 - 治疗痴呆患者的CRSWDs  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '认知功能损害患者的睡眠维持障碍'});

MERGE (n:Disease {name: '睡眠时相提前'});

MERGE (n:Disease {name: '睡眠时相延迟'});

MERGE (n:Disease {name: '患者夜间睡眠时间'});

MERGE (n:Disease {name: '日间思睡'});

MERGE (n:Disease {name: '痴呆'});

MERGE (n:Disease {name: 'PD'});

MERGE (n:Disease {name: 'ASWPD症状'});

MERGE (n:Disease {name: 'CRSWDs'});

MERGE (n:Treatment {name: '蓝光治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '改善认知功能损害患者的睡眠维持障碍');

MERGE (n:Treatment {name: '清晨光照治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '有助于治疗睡眠时相延迟');

MERGE (n:Treatment {name: '傍晚光照治疗'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '增加患者夜间睡眠时间');

MERGE (n:Treatment {name: '褪黑素和光照结合治疗'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '有效治疗痴呆和PD患者');

MERGE (n:Treatment {name: '镇静催眠药'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '不用于治疗痴呆患者的CRSWDs');

MERGE (n:Treatment {name: '下午1~2点应用褪黑素'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '改善痴呆患者的ASWPD症状');

// 关系更新
MATCH (from) WHERE from.name = '认知功能损害患者的睡眠维持障碍'
MATCH (to) WHERE to.name = '蓝光治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 1.0),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '睡眠时相延迟'
MATCH (to) WHERE to.name = '清晨光照治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 1.0),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '患者夜间睡眠时间'
MATCH (to) WHERE to.name = '傍晚光照治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 1.0),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '痴呆'
MATCH (to) WHERE to.name = '褪黑素和光照结合治疗'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 1.0),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = 'ASWPD症状'
MATCH (to) WHERE to.name = '下午1~2点应用褪黑素'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 1.0),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '初期');

MATCH (from) WHERE from.name = '痴呆'
MATCH (to) WHERE to.name = 'CRSWDs'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 1.0),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '日间思睡'
MATCH (to) WHERE to.name = '患者夜间睡眠时间'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 1.0),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中等');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:28:09"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/020-推荐意见.md
[文本块]
推荐意见：  
1. 视频 PSG 是确诊 RBD 的金标准。  
2. RBD 筛查问卷（REM sleep behavior disorder screening questionnaire, RBDSQ）与香港版 RBD 问卷（RBDQ-HK）均可用于 RBD 筛查。RBDQ-HK 可用于评估 RBD 的发作频率和严重程度；RBD 严重程度量表（REM sleep behavior disorder severity-scale, RBDSS）可用于评估患者症状的特点。  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '快速眼动睡眠行为障碍'})
SET 
    n.short_name = coalesce(n.short_name, 'RBD');

MERGE (n:Examination {name: '视频 PSG'})
SET 
    n.description = coalesce(n.description, '诊断 RBD 的金标准'),
    n.method = coalesce(n.method, '视频多导睡眠监测'),
    n.requirement = coalesce(n.requirement, '患者必须经过合适的准备');

MERGE (n:Scale {name: 'RBD 严重程度量表'})
SET 
    n.description = coalesce(n.description, '用于评估 RBD 的症状严重程度'),
    n.score_range = coalesce(n.score_range, '1-5'),
    n.interpretation = coalesce(n.interpretation, '分数越高，症状越严重');

MERGE (n:Scale {name: 'RBD 筛查问卷'})
SET 
    n.description = coalesce(n.description, '用于筛查 RBD 的问卷'),
    n.score_range = coalesce(n.score_range, '是/否'),
    n.interpretation = coalesce(n.interpretation, '回答为‘是’则可能存在 RBD');

MERGE (n:Scale {name: '香港版 RBD 问卷'})
SET 
    n.description = coalesce(n.description, '用于 RBD 筛查的香港版本问卷'),
    n.score_range = coalesce(n.score_range, '1-5'),
    n.interpretation = coalesce(n.interpretation, '分数越高，RBD 可能性越大');

// 关系更新
MATCH (from) WHERE from.name = 'RBD 严重程度量表'
MATCH (to) WHERE to.name = '快速眼动睡眠行为障碍'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 1.0),
    r.recommendation_level = coalesce(r.recommendation_level, '强烈推荐');

MATCH (from) WHERE from.name = 'RBD 筛查问卷'
MATCH (to) WHERE to.name = '快速眼动睡眠行为障碍'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.8),
    r.recommendation_level = coalesce(r.recommendation_level, '推荐');

MATCH (from) WHERE from.name = '香港版 RBD 问卷'
MATCH (to) WHERE to.name = '快速眼动睡眠行为障碍'
MERGE (from)-[r:ASSESSED_BY]->(to)
SET 
    r.applicability = coalesce(r.applicability, 0.8),
    r.recommendation_level = coalesce(r.recommendation_level, '推荐');

MATCH (from) WHERE from.name = '视频 PSG'
MATCH (to) WHERE to.name = '快速眼动睡眠行为障碍'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:28:12"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/007-推荐意见.md
[文本块]
# 推荐意见  

1. 优先进行认知功能损害患者失眠病因筛查  
   - 相关因素：其他类型睡眠障碍、躯体疾病、精神疾病、药物及环境因素  

2. 早期和轻度认知功能损害患者  
   - 工具：匹兹堡睡眠质量指数(Pittsburgh sleep quality index, PSQI)  
   - 目的：评估患者的整体睡眠质量  

3. 对配合检查患者  
   - 方法：PSG等实验室检查  
   - 目的：诊断其他类型睡眠障碍  

4. 对不配合检查患者  
   - 方法：体动记录仪(actigraphy, ACT)  
   - 目的：评估睡眠-觉醒模式、失眠的治疗效果及睡眠-觉醒节律变化  

"""
response = """
// 节点更新
MERGE (n:Disease {name: '认知功能损害'})
SET 
    n.description = coalesce(n.description, '认知功能的减退，影响日常生活和活动的能力');

MERGE (n:Disease {name: '失眠'})
SET 
    n.description = coalesce(n.description, '睡眠质量差，难以入睡或持续睡眠的状态');

MERGE (n:Disease {name: '其他类型睡眠障碍'})
SET 
    n.description = coalesce(n.description, '包括各种非正常睡眠状态，如嗜睡症、睡眠呼吸暂停等');

MERGE (n:Disease {name: '躯体疾病'})
SET 
    n.description = coalesce(n.description, '对生理健康造成影响的各种疾病');

MERGE (n:Disease {name: '精神疾病'})
SET 
    n.description = coalesce(n.description, '影响情绪、思维和行为的各种精神状态');

MERGE (n:Disease {name: '药物及环境因素'})
SET 
    n.description = coalesce(n.description, '影响睡眠的药物和环境条件');

MERGE (n:Examination {name: '匹兹堡睡眠质量指数'})
SET 
    n.description = coalesce(n.description, '评估患者的整体睡眠质量'),
    n.method = coalesce(n.method, '问卷调查'),
    n.requirement = coalesce(n.requirement, '患者自我评估');

MERGE (n:Examination {name: 'PSG实验室检查'})
SET 
    n.description = coalesce(n.description, '多导睡眠监测，用于睡眠障碍的诊断'),
    n.method = coalesce(n.method, '多导监测'),
    n.requirement = coalesce(n.requirement, '患者配合');

MERGE (n:Examination {name: '体动记录仪'})
SET 
    n.description = coalesce(n.description, '用于评估睡眠-觉醒模式的设备'),
    n.method = coalesce(n.method, '身体活动监测'),
    n.requirement = coalesce(n.requirement, '患者佩戴');

// 关系更新
MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '其他类型睡眠障碍'
MATCH (to) WHERE to.name = '失眠'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '躯体疾病'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '时常'),
    r.severity = coalesce(r.severity, '轻');

MATCH (from) WHERE from.name = '精神疾病'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '偶发'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '药物及环境因素'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.6),
    r.frequency = coalesce(r.frequency, '时常'),
    r.severity = coalesce(r.severity, '轻');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '匹兹堡睡眠质量指数'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = 'PSG实验室检查'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '中'),
    r.mandatory = coalesce(r.mandatory, 'false');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '体动记录仪'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '低'),
    r.mandatory = coalesce(r.mandatory, 'false');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:28:36"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/010-一诊断与评估.md
[文本块]
# 诊断与评估  

认知功能损害患者的EDS对日间功能改善有重要价值。EDS与居家护理痴呆患者的认知障碍严重程度正相关。日间多次思睡会干扰痴呆患者的日常活动，部分患者可能出现日落综合征，表现为傍晚激越、漫游、易激惹和思维混乱。

调查痴呆患者思睡情况，尤其是中、重度痴呆患者，需详细了解照料者观察到的临床印象，并结合ACT检查进行更准确评估。认知功能下降的幅度与主观问卷评估EDS的严重程度相关，Epworth思睡量表（ESS）是常用的主观问卷，$\\mathrm{ESS}>10$ 表示思睡。对于无法准确记录睡眠日志的认知损害伴EDS患者，ACT是一种良好的检测工具，能够连续评估数日的睡眠-觉醒模式。

部分患者可以在整夜PSG监测后，借助多次睡眠潜伏期试验（MSLT）或清醒维持试验（MWT）来客观评估EDS。因为EDS可能与中枢性睡眠增多有关，如发作性睡病或原发性睡眠增多，需注意与这些疾病进行鉴别。在诊断认知功能损害患者，尤其是住护理机构的AD患者和VaD患者是否患有EDS时，应排除罹患SDB的可能性。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '认知功能损害'})
SET 
    n.description = coalesce(n.description, '认知功能下降的障碍'),
    n.category = coalesce(n.category, '神经系统疾病');

MERGE (n:Disease {name: '日间过度嗜睡症'})
SET 
    n.description = coalesce(n.description, '白天异常嗜睡的症状'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Disease {name: '睡眠呼吸暂停'})
SET 
    n.description = coalesce(n.description, '晚上睡觉时呼吸暂停的症状'),
    n.category = coalesce(n.category, '睡眠障碍');

MERGE (n:Disease {name: '发作性睡病'})
SET 
    n.description = coalesce(n.description, '一种以突发的睡眠发作为特征的疾病'),
    n.category = coalesce(n.category, '神经系统疾病');

MERGE (n:Disease {name: '原发性睡眠增多症'})
SET 
    n.description = coalesce(n.description, '以过度嗜睡为特征的疾病'),
    n.category = coalesce(n.category, '神经系统疾病');

MERGE (n:Symptom {name: '日落综合征'})
SET 
    n.description = coalesce(n.description, '傍晚激越、漫游、易激惹和思维混乱的症状'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Symptom {name: '思睡'})
SET 
    n.description = coalesce(n.description, '有意无意的白天嗜睡表现'),
    n.severity = coalesce(n.severity, '严重');

MERGE (n:Symptom {name: '中、重度痴呆患者的思睡'})
SET 
    n.description = coalesce(n.description, '认知障碍严重患者的嗜睡症状'),
    n.severity = coalesce(n.severity, '严重');

MERGE (n:Examination {name: 'Epworth思睡量表'})
SET 
    n.description = coalesce(n.description, '主观问卷用于评估日间嗜睡'),
    n.method = coalesce(n.method, '问卷调查'),
    n.requirement = coalesce(n.requirement, '适用于任何年龄');

MERGE (n:Examination {name: '多次睡眠潜伏期试验'})
SET 
    n.description = coalesce(n.description, '客观评估睡眠潜伏期的检测方法'),
    n.method = coalesce(n.method, '临床试验'),
    n.requirement = coalesce(n.requirement, '在实验室进行');

MERGE (n:Examination {name: '清醒维持试验'})
SET 
    n.description = coalesce(n.description, '评估个体在保持清醒状态下的表现'),
    n.method = coalesce(n.method, '临床试验'),
    n.requirement = coalesce(n.requirement, '在实验室进行');

// 关系更新
MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = 'Epworth思睡量表'
MERGE (from)-[r:REQUIRES_EXAM]->(to)
SET 
    r.priority = coalesce(r.priority, '高'),
    r.mandatory = coalesce(r.mandatory, 'true');

MATCH (from) WHERE from.name = '日间过度嗜睡症'
MATCH (to) WHERE to.name = '思睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '睡眠呼吸暂停'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.7),
    r.timeframe = coalesce(r.timeframe, '长期');

MATCH (from) WHERE from.name = '日间过度嗜睡症'
MATCH (to) WHERE to.name = '日落综合征'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '中'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '日间过度嗜睡症'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '急性');

MATCH (from) WHERE from.name = '发作性睡病'
MATCH (to) WHERE to.name = '思睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '严重');

MATCH (from) WHERE from.name = '原发性睡眠增多症'
MATCH (to) WHERE to.name = '思睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '中'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '中、重度痴呆患者的思睡'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '高'),
    r.severity = coalesce(r.severity, '严重');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:28:38"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/009-推荐意见.md
[文本块]
# 【推荐意见】  

1. 失眠病因的治疗是关键(IA级)。  
2. 药物治疗是认知功能损害患者失眠的有效方法，需避免长期使用镇静催眠药物，必要时每4周重新评估一次(IA级)。  
3. 非BZDs和褪黑素受体激动剂是认知功能损害患者失眠治疗的首选催眠药物(IIB级)，需监测不良反应(IA级)。痴呆患者可使用褪黑素缓释剂(IIB级)。合并SDB患者应避免或谨慎使用长效BZDs，必要时小剂量使用，尤其对未治疗或不配合治疗SDB的痴呆患者(IIB级)。  
4. 低剂量非典型抗精神病药物可用于伴有严重激越、幻觉或妄想的睡眠维持困难的认知功能损害患者(IIB级)。  
5. 低剂量曲唑酮可用于SDB患者(IIB级)。抗抑郁药(SSRIs、三环类、米氮平)和抗精神病药物可能加重RBD和RLS。  
6. 胆碱酯酶抑制剂和NMDA受体拮抗剂可改善认知功能损害患者的认知和睡眠质量，但在服药或加量初期可能加重睡眠障碍。  
7. 应尽量减少使用会加重失眠的药物，如利尿剂、β受体阻滞剂、支气管扩张剂、皮质类固醇激素、H2受体阻滞剂；确需使用应不晚于睡前6小时服用。  
8. 光照治疗有助于改善认知功能损害患者的认知与失眠症状(IIB级)。  
9. 药物与CBT-I相结合可能效果更好(IIB级)。  

五、日间过度思睡(EDS)的评估与管理  
痴呆患者EDS的患病率高达38.4%，其中AD患者有30.6%存在EDS；DLB患者出现EDS比例更高，程度更为严重，EDS往往出现在DLB患者的早期，AD患者EDS多出现在疾病中晚期。EDS和RBD与PD相关认知功能损害患者的认知损伤程度相关，多巴胺受体激动剂可能诱发EDS。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠'})
SET 
    n.code = coalesce(n.code, 'G47.00'),
    n.description = coalesce(n.description, '一种常见的睡眠障碍，表现为入眠困难、睡眠中断或早醒等症状'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Disease {name: '认知功能损害'})
SET 
    n.code = coalesce(n.code, 'F06.7'),
    n.description = coalesce(n.description, '涉及思维、记忆及其他认知功能下降的综合症'),
    n.category = coalesce(n.category, '神经系统疾病'),
    n.severity = coalesce(n.severity, '严重');

MERGE (n:Disease {name: '日间过度思睡'})
SET 
    n.code = coalesce(n.code, 'G47.10'),
    n.description = coalesce(n.description, '白天过度嗜睡，影响日常生活'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Disease {name: '痴呆'})
SET 
    n.code = coalesce(n.code, 'F00-F03'),
    n.description = coalesce(n.description, '智能下降严重到影响社会生活及生活自理的状态'),
    n.category = coalesce(n.category, '神经系统疾病'),
    n.severity = coalesce(n.severity, '严重');

MERGE (n:Disease {name: '快速眼动行为障碍'})
SET 
    n.code = coalesce(n.code, 'G47.50'),
    n.description = coalesce(n.description, '在快速眼动睡眠期出现的异常运动或行为'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '中等');

MERGE (n:Disease {name: '不宁腿综合征'})
SET 
    n.code = coalesce(n.code, 'G25.81'),
    n.description = coalesce(n.description, '在休息时感到腿部不适，并伴有移动腿部的冲动'),
    n.category = coalesce(n.category, '睡眠障碍'),
    n.severity = coalesce(n.severity, '轻度');

MERGE (n:Treatment {name: '非BZDs'})
SET 
    n.description = coalesce(n.description, '非苯二氮平类睡眠药物，适用于失眠治疗'),
    n.type = coalesce(n.type, '药物'),
    n.dosage = coalesce(n.dosage, '视患者情况而定'),
    n.duration = coalesce(n.duration, '按需'),
    n.contraindication = coalesce(n.contraindication, '对苯二氮平类药物过敏');

MERGE (n:Treatment {name: '褪黑素受体激动剂'})
SET 
    n.description = coalesce(n.description, '结合褪黑素受体的药物，能有效治疗失眠'),
    n.type = coalesce(n.type, '药物'),
    n.dosage = coalesce(n.dosage, '视患者情况而定'),
    n.duration = coalesce(n.duration, '按需'),
    n.contraindication = coalesce(n.contraindication, '对褪黑素过敏');

MERGE (n:Treatment {name: '低剂量曲唑酮'})
SET 
    n.description = coalesce(n.description, '用于伴有睡眠维持困难的患者的治疗'),
    n.type = coalesce(n.type, '药物'),
    n.dosage = coalesce(n.dosage, '低剂量'),
    n.duration = coalesce(n.duration, '按需'),
    n.contraindication = coalesce(n.contraindication, '对曲唑酮过敏');

MERGE (n:Treatment {name: '胆碱酯酶抑制剂'})
SET 
    n.description = coalesce(n.description, '改善认知功能损害患者认知和睡眠质量的药物'),
    n.type = coalesce(n.type, '药物'),
    n.dosage = coalesce(n.dosage, '视患者情况而定'),
    n.duration = coalesce(n.duration, '按需'),
    n.contraindication = coalesce(n.contraindication, '对胆碱酯酶抑制剂过敏');

MERGE (n:Treatment {name: 'NMDA受体拮抗剂'})
SET 
    n.description = coalesce(n.description, '可能改善认知功能损害患者的睡眠'),
    n.type = coalesce(n.type, '药物'),
    n.dosage = coalesce(n.dosage, '视患者情况而定'),
    n.duration = coalesce(n.duration, '按需'),
    n.contraindication = coalesce(n.contraindication, '对NMDA受体拮抗剂过敏');

MERGE (n:Treatment {name: '抗抑郁药'})
SET 
    n.description = coalesce(n.description, '可能加重RBD和RLS的药物'),
    n.type = coalesce(n.type, '药物'),
    n.dosage = coalesce(n.dosage, '视患者情况而定'),
    n.duration = coalesce(n.duration, '按需'),
    n.contraindication = coalesce(n.contraindication, '对抗抑郁药过敏');

// 关系更新
MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '非BZDs'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '急性');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '褪黑素受体激动剂'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.85),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '急性');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '胆碱酯酶抑制剂'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '慢性');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '日间过度思睡'
MATCH (to) WHERE to.name = '痴呆'
MERGE (from)-[r:MAY_CAUSE]->(to)
SET 
    r.probability = coalesce(r.probability, 0.38),
    r.timeframe = coalesce(r.timeframe, '长期');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '快速眼动行为障碍'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.75),
    r.frequency = coalesce(r.frequency, '时常'),
    r.severity = coalesce(r.severity, '中等');

MATCH (from) WHERE from.name = '日间过度思睡'
MATCH (to) WHERE to.name = '不宁腿综合征'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.6),
    r.frequency = coalesce(r.frequency, '频繁'),
    r.severity = coalesce(r.severity, '中等');

"""

[[message_pairs]]
timestamp = "2024-12-12 01:28:39"
message = """

[背景信息]
我现在正在进行睡眠医疗知识图谱的构建工作, 计划使用大语言模型进行实体识别、关系抽取和知识规则构建, 使其输出可供neo4j直接导入.
[命令]
[CYPHER_SCHEMA]部分定义了本项目中我期望的neo4j知识图谱的实体和关系定义, 接下来我将会给你数据集([隶属文件名]和[隶属文件分块名]部分)中的[文本块];
请参考[示例输出]部分的Cypher语句依据[CYPHER_SCHEMA]部分提供的neo4j schema进行实体和关系抽取, 输出纯neo4j Cypher语句, 
[详细补充需求]
输出的Cypher语句不要分号, 不需要转义, 也不需要使用markdown语法等, 以便最后我可以通过字符串拼接直接导入neo4j数据库;
请保证你生成的语句可以多次执行而不出现重复定义问题;
请保证语法正确性;
请一定尽可能抽取Cypher语句, 当无法抽取符合主题的语句时输出\"// 空\"(不含引号)

// 定义节点属性示例
// 疾病节点
CREATE (:Disease {
    name: String,           // 疾病名称
    code: String,           // 疾病编码
    description: String,    // 疾病描述
    category: String,       // 疾病分类
    severity: String        // 严重程度
});

// 症状节点
CREATE (:Symptom {
    name: String,           // 症状名称
    description: String,    // 症状描述
    severity: String,       // 严重程度
    frequency: String       // 发生频率
});

// 检查项目节点
CREATE (:Examination {
    name: String,           // 检查名称
    description: String,    // 检查描述
    method: String,         // 检查方法
    requirement: String     // 检查要求
});

// 治疗方案节点
CREATE (:Treatment {
    name: String,           // 治疗名称
    type: String,           // 类型(药物/非药物)
    description: String,    // 治疗描述
    dosage: String,         // 剂量(药物)
    duration: String,       // 持续时间
    contraindication: String // 禁忌症
});

// 量表工具节点
CREATE (:Scale {
    name: String,           // 量表名称
    description: String,    // 量表描述
    score_range: String,    // 分数范围
    interpretation: String  // 结果解释
});

// 风险因素节点
CREATE (:RiskFactor {
    name: String,           // 因素名称
    description: String,    // 描述
    impact_level: String    // 影响程度
});

// 并发症节点
CREATE (:Complication {
    name: String,           // 并发症名称
    description: String,    // 描述
    severity: String        // 严重程度
});

// 定义关系类型
// 症状-疾病关系
CREATE (:Symptom)-[:INDICATES {
    confidence: Float,      // 置信度
    frequency: String,      // 发生频率
    severity: String        // 严重程度
}]->(:Disease);

// 疾病-检查关系
CREATE (:Disease)-[:REQUIRES_EXAM {
    priority: String,       // 优先级
    mandatory: Boolean      // 是否必需
}]->(:Examination);

// 疾病-治疗关系
CREATE (:Disease)-[:TREATED_BY {
    effectiveness: Float,   // 有效性
    priority: String,       // 优先级
    stage: String          // 治疗阶段
}]->(:Treatment);

// 疾病-并发症关系
CREATE (:Disease)-[:MAY_CAUSE {
    probability: Float,     // 发生概率
    timeframe: String      // 时间框架
}]->(:Complication);

// 疾病-风险因素关系
CREATE (:Disease)-[:INFLUENCED_BY {
    impact_level: String,   // 影响程度
    evidence_level: String  // 证据等级
}]->(:RiskFactor);

// 疾病-量表关系
CREATE (:Disease)-[:ASSESSED_BY {
    applicability: Float,   // 适用性
    recommendation_level: String  // 推荐级别
}]->(:Scale);

[关系抽取说明]
抽取时请重点关注[CYPHER_SCHEMA]中的这些实体节点: Disease Symptom Treatment Complication
以及这些关系INDICATES TREATED_BY INDICATES REQUIRES_EXAM;
请尽你可能抽取全部关系
[示例输出]
MERGE (d1:Disease {name: \"阻塞性睡眠呼吸暂停低通气综合征\", short_name: \"OSAHS\"})
MERGE (c1:Disease {name: \"高血压\"})
MERGE (c2:Disease {name: \"糖尿病\"})
MERGE (c1)-[:COMPLICATION_OF]->(d1)
MERGE (c2)-[:COMPLICATION_OF]->(d1)

[隶属文件名]
认知功能损害患者睡眠障碍评估和管理的专家共识.md
[隶属文件分块名]
认知功能损害患者睡眠障碍评估和管理的专家共识/008-二管理与治疗.md
[文本块]
# 管理与治疗

在管理失眠时，必须了解患者伴发的慢性疾病及其相关的多种治疗药物。例如，PDD患者失眠可能与运动迟缓导致翻身困难、膀胱高反应性导致夜尿增多、肢体疼痛、合并RLS等有关，抗帕金森病药物也可导致PDD患者入睡困难。选择治疗方案前，首先要区分人睡困难和睡眠维持困难，并考虑是否共病其他类型的睡眠-觉醒障碍。睡眠维持困难的患者应该检查是否存在SDB，排查可能会引起睡眠呼吸暂停的相关药物。

非苯二氮草类药物（非BZDs）（如唑吡坦、右佐匹克隆）和褪黑素受体激动剂是认知功能损害患者首选的催眠药物。褪黑素对改善痴呆患者失眠作用有限，但褪黑素缓释剂可改善早期认知功能损害患者的认知功能和睡眠维持障碍；而褪黑素受体激动剂雷美替胺和阿戈美拉汀用于痴呆患者的研究还比较少。非典型抗精神病药可减轻认知功能损害患者的精神行为异常并改善夜间睡眠质量，但应特别注意抗精神病药物具有增加痴呆患者心脑血管意外、猝死、跌倒、加重认知损害的风险，如有需要应小剂量使用。有报道低剂量非典型抗精神病药物（利培酮、奥氮平、喹硫平等）可改善患者睡眠质量和夜间精神行为紊乱，减轻照料者负担。

镇静催眠药，如苯二氮草类受体激动剂（BZDs）与非BZDs可提高睡眠质量，增加总睡眠时间，减少夜间觉醒次数。镇静催眠药虽然可短期缓解认知功能损害患者的失眠症状，但应避免长期使用（不超过3~6个月），因长期使用会导致药物依赖、药效减退、药源性失眠、成瘾等。认知功能损害患者出现SDB时，应避免或谨慎使用长效BZDs，以免出现呼吸抑制和加重认知损伤；长效BZDs还与日间失忆、认知损害和EDS有关。低剂量曲唑酮可用于合并失眠的轻中度痴呆患者，可提高患者总睡眠时间和睡眠效率，且不影响认知功能及日间功能，但应注意低血压等不良反应。

失眠认知行为治疗（CBT-I）对共病失眠的早期认知功能损害患者有一定疗效，药物和CBT-I结合疗法是治疗认知功能损害患者失眠的最佳方案。光照疗法对伴有失眠的痴呆患者有效，特别是对昼夜节律紊乱和失眠患者有轻、中度疗效。荟萃分析显示，光照疗法结合其他干预措施，如鼓励痴呆患者外出锻炼、户外散步；限制咖啡或茶等兴奋剂摄入；减少白天卧床时间；改变生活习惯（固定作息时间、卧室只用来睡眠等）和睡眠环境（减少噪音、增加光照）等效果确切，能明显提高睡眠时间、减少觉醒次数与激越行为、增加白天清醒时间、提高认知水平。

"""
response = """
// 节点更新
MERGE (n:Disease {name: '失眠'})
SET 
    n.description = coalesce(n.description, '一种常见的睡眠障碍，表现为入睡困难、睡眠维持困难或早醒。');

MERGE (n:Disease {name: '认知功能损害'})
SET 
    n.description = coalesce(n.description, '指到达一定年龄与正常认知思想能力退化相较，影响生活与学习能力');

MERGE (n:Disease {name: '运动迟缓'})
SET 
    n.description = coalesce(n.description, '影响运动的表现，通常与神经系统疾病相关');

MERGE (n:Disease {name: '膀胱高反应性'})
SET 
    n.description = coalesce(n.description, '膀胱异常过度活跃，导致频繁排尿');

MERGE (n:Disease {name: '肢体疼痛'})
SET 
    n.description = coalesce(n.description, '一般指躯体某部位的疼痛，影响日常生活');

MERGE (n:Disease {name: 'RLS'})
SET 
    n.description = coalesce(n.description, '静坐不安症，表现为腿部的不适感，导致患者无法静止');

MERGE (n:Disease {name: 'SDB'})
SET 
    n.description = coalesce(n.description, '睡眠呼吸暂停，指在睡眠中反复出现呼吸暂停或呼吸减弱的症状');

MERGE (n:Treatment {name: '非苯二氮草类药物'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于治疗失眠的药物，如唑吡坦、右佐匹克隆'),
    n.duration = coalesce(n.duration, '3-6个月'),
    n.contraindication = coalesce(n.contraindication, '药物依赖与成瘾');

MERGE (n:Treatment {name: '褪黑素受体激动剂'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '治疗失眠的药物，用于痴呆患者'),
    n.contraindication = coalesce(n.contraindication, '效果有限');

MERGE (n:Treatment {name: '非典型抗精神病药'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '可改善夜间睡眠质量的药物'),
    n.contraindication = coalesce(n.contraindication, '增加心脑血管风险');

MERGE (n:Treatment {name: '曲唑酮'})
SET 
    n.type = coalesce(n.type, '药物'),
    n.description = coalesce(n.description, '用于合并失眠的轻中度痴呆患者，能提高睡眠效率'),
    n.contraindication = coalesce(n.contraindication, '低血压');

MERGE (n:Treatment {name: '失眠认知行为治疗(CBT-I)'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '针对共病失眠的认知行为干预'),
    n.duration = coalesce(n.duration, '长期');

MERGE (n:Treatment {name: '光照疗法'})
SET 
    n.type = coalesce(n.type, '非药物'),
    n.description = coalesce(n.description, '对伴有失眠的痴呆患者有效的治疗方法'),
    n.duration = coalesce(n.duration, '短期至长期');

// 关系更新
MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '认知功能损害'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.9),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '运动迟缓'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.8),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '中');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '膀胱高反应性'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '轻');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '肢体疼痛'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.7),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '轻');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = 'RLS'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.6),
    r.frequency = coalesce(r.frequency, '偶尔'),
    r.severity = coalesce(r.severity, '轻');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = 'SDB'
MERGE (from)-[r:INDICATES]->(to)
SET 
    r.confidence = coalesce(r.confidence, 0.85),
    r.frequency = coalesce(r.frequency, '常见'),
    r.severity = coalesce(r.severity, '重');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '非苯二氮草类药物'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.75),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '治疗');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '褪黑素受体激动剂'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.65),
    r.priority = coalesce(r.priority, '中'),
    r.stage = coalesce(r.stage, '维护');

MATCH (from) WHERE from.name = '认知功能损害'
MATCH (to) WHERE to.name = '非典型抗精神病药'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '治疗');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '曲唑酮'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.8),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '治疗');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '失眠认知行为治疗(CBT-I)'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.9),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '联合治疗');

MATCH (from) WHERE from.name = '失眠'
MATCH (to) WHERE to.name = '光照疗法'
MERGE (from)-[r:TREATED_BY]->(to)
SET 
    r.effectiveness = coalesce(r.effectiveness, 0.7),
    r.priority = coalesce(r.priority, '高'),
    r.stage = coalesce(r.stage, '辅助治疗');

"""
